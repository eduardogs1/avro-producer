{
    "name": "ProductChangesEnvelope",
    "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
    "subject": "meccano.productandcatalog.product.v6-value",
    "doc": "Avro envelope that holds commercial components' changes.",
    "type": "record",
    "fields": [
      {"name": "metadata", "type": "com.inditex.aqsw.pipe.v1.Metadata", "doc": "Avro's metadata information."},
      {"name": "payload", "doc": "Content of message", "type": [
        {"name": "CommercialComponentAvailabilityChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds availability changes in a Commercial Component.",
          "fields": [
            {"name": "store_id", "type": "long", "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component's identifier."},
            {"name": "commercial_component_type",
              "doc": "Type of commercial component.",
              "type": {
                "name": "CommercialComponentType",
                "type": "enum",
                "symbols": ["PRODUCT","SINGLE_COMPONENT","BUNDLE_COMPONENT","BANNER"]
              }
            },
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event's date in microseconds."},
            {"name": "availability",
              "doc": "Availability information of the current commercial component.",
              "type": {
                "name": "Availability",
                "type": "enum",
                "symbols": ["IN_STOCK", "OUT_OF_STOCK","COMING_SOON", "BACK_SOON"]
              }
            },
            {
              "name": "items",
              "doc": "List of child items of the current commercial component.",
              "type": {
                "type": "array",
                "items": {
                  "name": "AvailabilityItem",
                  "doc": "Class that holds availability information for an item bean (aka an SKU).",
                  "type": "record",
                  "fields": [
                    {
                      "name": "item_id",
                      "type": "long",
                      "doc": "Item's identifier"
                    },
                    {
                      "name": "availability",
                      "type": "Availability",
                      "doc": "Item's availability information."
                    },
                    {
                      "name": "first_availability_date",
                      "type": ["null","long"],
                      "logicalType": "timestamp-micros",
                      "doc": "First visible date in microseconds."
                    },
                    {
                      "name": "is_available",
                      "type": ["null","boolean"],
                      "doc": "Whether the item is available"
                    },
                    {
                      "name": "subscription_type",
                      "doc": "Availability subscription type for item",
                      "type": ["null", {
                        "name": "AvailabilitySubscriptionType",
                        "type": "enum",
                        "symbols": ["BACK_SOON", "COMING_SOON"]
                      }]
                    }
                  ]
                }
              }
            }
          ]
        },
        {"name": "CommercialComponentPriceChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "doc": "Class that holds price changes in a Commercial Component.",
          "type": "record",
          "fields": [
            {"name": "store_id", "type": "long", "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component's identifier."},
            {"name": "commercial_component_type", "type": "CommercialComponentType", "doc": "Type of commercial component."},
            {"name": "environment",
              "doc": "Environment where the change has been processed.",
              "type": {
                "name": "Environment",
                "type": "enum",
                "symbols": ["DRAFT", "LIVE"]
              }
            },
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event's date in microseconds."},
            {
              "name": "items",
              "doc": "List of items child of the current commercial component.",
              "type": {
                "type": "array",
                "items": {
                  "name": "PriceItem",
                  "type": "record",
                  "doc": "Class that holds price information for an item bean.",
                  "fields": [
                    {
                      "name": "item_id",
                      "type": "long",
                      "doc": "Item's identifier"
                    },
                    {
                      "name": "offer",
                      "doc": "Contains list of prices of the item bean.",
                      "type": {
                        "name": "Offer",
                        "type": "record",
                        "doc": "Class that holds the list of prices of the item bean.",
                        "fields": [
                          {
                            "name": "prices",
                            "doc": "List of prices of the current item.",
                            "type": {
                              "type": "array",
                              "items": {
                                "name": "Price",
                                "type": "record",
                                "doc": "Class that holds price information for a given period of time.",
                                "fields": [
                                  {
                                    "name": "start_date",
                                    "type": "long",
                                    "logicalType": "timestamp-millis",
                                    "doc": "Starting period date in milliseconds since epoch time where the price becomes valid."
                                  },
                                  {
                                    "name": "end_date",
                                    "type": "long",
                                    "logicalType": "timestamp-millis",
                                    "order": "ignore",
                                    "doc": "Ending period date in milliseconds since epoch time where the price stops being valid."
                                  },
                                  {
                                    "name": "price",
                                    "type": "long",
                                    "order": "ignore",
                                    "doc": "Current price during the current period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents)."
                                  },
                                  {
                                    "name": "old_price",
                                    "type": ["null", "long"],
                                    "order": "ignore",
                                    "doc": "Previous price of the product during a sales period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents). This is optional and used to compare previous and current prices during sales."
                                  },
                                  {
                                    "name": "currency_iso",
                                    "type": "string",
                                    "order": "ignore",
                                    "doc": "Currency ISO 4217 code."
                                  },
                                  {
                                    "name": "promotion",
                                    "type": ["null", "string"],
                                    "default": null,
                                    "order": "ignore",
                                    "doc": "Price promotion information. This value will not be set on a regular price but will be set instead on sales and event prices."
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {"name": "CommercialComponentXmediaChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds xmedia changes in a Commercial Component.",
          "fields": [
            {"name": "store_id", "type": ["null","long"], "default": null, "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component's identifier."},
            {"name": "commercial_component_type", "type": "CommercialComponentType", "doc": "Type of commercial component."},
            {"name": "environment", "type": "Environment", "doc": "Environment where the xmedia change has been processed."},
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event's date in microseconds."},
            {
              "name": "xmedias",
              "doc": "List of xmedias included in the commercial component.",
              "type": {
                "type": "array",
                "items": {
                  "name": "Xmedia",
                  "type": "record",
                  "doc": "Class that holds an Xmedia information.",
                  "fields": [
                    {"name": "color_id", "type": "string", "doc": "Identifier of the color which the xmedia belongs to"},
                    {"name": "color_position", "type": "int", "doc": "Position of the color in the list of colors for a given product."},
                    {"name": "set", "type": "int", "doc": "Contains the set this xmedia is associated to. Typically front end will only display xmedia containing set = 2"},
                    {"name": "type", "type": "string", "doc": "Indicates the type of xmedia (e.g. image, audio, video, vector or hls among others)"},
                    {"name": "kind", "type": "string", "doc": "Secondary classification of xmedia (e.g. double, animation, double-animation) to be used for grids, or containing information about the image associated in a product detail view (e.g. full, side, back, detail, plain, look or colorcut)"},
                    {"name": "index", "type" : "int", "doc": "This index is used to discriminate different media for the same kind."},
                    {"name": "path", "type": "string", "doc": "Path where the xmedia is found within the base URL for a given xmedia types. Base URL's are defined within available xmedia formats for a given store"},
                    {"name": "name", "type": "string", "doc": "File name of the xmedia that can be used to build the URL. File extension is obtained from the xmedia format corresponding to the xmedia."},
                    {"name": "width", "type": "int", "doc": "Width of the highest resolution version of the xmedia expressed in pixels. This can be used to compute aspect ratios."},
                    {"name": "height", "type": "int", "doc": "Height of the highest resolution version of the xmedia expressed in pixels. This can be used to compute aspect ratios."},
                    {"name": "timestamp", "type": "string", "doc": "Timestamp of the xmedia expressed in milliseconds since epoch time. This is used to keep further control of browser caches."},
                    {"name": "allowed_screens", "type": { "type": "array", "items": "string", "doc": "array of allowed screen values."}, "doc": "Indicates whether this xmedia is suitable for small screens (e.g. phones), large screens (e.g. computers and tablets) or both."},
                    {
                      "name": "locations",
                      "doc": "List of locations where the media was designed for.",
                      "type": {
                        "type": "array",
                        "items": {
                          "name": "Location",
                          "doc": "Class that holds location information for the media.",
                          "type": "record",
                          "fields": [
                            {
                              "name": "name",
                              "type": "string",
                              "doc": "Location's name."
                            },
                            {
                              "name": "order",
                              "type": "int",
                              "doc": "Order in which media should be displayed."
                            }
                          ]
                        }
                      }
                    },
                    {"name": "extra_info", "doc": "Additional information used by other Inditex brands.", "type": {"type": "map", "values": "string", "doc": "Map of string keys and values defining the extra info."}}
                  ]
                }
              }
            }
          ]
        },
        {"name": "CommercialComponentExclusionChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds catalog exclusion changes in a Commercial Component.",
          "fields": [
            {"name": "environment", "type": "Environment", "doc": "Environment where the exclusion change has been processed."},
            {"name": "store_id", "type": "long", "doc": "Store unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component unique identifier."},
            {"name": "commercial_component_type", "type": "CommercialComponentType", "doc": "Type of commercial component (e.g. product, single component, bundle component or banner)"},
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event timestamp expressed in microseconds."},
            {"name": "is_excluded", "type": "boolean", "doc": "Indicates whether commercial component has been excluded or not."},
            {
              "name": "items",
              "doc": "Child commercial components associated to this commercial component.",
              "type": {
                "type": "array",
                "items": {
                  "name": "ExclusionItem",
                  "type": "record",
                  "doc": "Holds exclusion state for a child commercial component.",
                  "fields":[
                    {"name": "item_id", "type": "long", "doc": "Commercial component id's associated to the parent commercial component that has been excluded or not." },
                    {"name": "is_excluded",  "type": "boolean", "doc": "Indicates whether each child commercial component has been excluded or not."}
                  ]
                }
              }
            }
          ]
        },
        {"name": "BannerStructureChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds banner structure changes.",
          "fields": [
            {"name": "store_id", "type": ["null","long"], "default": null, "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component unique identifier."},
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event timestamp expressed in microseconds."},
            {"name": "is_buyable",  "type": "boolean", "doc": "Indicates whether the commercial component is buyable or not (e.g. whether front end can display its sizes or add a size to the cart)."},
            {"name": "is_deleted", "type": "boolean", "doc": "Indicates whether this commercial component has been marked for deletion or not."}
          ]
        },
        {"name": "ProductFamily",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds product family.",
          "fields": [
            {"name": "family_id", "type": "long", "doc": "Id of generic family associated to the product."},
            {"name": "family_name", "type": "string", "doc": "Product family, e.g., shirts, trousers."},
            {"name": "family_code", "type": "long", "doc": "AS400 family code the product belongs to."},
            {
              "name": "family_name_translations",
              "doc": "List of all internationalized family's name. Although this is an internationalization, this field doesn't depend on the store, because all internationalized names are retrieved (whathever its store is)",
              "type": ["null", {
                "type": "array",
                "items": "I18NText"
              }]
            }
          ]
        },
        {"name": "ProductSubfamily",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds product subfamily.",
          "fields": [
            {"name": "subfamily_id", "type": "long", "doc": "Id of the subfamily the product belongs."},
            {"name": "subfamily_name", "type": "string", "doc": "Product subfamily, e.g. trousers-jeans."},
            {"name": "subfamily_code", "type": "long", "doc": "AS400 subfamily code the product belongs to."},
            {
              "name": "subfamily_name_translations",
              "doc": "List of all internationalized subfamily's name. Although this is an internationalization, this field doesn't depend on the store, because all internationalized names are retrieved (whathever its store is)",
              "type": ["null", {
                "type": "array",
                "items": "I18NText"
              }]
            }
          ]
        },
        {"name": "ProductSection",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds product section.",
          "fields": [
            {"name": "section_id", "type": "long", "doc": "Section id of product, e.g., 1: woman, 2: man, 3: kid."},
            {"name": "section_name", "type": "string", "doc": "Product section (e.g. man, woman, etc)."}
          ]
        },
        {"name": "ProductBrand",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds product brand.",
          "fields": [
            {"name": "brand_id", "type": "long", "doc": "Brand identifier, e.g., 1: Zara, 16: Zara Sur, 18: Uterque."},
            {"name": "brand_group_id", "type": "long", "doc": "Brand group id, e.g., 1: ZARA: , 2: PULL_AND_BEAR."},
            {"name": "brand_group_name", "type": "string", "doc": "Brand group name, e.g. ZARA: zara, PULL_AND_BEAR: pullandbear."}
          ]
        },
        {"name": "ProductStructureChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds product structure changes.",
          "fields": [
            {"name": "store_id", "type": ["null","long"], "default": null, "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component unique identifier."},
            {"name": "size_system_id", "type": "long", "doc": "Size system identifier."},
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event timestamp expressed in microseconds."},
            {"name": "is_buyable",  "type": "boolean", "doc": "Indicates whether the commercial component is buyable or not (e.g. whether front end can display its sizes or add a size to the cart)."},
            {"name": "is_deleted", "type": "boolean", "doc": "Indicates whether this commercial component has been marked for deletion or not."},
            {"name": "is_active_campaign", "type": ["null","boolean"], "doc": "Indicates whether this commercial component belongs to an active campaign or not."},
            {"name": "kind",  "type": "string", "doc": "The kind of product (e.g. fragance, giftcard, virtualGiftcard, wear, marketing, unisize, multisize, group or other)"},
            {"name": "kind_id",  "type": "string", "doc": "Legacy kind identifier."},
            {"name": "reference",  "type": "string", "doc": "Full product reference containing model, quality and campaign."},
            {"name": "display_reference", "type": "string", "doc": "Reference that can be displayed by front ends containing only model and quality properly formatted."},
            {"name": "units_lot", "type": ["null","int"], "doc": "Number of units contained in a single SKU."},
            {
              "name": "first_visible_date",
              "type": ["null", "long"],
              "logicalType": "timestamp-millis",
              "doc": "Timestamp when the product was visible for the first time."
            },
            {"name": "section_name", "type": "string", "doc": "Deprecated as of 0.28 version, use 'section' field instead."},
            {"name": "family_name", "type": "string", "doc": "Deprecated as of 0.28 version, use 'family' field instead."},
            {"name": "subfamily_name", "type": "string", "doc": "Deprecated as of 0.28 version, use 'subfamily' field instead."},
            {"name": "section", "type": "ProductSection", "doc": "Section of a product."},
            {"name": "family", "type": "ProductFamily", "doc": "Family of a product."},
            {"name": "subfamily", "type": "ProductSubfamily", "doc": "Subfamily of a product."},
            {"name": "brand", "type": "ProductBrand", "doc": "Brand of a product."},
            {
              "name": "volume",
              "doc": "Volume of a perfume.",
              "type": ["null",
                {
                  "name": "ProductVolume",
                  "type": "record",
                  "doc": "Class that holds info about a perfume.",
                  "fields": [
                    {"name": "number", "type": "int", "doc": "Cardinality of the volume (relative to the next unit)."},
                    {"name": "unit", "type": "string", "doc": "Unit of measurement. i.e ml."}
                  ]
              }]
            },
            {"name": "customizable", "type": "boolean", "doc": "True if the component has any customization."},
            {"name": "join_life", "type": ["null", "string"], "doc": "Join life code."},
            {
              "name": "items",
              "doc": "Child commercial components associated to this commercial component.",
              "type": {
                "type": "array",
                "doc": "Array of commercial components associated to this commercial component.",
                "items": {
                  "name": "Item",
                  "type": "record",
                  "doc": "Holds basic data of a child commercial component.",
                  "fields": [
                    {"name": "item_id", "type": "long", "doc": "Child commercial component unique id."},
                    {"name": "color_id", "type": "string", "doc": "Child commercial component color id."},
                    {"name": "size_id", "type": "long", "doc": "Child commercial component size id."},
                    {"name": "is_buyable", "type": "boolean", "doc": "Indicates whether the item is buyable or not."},
                    {"name": "reference", "type": "string", "doc": "Child commercial component partnumber."},
                    {"name": "hscode", "type": ["null", "long"], "default": null, "doc": "Tariff heading code used by finances."},
                    {"name": "country_manufacture", "type": ["null", "string"], "default": null, "doc": "Code indicating the country of manufacture"},
                    {"name": "join_life", "type": ["null", "string"], "doc": "Join life code."},
                    {"name": "marks", "type": {"type": "array", "items": "string"}, "doc": "Marks at item level"},
                    {"name": "measures", "type": ["null", {"type": "array",
                      "items": {
                        "name": "Measure",
                        "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
                        "doc": "Class that holds the information about an individual measure.",
                        "type": "record",
                        "fields": [
                          {"name": "kind", "type": "string", "doc": "Kind of measure [weight, length, width, height]"},
                          {"name": "unit", "type": "string", "doc": "Unit of the measure"},
                          {"name": "value", "type": "double", "doc": "Measure value"},
                          {"name": "store_id", "type": ["null", "long"], "default": null, "doc": "StoreId of the measure"}
                        ]
                      }}], "doc": "Indicates measures for an item", "default": null}
                  ]
                }
              }
            },
            {
              "name": "marks",
              "type": {
                "type": "array",
                "items": "string"
               },
              "doc": "Marks for the product: hasNoInteractiveSizeGuide indicates that size guide is not available"
            }
          ]
        },
        {"name": "SingleComponentStructureChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds single component (aka color bundle) structure changes.",
          "fields": [
            {"name": "store_id", "type": ["null","long"], "default": null, "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component unique identifier."},
            {"name": "size_system_id", "type": "long", "doc": "Size system identifier."},
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event timestamp expressed in microseconds."},
            {"name": "is_buyable",  "type": "boolean", "doc": "Indicates whether the commercial component is buyable or not (e.g. whether front end can display its sizes or add a size to the cart)."},
            {"name": "is_deleted", "type": "boolean", "doc": "Indicates whether this commercial component has been marked for deletion or not."},
            {"name": "is_active_campaign", "type": ["null","boolean"], "doc": "Indicates whether this commercial component belongs to an active campaign or not."},
            {"name": "related_product_id",  "type": "long", "doc": "Commercial component id of product associated to this single component (aka color bundle)."},
            {"name": "color_id", "type": "string", "doc": "Color id this single component refers to on the related product."},
            {"name": "styling_id", "type": "int", "doc": "Styling id this single component refers to on the related product."},
            {"name": "kind", "type": "string", "doc": "The kind of product (e.g. fragance, giftcard, virtualGiftcard, wear, marketing, unisize, multisize, group or other)."},
            {"name": "kind_id",  "type": "string", "doc": "Legacy kind identifier."},
            {"name": "reference",  "type": "string", "doc": "Full product reference containing model, quality and campaign."},
            {"name": "display_reference", "type": "string", "doc": "Reference that can be displayed by front ends containing only model and quality properly formatted."},
            {"name": "units_lot", "type": ["null","int"], "doc": "Number of units contained in a single SKU."},
            {
              "name": "first_visible_date",
              "type": ["null", "long"],
              "logicalType": "timestamp-millis",
              "doc": "Timestamp when the component was visible for the first time."
            },
            {"name": "section_name", "type": "string", "doc": "Deprecated as of 0.28 version, use 'product_section' field instead."},
            {"name": "family_name", "type": "string", "doc": "Deprecated as of 0.28 version, use 'product_family' field instead."},
            {"name": "subfamily_name", "type": "string", "doc": "Deprecated as of 0.28 version, use 'product_subfamily' field instead."},
            {"name": "product_section", "type": "ProductSection", "doc": "Section of a product."},
            {"name": "product_family", "type": "ProductFamily", "doc": "Family of a product."},
            {"name": "product_subfamily", "type": "ProductSubfamily", "doc": "Subfamily of a product."},
            {"name": "product_brand", "type": "ProductBrand", "doc": "Brand of a product."},
            {"name": "customizable", "type": "boolean", "doc": "True if the component has any customization.  Deprecated: Instead of using this field, it's better to check whether customization is present."},
            {"name": "customization_type_id", "type": ["null", "long"], "doc": "Optional customization type id for the single component"},
            {"name": "join_life", "type": ["null", "string"], "doc": "Join life code."},
            {
              "name": "items",
              "doc": "Child commercial components associated to this commercial component.",
              "type": {
                "type": "array",
                "items": "Item"
              }
            },
            {
              "name": "marks",
              "type": ["null", {
                "type": "array",
                "items": "string"
               }],
              "doc": "Marks for the single component"
            }
          ]
        },
        {"name": "BundleComponentStructureChanged",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds bundle component structure changes. Bundle components are made of several products.",
          "fields": [
            {"name": "store_id", "type": ["null","long"], "default": null, "doc": "Store's unique identifier."},
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component unique identifier."},
            {"name": "updated_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event timestamp expressed in microseconds."},
            {"name": "is_buyable",  "type": "boolean", "doc": "Indicates whether the commercial component is buyable or not (e.g. whether front end can display its sizes or add a size to the cart)."},
            {"name": "is_deleted", "type": "boolean", "doc": "Indicates whether this commercial component has been marked for deletion or not."},
            {"name": "is_active_campaign", "type": ["null","boolean"], "doc": "Indicates whether this commercial component belongs to an active campaign or not."},
            {
              "name": "bundle_component_type",
              "doc": "Indicates the kind of bundle.",
              "type": {
                "name": "BundleComponentType",
                "type": "enum",
                "symbols": ["SUIT", "LOOK", "UNISIZE", "MULTISIZE", "GROUP", "BEAUTY", "GRUCACO"]
              }
            },
            {"name": "kind",  "type": "string", "doc": "The kind of product (e.g. fragance, giftcard, virtualGiftcard, wear, marketing, unisize, multisize, group or other)."},
            {"name": "kind_id",  "type": "string", "doc": "Legacy kind identifier."},
            {"name": "reference",  "type": "string", "doc": "Full product reference containing model, quality and campaign."},
            {"name": "display_reference", "type": "string", "doc": "Reference that can be displayed by front ends containing only model and quality properly formatted."},
            {
              "name": "first_visible_date",
              "type": ["null", "long"],
              "logicalType": "timestamp-millis",
              "doc": "Timestamp when the component was visible for the first time."
            },
            {"name": "color_id", "type": ["null", "string"], "doc": "Color id associated to this bundle."},
            {"name": "styling_id", "type": ["null","int"], "doc": "Styling id associated to this bundle."},
            {
                "name": "bundle_product_summaries",
                "doc": "Summary of products this bundle is made of.",
                "type": {
                    "type": "array",
                    "items": {
                        "name": "BundleProductSummary",
                        "doc": "Summary of a product composing a commercial component bundle.",
                        "type": "record",
                        "fields": [
                            {"name": "commercial_component_id", "type": "long", "doc": "Commercial component unique identifier of a product this bundle is composed of."},
                            {"name": "color_id", "type": ["null","string"], "doc": "Color id of this product applying to the bundle."},
                            {"name": "styling_id", "type": ["null","int"], "doc": "Styling id of this product applying to the bundle."},
                            {"name": "is_main_component", "type": "boolean", "doc": "Indicates whether this is the main product contained in a bundle."},
                            {
                              "name": "items",
                              "doc": "Commercial component items associated to a bundle product summary.",
                              "type": {
                                "type": "array",
                                "items": "Item"
                              }
                            }
                        ]
                    }
                }
            },
            {
              "name": "marks",
              "type": ["null", {
                "type": "array",
                "items": "string"
               }],
              "doc": "Marks for the bundle component"
            }
          ]
        },
        {"name": "CommercialComponentDeleted",
          "namespace": "com.inditex.mecc.mecprwat.api.avro.v1",
          "type": "record",
          "doc": "Class that holds deleted commercial components. ",
          "fields": [
            {"name": "commercial_component_id",  "type": "long", "doc": "Commercial component unique identifier."},
            {"name": "commercial_component_type", "type": "CommercialComponentType", "doc": "Type of commercial component (e.g. product, single component, bundle component or banner)"},
            {"name": "deleted_at", "type": "long", "logicalType": "timestamp-micros", "doc": "Event timestamp expressed in microseconds."},
            {"name": "environment",
              "doc": "Environment where the change has been processed.",
              "type": ["null", "Environment"],
              "default": null
            }
          ]
        },
        "ProductExtendedInfoChanged",
        "SingleComponentExtendedInfoChanged",
        "BundleComponentExtendedInfoChanged"
      ]
    }
  ]
}
