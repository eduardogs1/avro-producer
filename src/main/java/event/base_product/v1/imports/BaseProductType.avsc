[
  {
    "name": "BaseProductCustomAttributeType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds the attribute information of a base product",
    "fields": [{
     "name": "attr_code",
     "type": "string",
     "doc": "Key of the attribute"
    },
    {
     "name": "attr_type",
     "type": {
      "type": "enum",
      "name": "AttrTypeEnum",
      "symbols": ["NUMBER", "STRING", "BOOLEAN"]
     },
     "doc": "Primitive data type of the attribute"
    },
    {
     "name": "attr_value",
     "type": "string",
     "doc": "Value of the attribute"
    }
	]
  },
  {
    "name": "BaseProductAttrType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds availability changes in a base product component.",
    "fields": [{
     "name": "basic_attrs",
     "type": ["null",
        {
       "type": "array",
       "items": "string"
        }
        ],
     "doc": "List of basic attributes"
    },
     {
      "name":"custom_attributes",
       "type":["null",
        {
         "type":"array",
         "items":"BaseProductCustomAttributeType"
         }
        ],
        "default":null,
      "doc": "Key value atributes)"
   }
   ]
  },
   {
	"name": "BaseProductDimensionType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds the item's dimensions.",
    "fields": [{
     "name": "lenght",
     "type" : [ "null", "double" ],
     "default": null,
     "doc": "The product lenght"
    },
    {
     "name": "width",
     "type" : [ "null", "double" ],
     "default": null,
     "doc": "The product width"
    },
    {
     "name": "height",
	 "type" : [ "null", "double" ],
     "default": null,
     "doc": "The product height"
    },
    {
     "name": "unit",
     "type": "string",
     "doc": "the measure unit"
    }]
  },
  {
    "name": "BaseProductWeightType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds the product ' weight information",
    "fields": [{
     "name": "value",
     "type": "double",
     "doc": "The weight ' amount"
    },
    {
     "name": "unit",
     "type": "string",
     "doc": "The weight unit"
    }]
  },
  {
    "name": "BaseProductSizeAttributeType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds data attributes by size",
    "fields": [{
     "name": "reference",
     "type": "string",
     "doc": "itemBean's reference"
    },
  {
    "name" : "legacy_catentry_id",
    "type" : [ "null", "long" ],
    "default": null,
    "doc": "The db2 product id for the beginning of the migration for the new product model"
  },
    {
      "name": "updated_at",
      "type": "long",
      "doc": "The timestamp of the update date"
    },
    {
     "name": "size_id",
     "type": "int",
     "doc": "ItemBean's id size"
    },  
    {
     "name": "base_size_level_attributes",
	 "type" : [ "null", "BaseProductAttrType" ],
     "doc": "Attributes at size level",
	 "default": null
    },
	{
     "name": "dimension",
	 "type" : [ "null", "BaseProductDimensionType" ],
     "default": null,
     "doc": "Dimensions info"
    },
	{
     "name": "weight",
	 "type" : [ "null", "BaseProductWeightType" ],
     "default": null,
     "doc": "Weight data"
    }
	]
  },
  {
    "name": "BaseProductVariantType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds the color information of a base product",
    "fields": [{
     "name": "color",
     "type": "string",
     "doc": "cod color from partnumber"
    },
    {
     "name": "color_id",
     "type": "int",
     "doc": "ItemBean's id color"
    },
	{
     "name": "base_color_level_attributes",
	 "type" : [ "null", "BaseProductAttrType" ],
     "default": null,
     "doc": "Attributes at color level"
    },
    {
      "name": "updated_at",
      "type": "long",
      "doc": "The timestamp of the update date"
    },
    {
     "name": "sizes",
     "type": {
       "type": "array",
       "items": "BaseProductSizeAttributeType"
     },
     "doc": "Object with the size info"
     }]
    },
  {
    "name": "BaseProductTwinnedReferenceType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds the internal id of the a product's doble reference",
    "fields": [{
     "name": "id",
     "type": "string",
     "doc": "key of a double reference"
    }]
  },
  {
    "name": "BaseProductClassificationType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds availability changes in a base product component.",
    "fields": [{
     "name": "family_id",
     "type": "int",
     "doc": "family id from master db"
    },
    {
     "name": "sub_family_id",
     "type": "int",
     "doc": "subfamily id from master db"
    },
    {
     "name": "section_type_id",
     "type": "int",
     "doc": "Secction id that represents Woman, man, kids."
    },
    {
     "name": "sub_section_id",
     "type": "int",
     "doc": "subSecction id that represents Trf, classic..."
    },
    {
     "name": "size_system_id",
     "type": "int",
     "doc": "Size sistem of the product"
    }]
  },
  {
    "name": "BaseProductRefType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds the reference information of a base product",
    "fields": [{
      "name": "brand_id",
      "type": "int",
      "doc": "The attribute represents the item ' brandId, Zara, will have, (Zara,ZaraHome,ZaraSur)"
    },
    {
      "name": "type",
      "type": "int",
      "doc": "type of the product"
    },
    {
      "name": "model",
      "type": "int",
      "doc": "model of the product"
    },
    {
      "name": "quality",
      "type": "int",
      "doc": "quality of the product"
    },
    {
      "name": "season",
      "type": "string",
      "doc": "Season of the product"
    },
	{
      "name": "article_master_id",
      "type": "long",
      "doc": "db2 master article id from table maestros.articulo"
    }
	]
  },
  {
    "name": "BaseProductType",
    "namespace": "com.inditex.mecc.ecomloadbk.api.avro.v1",
    "type": "record",
    "doc": "Class that holds availability changes in a base product component.",
    "fields": [{
      "name": "id",
      "type": "string",
      "doc": "The product base reference"
    },
    {
      "name": "product_ref",
      "type": "BaseProductRefType",
      "doc": "the reference of the base product"
    },
  {
     "name" : "legacy_catentry_id",
     "type" : [ "null", "long" ],
     "default": null,
     "doc": "The db2 product id for the beginning of the migration for the new product model"
  },
    {
      "name": "classification",
      "type": "BaseProductClassificationType",
      "doc": "the reference of the base product"
    },
    {
      "name": "gender",
      "type": {
        "type": "enum",
        "name": "GenderEnum",
        "symbols": ["UNKNOWN", "MALE", "FEMALE"]
      },
      "doc": "The attribute represents the product gender"
    },
    {
      "name": "part",
      "type": {
        "type": "enum",
        "name": "PartEnum",
        "symbols": ["UNKNOWN", "UPPER", "BOTTOM"]
    },
      "doc": "The attribute represents if the article is an upper part."
    },
    {
      "name": "base_product_level_attributes",
	  "type" : [ "null", "BaseProductAttrType" ],
	  "default": null,
      "doc": "Attributes at product level"
    },
    {
      "name": "base_product_variants",
      "type": {
       "type": "array",
       "items": "BaseProductVariantType"
      },
      "doc": "List product color"
    },
    {
      "name":"twinned_references",
       "type":["null",
        {
         "type":"array",
         "items":"BaseProductTwinnedReferenceType"
         }
        ],
        "default":null,
      "doc": "List of twinned references, (references of baseProductType)"
	},
    {
      "name": "created_at",
      "type": "long",
      "doc": "The timestamp of the creation date"
    },
    {
      "name": "updated_at",
      "type": "long",
      "doc": "The timestamp of the update date"
    }]
  }
]