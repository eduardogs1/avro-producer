/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.ecomloadbk.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds the reference info */
@org.apache.avro.specific.AvroGenerated
public class ProductPriceReferenceType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6045671658697466101L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductPriceReferenceType\",\"namespace\":\"com.inditex.mecc.ecomloadbk.api.avro.v2\",\"doc\":\"Class that holds the reference info\",\"fields\":[{\"name\":\"brand_id\",\"type\":\"int\",\"doc\":\"The master brand id\"},{\"name\":\"type\",\"type\":\"string\",\"doc\":\"The 1 digit product type\"},{\"name\":\"model\",\"type\":\"string\",\"doc\":\"The 4 digits model\"},{\"name\":\"quality\",\"type\":\"string\",\"doc\":\"The 3 digits quality\"},{\"name\":\"color\",\"type\":\"string\",\"doc\":\"The 3 digits color\"},{\"name\":\"size\",\"type\":\"string\",\"doc\":\"The 3 digits size\"},{\"name\":\"bar_code\",\"type\":\"string\",\"doc\":\"sku barcode without season\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductPriceReferenceType> ENCODER =
      new BinaryMessageEncoder<ProductPriceReferenceType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductPriceReferenceType> DECODER =
      new BinaryMessageDecoder<ProductPriceReferenceType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductPriceReferenceType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductPriceReferenceType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductPriceReferenceType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductPriceReferenceType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductPriceReferenceType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductPriceReferenceType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductPriceReferenceType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductPriceReferenceType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The master brand id */
  @Deprecated public int brand_id;
  /** The 1 digit product type */
  @Deprecated public java.lang.CharSequence type;
  /** The 4 digits model */
  @Deprecated public java.lang.CharSequence model;
  /** The 3 digits quality */
  @Deprecated public java.lang.CharSequence quality;
  /** The 3 digits color */
  @Deprecated public java.lang.CharSequence color;
  /** The 3 digits size */
  @Deprecated public java.lang.CharSequence size;
  /** sku barcode without season */
  @Deprecated public java.lang.CharSequence bar_code;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductPriceReferenceType() {}

  /**
   * All-args constructor.
   * @param brand_id The master brand id
   * @param type The 1 digit product type
   * @param model The 4 digits model
   * @param quality The 3 digits quality
   * @param color The 3 digits color
   * @param size The 3 digits size
   * @param bar_code sku barcode without season
   */
  public ProductPriceReferenceType(java.lang.Integer brand_id, java.lang.CharSequence type, java.lang.CharSequence model, java.lang.CharSequence quality, java.lang.CharSequence color, java.lang.CharSequence size, java.lang.CharSequence bar_code) {
    this.brand_id = brand_id;
    this.type = type;
    this.model = model;
    this.quality = quality;
    this.color = color;
    this.size = size;
    this.bar_code = bar_code;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return brand_id;
    case 1: return type;
    case 2: return model;
    case 3: return quality;
    case 4: return color;
    case 5: return size;
    case 6: return bar_code;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: brand_id = (java.lang.Integer)value$; break;
    case 1: type = (java.lang.CharSequence)value$; break;
    case 2: model = (java.lang.CharSequence)value$; break;
    case 3: quality = (java.lang.CharSequence)value$; break;
    case 4: color = (java.lang.CharSequence)value$; break;
    case 5: size = (java.lang.CharSequence)value$; break;
    case 6: bar_code = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'brand_id' field.
   * @return The master brand id
   */
  public int getBrandId() {
    return brand_id;
  }


  /**
   * Sets the value of the 'brand_id' field.
   * The master brand id
   * @param value the value to set.
   */
  public void setBrandId(int value) {
    this.brand_id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The 1 digit product type
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * The 1 digit product type
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'model' field.
   * @return The 4 digits model
   */
  public java.lang.CharSequence getModel() {
    return model;
  }


  /**
   * Sets the value of the 'model' field.
   * The 4 digits model
   * @param value the value to set.
   */
  public void setModel(java.lang.CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'quality' field.
   * @return The 3 digits quality
   */
  public java.lang.CharSequence getQuality() {
    return quality;
  }


  /**
   * Sets the value of the 'quality' field.
   * The 3 digits quality
   * @param value the value to set.
   */
  public void setQuality(java.lang.CharSequence value) {
    this.quality = value;
  }

  /**
   * Gets the value of the 'color' field.
   * @return The 3 digits color
   */
  public java.lang.CharSequence getColor() {
    return color;
  }


  /**
   * Sets the value of the 'color' field.
   * The 3 digits color
   * @param value the value to set.
   */
  public void setColor(java.lang.CharSequence value) {
    this.color = value;
  }

  /**
   * Gets the value of the 'size' field.
   * @return The 3 digits size
   */
  public java.lang.CharSequence getSize() {
    return size;
  }


  /**
   * Sets the value of the 'size' field.
   * The 3 digits size
   * @param value the value to set.
   */
  public void setSize(java.lang.CharSequence value) {
    this.size = value;
  }

  /**
   * Gets the value of the 'bar_code' field.
   * @return sku barcode without season
   */
  public java.lang.CharSequence getBarCode() {
    return bar_code;
  }


  /**
   * Sets the value of the 'bar_code' field.
   * sku barcode without season
   * @param value the value to set.
   */
  public void setBarCode(java.lang.CharSequence value) {
    this.bar_code = value;
  }

  /**
   * Creates a new ProductPriceReferenceType RecordBuilder.
   * @return A new ProductPriceReferenceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder newBuilder() {
    return new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder();
  }

  /**
   * Creates a new ProductPriceReferenceType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductPriceReferenceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder(other);
    }
  }

  /**
   * Creates a new ProductPriceReferenceType RecordBuilder by copying an existing ProductPriceReferenceType instance.
   * @param other The existing instance to copy.
   * @return A new ProductPriceReferenceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductPriceReferenceType instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductPriceReferenceType>
    implements org.apache.avro.data.RecordBuilder<ProductPriceReferenceType> {

    /** The master brand id */
    private int brand_id;
    /** The 1 digit product type */
    private java.lang.CharSequence type;
    /** The 4 digits model */
    private java.lang.CharSequence model;
    /** The 3 digits quality */
    private java.lang.CharSequence quality;
    /** The 3 digits color */
    private java.lang.CharSequence color;
    /** The 3 digits size */
    private java.lang.CharSequence size;
    /** sku barcode without season */
    private java.lang.CharSequence bar_code;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.brand_id)) {
        this.brand_id = data().deepCopy(fields()[0].schema(), other.brand_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.model)) {
        this.model = data().deepCopy(fields()[2].schema(), other.model);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.quality)) {
        this.quality = data().deepCopy(fields()[3].schema(), other.quality);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.color)) {
        this.color = data().deepCopy(fields()[4].schema(), other.color);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.size)) {
        this.size = data().deepCopy(fields()[5].schema(), other.size);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.bar_code)) {
        this.bar_code = data().deepCopy(fields()[6].schema(), other.bar_code);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductPriceReferenceType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.brand_id)) {
        this.brand_id = data().deepCopy(fields()[0].schema(), other.brand_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.model)) {
        this.model = data().deepCopy(fields()[2].schema(), other.model);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quality)) {
        this.quality = data().deepCopy(fields()[3].schema(), other.quality);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.color)) {
        this.color = data().deepCopy(fields()[4].schema(), other.color);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.size)) {
        this.size = data().deepCopy(fields()[5].schema(), other.size);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bar_code)) {
        this.bar_code = data().deepCopy(fields()[6].schema(), other.bar_code);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'brand_id' field.
      * The master brand id
      * @return The value.
      */
    public int getBrandId() {
      return brand_id;
    }


    /**
      * Sets the value of the 'brand_id' field.
      * The master brand id
      * @param value The value of 'brand_id'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setBrandId(int value) {
      validate(fields()[0], value);
      this.brand_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'brand_id' field has been set.
      * The master brand id
      * @return True if the 'brand_id' field has been set, false otherwise.
      */
    public boolean hasBrandId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'brand_id' field.
      * The master brand id
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearBrandId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * The 1 digit product type
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * The 1 digit product type
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * The 1 digit product type
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * The 1 digit product type
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'model' field.
      * The 4 digits model
      * @return The value.
      */
    public java.lang.CharSequence getModel() {
      return model;
    }


    /**
      * Sets the value of the 'model' field.
      * The 4 digits model
      * @param value The value of 'model'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setModel(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.model = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * The 4 digits model
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'model' field.
      * The 4 digits model
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearModel() {
      model = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'quality' field.
      * The 3 digits quality
      * @return The value.
      */
    public java.lang.CharSequence getQuality() {
      return quality;
    }


    /**
      * Sets the value of the 'quality' field.
      * The 3 digits quality
      * @param value The value of 'quality'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setQuality(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.quality = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'quality' field has been set.
      * The 3 digits quality
      * @return True if the 'quality' field has been set, false otherwise.
      */
    public boolean hasQuality() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'quality' field.
      * The 3 digits quality
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearQuality() {
      quality = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'color' field.
      * The 3 digits color
      * @return The value.
      */
    public java.lang.CharSequence getColor() {
      return color;
    }


    /**
      * Sets the value of the 'color' field.
      * The 3 digits color
      * @param value The value of 'color'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setColor(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.color = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'color' field has been set.
      * The 3 digits color
      * @return True if the 'color' field has been set, false otherwise.
      */
    public boolean hasColor() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'color' field.
      * The 3 digits color
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearColor() {
      color = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'size' field.
      * The 3 digits size
      * @return The value.
      */
    public java.lang.CharSequence getSize() {
      return size;
    }


    /**
      * Sets the value of the 'size' field.
      * The 3 digits size
      * @param value The value of 'size'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setSize(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.size = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'size' field has been set.
      * The 3 digits size
      * @return True if the 'size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'size' field.
      * The 3 digits size
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearSize() {
      size = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'bar_code' field.
      * sku barcode without season
      * @return The value.
      */
    public java.lang.CharSequence getBarCode() {
      return bar_code;
    }


    /**
      * Sets the value of the 'bar_code' field.
      * sku barcode without season
      * @param value The value of 'bar_code'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder setBarCode(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.bar_code = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'bar_code' field has been set.
      * sku barcode without season
      * @return True if the 'bar_code' field has been set, false otherwise.
      */
    public boolean hasBarCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'bar_code' field.
      * sku barcode without season
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder clearBarCode() {
      bar_code = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductPriceReferenceType build() {
      try {
        ProductPriceReferenceType record = new ProductPriceReferenceType();
        record.brand_id = fieldSetFlags()[0] ? this.brand_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.model = fieldSetFlags()[2] ? this.model : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.quality = fieldSetFlags()[3] ? this.quality : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.color = fieldSetFlags()[4] ? this.color : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.size = fieldSetFlags()[5] ? this.size : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.bar_code = fieldSetFlags()[6] ? this.bar_code : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductPriceReferenceType>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductPriceReferenceType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductPriceReferenceType>
    READER$ = (org.apache.avro.io.DatumReader<ProductPriceReferenceType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.brand_id);

    out.writeString(this.type);

    out.writeString(this.model);

    out.writeString(this.quality);

    out.writeString(this.color);

    out.writeString(this.size);

    out.writeString(this.bar_code);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.brand_id = in.readInt();

      this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);

      this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);

      this.quality = in.readString(this.quality instanceof Utf8 ? (Utf8)this.quality : null);

      this.color = in.readString(this.color instanceof Utf8 ? (Utf8)this.color : null);

      this.size = in.readString(this.size instanceof Utf8 ? (Utf8)this.size : null);

      this.bar_code = in.readString(this.bar_code instanceof Utf8 ? (Utf8)this.bar_code : null);

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.brand_id = in.readInt();
          break;

        case 1:
          this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          break;

        case 2:
          this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);
          break;

        case 3:
          this.quality = in.readString(this.quality instanceof Utf8 ? (Utf8)this.quality : null);
          break;

        case 4:
          this.color = in.readString(this.color instanceof Utf8 ? (Utf8)this.color : null);
          break;

        case 5:
          this.size = in.readString(this.size instanceof Utf8 ? (Utf8)this.size : null);
          break;

        case 6:
          this.bar_code = in.readString(this.bar_code instanceof Utf8 ? (Utf8)this.bar_code : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










