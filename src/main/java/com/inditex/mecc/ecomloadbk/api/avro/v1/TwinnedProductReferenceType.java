/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.ecomloadbk.api.avro.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds the reference info */
@org.apache.avro.specific.AvroGenerated
public class TwinnedProductReferenceType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5102586792845973812L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TwinnedProductReferenceType\",\"namespace\":\"com.inditex.mecc.ecomloadbk.api.avro.v1\",\"doc\":\"Class that holds the reference info\",\"fields\":[{\"name\":\"brand_id\",\"type\":\"int\",\"doc\":\"The master brand id\"},{\"name\":\"type\",\"type\":\"string\",\"doc\":\"The 1 digit product type\"},{\"name\":\"model\",\"type\":\"string\",\"doc\":\"The 4 digits model\"},{\"name\":\"quality\",\"type\":\"string\",\"doc\":\"The 3 digits quality\"},{\"name\":\"product_key\",\"type\":\"string\",\"doc\":\"Internal Ecomload Key of the product\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TwinnedProductReferenceType> ENCODER =
      new BinaryMessageEncoder<TwinnedProductReferenceType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TwinnedProductReferenceType> DECODER =
      new BinaryMessageDecoder<TwinnedProductReferenceType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TwinnedProductReferenceType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TwinnedProductReferenceType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TwinnedProductReferenceType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TwinnedProductReferenceType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TwinnedProductReferenceType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TwinnedProductReferenceType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TwinnedProductReferenceType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TwinnedProductReferenceType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The master brand id */
  @Deprecated public int brand_id;
  /** The 1 digit product type */
  @Deprecated public java.lang.CharSequence type;
  /** The 4 digits model */
  @Deprecated public java.lang.CharSequence model;
  /** The 3 digits quality */
  @Deprecated public java.lang.CharSequence quality;
  /** Internal Ecomload Key of the product */
  @Deprecated public java.lang.CharSequence product_key;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TwinnedProductReferenceType() {}

  /**
   * All-args constructor.
   * @param brand_id The master brand id
   * @param type The 1 digit product type
   * @param model The 4 digits model
   * @param quality The 3 digits quality
   * @param product_key Internal Ecomload Key of the product
   */
  public TwinnedProductReferenceType(java.lang.Integer brand_id, java.lang.CharSequence type, java.lang.CharSequence model, java.lang.CharSequence quality, java.lang.CharSequence product_key) {
    this.brand_id = brand_id;
    this.type = type;
    this.model = model;
    this.quality = quality;
    this.product_key = product_key;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return brand_id;
    case 1: return type;
    case 2: return model;
    case 3: return quality;
    case 4: return product_key;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: brand_id = (java.lang.Integer)value$; break;
    case 1: type = (java.lang.CharSequence)value$; break;
    case 2: model = (java.lang.CharSequence)value$; break;
    case 3: quality = (java.lang.CharSequence)value$; break;
    case 4: product_key = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'brand_id' field.
   * @return The master brand id
   */
  public int getBrandId() {
    return brand_id;
  }


  /**
   * Sets the value of the 'brand_id' field.
   * The master brand id
   * @param value the value to set.
   */
  public void setBrandId(int value) {
    this.brand_id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The 1 digit product type
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * The 1 digit product type
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'model' field.
   * @return The 4 digits model
   */
  public java.lang.CharSequence getModel() {
    return model;
  }


  /**
   * Sets the value of the 'model' field.
   * The 4 digits model
   * @param value the value to set.
   */
  public void setModel(java.lang.CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'quality' field.
   * @return The 3 digits quality
   */
  public java.lang.CharSequence getQuality() {
    return quality;
  }


  /**
   * Sets the value of the 'quality' field.
   * The 3 digits quality
   * @param value the value to set.
   */
  public void setQuality(java.lang.CharSequence value) {
    this.quality = value;
  }

  /**
   * Gets the value of the 'product_key' field.
   * @return Internal Ecomload Key of the product
   */
  public java.lang.CharSequence getProductKey() {
    return product_key;
  }


  /**
   * Sets the value of the 'product_key' field.
   * Internal Ecomload Key of the product
   * @param value the value to set.
   */
  public void setProductKey(java.lang.CharSequence value) {
    this.product_key = value;
  }

  /**
   * Creates a new TwinnedProductReferenceType RecordBuilder.
   * @return A new TwinnedProductReferenceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder newBuilder() {
    return new com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder();
  }

  /**
   * Creates a new TwinnedProductReferenceType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TwinnedProductReferenceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder(other);
    }
  }

  /**
   * Creates a new TwinnedProductReferenceType RecordBuilder by copying an existing TwinnedProductReferenceType instance.
   * @param other The existing instance to copy.
   * @return A new TwinnedProductReferenceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder(other);
    }
  }

  /**
   * RecordBuilder for TwinnedProductReferenceType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TwinnedProductReferenceType>
    implements org.apache.avro.data.RecordBuilder<TwinnedProductReferenceType> {

    /** The master brand id */
    private int brand_id;
    /** The 1 digit product type */
    private java.lang.CharSequence type;
    /** The 4 digits model */
    private java.lang.CharSequence model;
    /** The 3 digits quality */
    private java.lang.CharSequence quality;
    /** Internal Ecomload Key of the product */
    private java.lang.CharSequence product_key;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.brand_id)) {
        this.brand_id = data().deepCopy(fields()[0].schema(), other.brand_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.model)) {
        this.model = data().deepCopy(fields()[2].schema(), other.model);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.quality)) {
        this.quality = data().deepCopy(fields()[3].schema(), other.quality);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.product_key)) {
        this.product_key = data().deepCopy(fields()[4].schema(), other.product_key);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing TwinnedProductReferenceType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.brand_id)) {
        this.brand_id = data().deepCopy(fields()[0].schema(), other.brand_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.model)) {
        this.model = data().deepCopy(fields()[2].schema(), other.model);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quality)) {
        this.quality = data().deepCopy(fields()[3].schema(), other.quality);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.product_key)) {
        this.product_key = data().deepCopy(fields()[4].schema(), other.product_key);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'brand_id' field.
      * The master brand id
      * @return The value.
      */
    public int getBrandId() {
      return brand_id;
    }


    /**
      * Sets the value of the 'brand_id' field.
      * The master brand id
      * @param value The value of 'brand_id'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder setBrandId(int value) {
      validate(fields()[0], value);
      this.brand_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'brand_id' field has been set.
      * The master brand id
      * @return True if the 'brand_id' field has been set, false otherwise.
      */
    public boolean hasBrandId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'brand_id' field.
      * The master brand id
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder clearBrandId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * The 1 digit product type
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * The 1 digit product type
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder setType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * The 1 digit product type
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * The 1 digit product type
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'model' field.
      * The 4 digits model
      * @return The value.
      */
    public java.lang.CharSequence getModel() {
      return model;
    }


    /**
      * Sets the value of the 'model' field.
      * The 4 digits model
      * @param value The value of 'model'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder setModel(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.model = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * The 4 digits model
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'model' field.
      * The 4 digits model
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder clearModel() {
      model = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'quality' field.
      * The 3 digits quality
      * @return The value.
      */
    public java.lang.CharSequence getQuality() {
      return quality;
    }


    /**
      * Sets the value of the 'quality' field.
      * The 3 digits quality
      * @param value The value of 'quality'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder setQuality(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.quality = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'quality' field has been set.
      * The 3 digits quality
      * @return True if the 'quality' field has been set, false otherwise.
      */
    public boolean hasQuality() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'quality' field.
      * The 3 digits quality
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder clearQuality() {
      quality = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'product_key' field.
      * Internal Ecomload Key of the product
      * @return The value.
      */
    public java.lang.CharSequence getProductKey() {
      return product_key;
    }


    /**
      * Sets the value of the 'product_key' field.
      * Internal Ecomload Key of the product
      * @param value The value of 'product_key'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder setProductKey(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.product_key = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'product_key' field has been set.
      * Internal Ecomload Key of the product
      * @return True if the 'product_key' field has been set, false otherwise.
      */
    public boolean hasProductKey() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'product_key' field.
      * Internal Ecomload Key of the product
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.TwinnedProductReferenceType.Builder clearProductKey() {
      product_key = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TwinnedProductReferenceType build() {
      try {
        TwinnedProductReferenceType record = new TwinnedProductReferenceType();
        record.brand_id = fieldSetFlags()[0] ? this.brand_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.model = fieldSetFlags()[2] ? this.model : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.quality = fieldSetFlags()[3] ? this.quality : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.product_key = fieldSetFlags()[4] ? this.product_key : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TwinnedProductReferenceType>
    WRITER$ = (org.apache.avro.io.DatumWriter<TwinnedProductReferenceType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TwinnedProductReferenceType>
    READER$ = (org.apache.avro.io.DatumReader<TwinnedProductReferenceType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.brand_id);

    out.writeString(this.type);

    out.writeString(this.model);

    out.writeString(this.quality);

    out.writeString(this.product_key);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.brand_id = in.readInt();

      this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);

      this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);

      this.quality = in.readString(this.quality instanceof Utf8 ? (Utf8)this.quality : null);

      this.product_key = in.readString(this.product_key instanceof Utf8 ? (Utf8)this.product_key : null);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.brand_id = in.readInt();
          break;

        case 1:
          this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          break;

        case 2:
          this.model = in.readString(this.model instanceof Utf8 ? (Utf8)this.model : null);
          break;

        case 3:
          this.quality = in.readString(this.quality instanceof Utf8 ? (Utf8)this.quality : null);
          break;

        case 4:
          this.product_key = in.readString(this.product_key instanceof Utf8 ? (Utf8)this.product_key : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










