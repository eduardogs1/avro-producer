/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.ecomloadbk.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds availability changes in a base product component. */
@org.apache.avro.specific.AvroGenerated
public class SeasonLessProductPriceType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8299424032236021517L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SeasonLessProductPriceType\",\"namespace\":\"com.inditex.mecc.ecomloadbk.api.avro.v2\",\"doc\":\"Class that holds availability changes in a base product component.\",\"fields\":[{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"The strings ISO UTC of the update date\"},{\"name\":\"reference\",\"type\":{\"type\":\"record\",\"name\":\"ProductPriceReferenceType\",\"doc\":\"Class that holds the reference info\",\"fields\":[{\"name\":\"brand_id\",\"type\":\"int\",\"doc\":\"The master brand id\"},{\"name\":\"type\",\"type\":\"string\",\"doc\":\"The 1 digit product type\"},{\"name\":\"model\",\"type\":\"string\",\"doc\":\"The 4 digits model\"},{\"name\":\"quality\",\"type\":\"string\",\"doc\":\"The 3 digits quality\"},{\"name\":\"color\",\"type\":\"string\",\"doc\":\"The 3 digits color\"},{\"name\":\"size\",\"type\":\"string\",\"doc\":\"The 3 digits size\"},{\"name\":\"bar_code\",\"type\":\"string\",\"doc\":\"sku barcode without season\"}]},\"doc\":\"The reference details of the article\"},{\"name\":\"ecommerce_trade_pos_info\",\"type\":{\"type\":\"record\",\"name\":\"EcommerceTradePosInfoType\",\"doc\":\"Class that holds the current ecommerce trade info\",\"fields\":[{\"name\":\"tradeposcn_id\",\"type\":\"long\",\"doc\":\"Internal ecommerce trade id\"},{\"name\":\"member_id\",\"type\":\"long\",\"doc\":\"Internal member id\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Internal ecommerce trade name\"}]},\"doc\":\"Ecommerce trade por info\"},{\"name\":\"country_iso\",\"type\":\"string\",\"doc\":\"The country ISO \"},{\"name\":\"online_store_id\",\"type\":\"int\",\"doc\":\"The online store id\"},{\"name\":\"online_store_Code\",\"type\":\"string\",\"doc\":\"Descripcion of the online store store\"},{\"name\":\"time_line_prices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TimeLinePriceType\",\"doc\":\"Class that holds the twinned type\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"The UTC for the price activation\"},{\"name\":\"end_date\",\"type\":\"long\",\"doc\":\"The  UTC for the price end date.\"},{\"name\":\"price_list\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TimeLinePriceInfoType\",\"doc\":\"Class that holds the currencuy, price, and comparePrice type\",\"fields\":[{\"name\":\"price\",\"type\":\"long\",\"doc\":\"The price amount\"},{\"name\":\"compare_price\",\"type\":[\"null\",\"long\"],\"doc\":\"The amount of the compare price / previous price\",\"default\":null},{\"name\":\"currency_iso\",\"type\":\"string\",\"doc\":\"The currency iso\"},{\"name\":\"currency_exponent\",\"type\":\"int\",\"doc\":\"The currency iso\"}]}},\"doc\":\"List of currency and prices.\"},{\"name\":\"observation\",\"type\":{\"type\":\"record\",\"name\":\"ObservationType\",\"doc\":\"Class that holds observatios/descriptions about a price\",\"fields\":[{\"name\":\"description\",\"type\":\"string\",\"doc\":\"Description of the price info\"},{\"name\":\"kind\",\"type\":{\"type\":\"enum\",\"name\":\"KindTypeEnum\",\"symbols\":[\"REGULAR\",\"SALES\",\"EVENT\"]},\"doc\":\"Enum to catalog the price type\"},{\"name\":\"ecomload_promo_info\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EcomloadPromoInfoType\",\"doc\":\"Class that holds the reference info\",\"fields\":[{\"name\":\"ecomload_promo_name\",\"type\":\"string\",\"doc\":\"The promo name created by EcomLoad\"}]}],\"doc\":\"Ecomload promos data description\",\"default\":null}]},\"doc\":\"The Object for storing the observation details\"}]}},\"doc\":\"List of prices by utc date\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SeasonLessProductPriceType> ENCODER =
      new BinaryMessageEncoder<SeasonLessProductPriceType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SeasonLessProductPriceType> DECODER =
      new BinaryMessageDecoder<SeasonLessProductPriceType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SeasonLessProductPriceType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SeasonLessProductPriceType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SeasonLessProductPriceType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SeasonLessProductPriceType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SeasonLessProductPriceType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SeasonLessProductPriceType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SeasonLessProductPriceType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SeasonLessProductPriceType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The strings ISO UTC of the update date */
  @Deprecated public long updated_at;
  /** The reference details of the article */
  @Deprecated public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType reference;
  /** Ecommerce trade por info */
  @Deprecated public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType ecommerce_trade_pos_info;
  /** The country ISO  */
  @Deprecated public java.lang.CharSequence country_iso;
  /** The online store id */
  @Deprecated public int online_store_id;
  /** Descripcion of the online store store */
  @Deprecated public java.lang.CharSequence online_store_Code;
  /** List of prices by utc date */
  @Deprecated public java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> time_line_prices;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SeasonLessProductPriceType() {}

  /**
   * All-args constructor.
   * @param updated_at The strings ISO UTC of the update date
   * @param reference The reference details of the article
   * @param ecommerce_trade_pos_info Ecommerce trade por info
   * @param country_iso The country ISO 
   * @param online_store_id The online store id
   * @param online_store_Code Descripcion of the online store store
   * @param time_line_prices List of prices by utc date
   */
  public SeasonLessProductPriceType(java.lang.Long updated_at, com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType reference, com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType ecommerce_trade_pos_info, java.lang.CharSequence country_iso, java.lang.Integer online_store_id, java.lang.CharSequence online_store_Code, java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> time_line_prices) {
    this.updated_at = updated_at;
    this.reference = reference;
    this.ecommerce_trade_pos_info = ecommerce_trade_pos_info;
    this.country_iso = country_iso;
    this.online_store_id = online_store_id;
    this.online_store_Code = online_store_Code;
    this.time_line_prices = time_line_prices;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return updated_at;
    case 1: return reference;
    case 2: return ecommerce_trade_pos_info;
    case 3: return country_iso;
    case 4: return online_store_id;
    case 5: return online_store_Code;
    case 6: return time_line_prices;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: updated_at = (java.lang.Long)value$; break;
    case 1: reference = (com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType)value$; break;
    case 2: ecommerce_trade_pos_info = (com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType)value$; break;
    case 3: country_iso = (java.lang.CharSequence)value$; break;
    case 4: online_store_id = (java.lang.Integer)value$; break;
    case 5: online_store_Code = (java.lang.CharSequence)value$; break;
    case 6: time_line_prices = (java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'updated_at' field.
   * @return The strings ISO UTC of the update date
   */
  public long getUpdatedAt() {
    return updated_at;
  }


  /**
   * Sets the value of the 'updated_at' field.
   * The strings ISO UTC of the update date
   * @param value the value to set.
   */
  public void setUpdatedAt(long value) {
    this.updated_at = value;
  }

  /**
   * Gets the value of the 'reference' field.
   * @return The reference details of the article
   */
  public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType getReference() {
    return reference;
  }


  /**
   * Sets the value of the 'reference' field.
   * The reference details of the article
   * @param value the value to set.
   */
  public void setReference(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType value) {
    this.reference = value;
  }

  /**
   * Gets the value of the 'ecommerce_trade_pos_info' field.
   * @return Ecommerce trade por info
   */
  public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType getEcommerceTradePosInfo() {
    return ecommerce_trade_pos_info;
  }


  /**
   * Sets the value of the 'ecommerce_trade_pos_info' field.
   * Ecommerce trade por info
   * @param value the value to set.
   */
  public void setEcommerceTradePosInfo(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType value) {
    this.ecommerce_trade_pos_info = value;
  }

  /**
   * Gets the value of the 'country_iso' field.
   * @return The country ISO 
   */
  public java.lang.CharSequence getCountryIso() {
    return country_iso;
  }


  /**
   * Sets the value of the 'country_iso' field.
   * The country ISO 
   * @param value the value to set.
   */
  public void setCountryIso(java.lang.CharSequence value) {
    this.country_iso = value;
  }

  /**
   * Gets the value of the 'online_store_id' field.
   * @return The online store id
   */
  public int getOnlineStoreId() {
    return online_store_id;
  }


  /**
   * Sets the value of the 'online_store_id' field.
   * The online store id
   * @param value the value to set.
   */
  public void setOnlineStoreId(int value) {
    this.online_store_id = value;
  }

  /**
   * Gets the value of the 'online_store_Code' field.
   * @return Descripcion of the online store store
   */
  public java.lang.CharSequence getOnlineStoreCode() {
    return online_store_Code;
  }


  /**
   * Sets the value of the 'online_store_Code' field.
   * Descripcion of the online store store
   * @param value the value to set.
   */
  public void setOnlineStoreCode(java.lang.CharSequence value) {
    this.online_store_Code = value;
  }

  /**
   * Gets the value of the 'time_line_prices' field.
   * @return List of prices by utc date
   */
  public java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> getTimeLinePrices() {
    return time_line_prices;
  }


  /**
   * Sets the value of the 'time_line_prices' field.
   * List of prices by utc date
   * @param value the value to set.
   */
  public void setTimeLinePrices(java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> value) {
    this.time_line_prices = value;
  }

  /**
   * Creates a new SeasonLessProductPriceType RecordBuilder.
   * @return A new SeasonLessProductPriceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder newBuilder() {
    return new com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder();
  }

  /**
   * Creates a new SeasonLessProductPriceType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SeasonLessProductPriceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder(other);
    }
  }

  /**
   * Creates a new SeasonLessProductPriceType RecordBuilder by copying an existing SeasonLessProductPriceType instance.
   * @param other The existing instance to copy.
   * @return A new SeasonLessProductPriceType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder(other);
    }
  }

  /**
   * RecordBuilder for SeasonLessProductPriceType instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SeasonLessProductPriceType>
    implements org.apache.avro.data.RecordBuilder<SeasonLessProductPriceType> {

    /** The strings ISO UTC of the update date */
    private long updated_at;
    /** The reference details of the article */
    private com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType reference;
    private com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder referenceBuilder;
    /** Ecommerce trade por info */
    private com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType ecommerce_trade_pos_info;
    private com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder ecommerce_trade_pos_infoBuilder;
    /** The country ISO  */
    private java.lang.CharSequence country_iso;
    /** The online store id */
    private int online_store_id;
    /** Descripcion of the online store store */
    private java.lang.CharSequence online_store_Code;
    /** List of prices by utc date */
    private java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> time_line_prices;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[0].schema(), other.updated_at);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.reference)) {
        this.reference = data().deepCopy(fields()[1].schema(), other.reference);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasReferenceBuilder()) {
        this.referenceBuilder = com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.newBuilder(other.getReferenceBuilder());
      }
      if (isValidValue(fields()[2], other.ecommerce_trade_pos_info)) {
        this.ecommerce_trade_pos_info = data().deepCopy(fields()[2].schema(), other.ecommerce_trade_pos_info);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasEcommerceTradePosInfoBuilder()) {
        this.ecommerce_trade_pos_infoBuilder = com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.newBuilder(other.getEcommerceTradePosInfoBuilder());
      }
      if (isValidValue(fields()[3], other.country_iso)) {
        this.country_iso = data().deepCopy(fields()[3].schema(), other.country_iso);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.online_store_id)) {
        this.online_store_id = data().deepCopy(fields()[4].schema(), other.online_store_id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.online_store_Code)) {
        this.online_store_Code = data().deepCopy(fields()[5].schema(), other.online_store_Code);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.time_line_prices)) {
        this.time_line_prices = data().deepCopy(fields()[6].schema(), other.time_line_prices);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing SeasonLessProductPriceType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[0].schema(), other.updated_at);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.reference)) {
        this.reference = data().deepCopy(fields()[1].schema(), other.reference);
        fieldSetFlags()[1] = true;
      }
      this.referenceBuilder = null;
      if (isValidValue(fields()[2], other.ecommerce_trade_pos_info)) {
        this.ecommerce_trade_pos_info = data().deepCopy(fields()[2].schema(), other.ecommerce_trade_pos_info);
        fieldSetFlags()[2] = true;
      }
      this.ecommerce_trade_pos_infoBuilder = null;
      if (isValidValue(fields()[3], other.country_iso)) {
        this.country_iso = data().deepCopy(fields()[3].schema(), other.country_iso);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.online_store_id)) {
        this.online_store_id = data().deepCopy(fields()[4].schema(), other.online_store_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.online_store_Code)) {
        this.online_store_Code = data().deepCopy(fields()[5].schema(), other.online_store_Code);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.time_line_prices)) {
        this.time_line_prices = data().deepCopy(fields()[6].schema(), other.time_line_prices);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'updated_at' field.
      * The strings ISO UTC of the update date
      * @return The value.
      */
    public long getUpdatedAt() {
      return updated_at;
    }


    /**
      * Sets the value of the 'updated_at' field.
      * The strings ISO UTC of the update date
      * @param value The value of 'updated_at'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setUpdatedAt(long value) {
      validate(fields()[0], value);
      this.updated_at = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_at' field has been set.
      * The strings ISO UTC of the update date
      * @return True if the 'updated_at' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'updated_at' field.
      * The strings ISO UTC of the update date
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearUpdatedAt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'reference' field.
      * The reference details of the article
      * @return The value.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType getReference() {
      return reference;
    }


    /**
      * Sets the value of the 'reference' field.
      * The reference details of the article
      * @param value The value of 'reference'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setReference(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType value) {
      validate(fields()[1], value);
      this.referenceBuilder = null;
      this.reference = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'reference' field has been set.
      * The reference details of the article
      * @return True if the 'reference' field has been set, false otherwise.
      */
    public boolean hasReference() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'reference' field and creates one if it doesn't exist yet.
     * The reference details of the article
     * @return This builder.
     */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder getReferenceBuilder() {
      if (referenceBuilder == null) {
        if (hasReference()) {
          setReferenceBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.newBuilder(reference));
        } else {
          setReferenceBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.newBuilder());
        }
      }
      return referenceBuilder;
    }

    /**
     * Sets the Builder instance for the 'reference' field
     * The reference details of the article
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setReferenceBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType.Builder value) {
      clearReference();
      referenceBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'reference' field has an active Builder instance
     * The reference details of the article
     * @return True if the 'reference' field has an active Builder instance
     */
    public boolean hasReferenceBuilder() {
      return referenceBuilder != null;
    }

    /**
      * Clears the value of the 'reference' field.
      * The reference details of the article
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearReference() {
      reference = null;
      referenceBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ecommerce_trade_pos_info' field.
      * Ecommerce trade por info
      * @return The value.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType getEcommerceTradePosInfo() {
      return ecommerce_trade_pos_info;
    }


    /**
      * Sets the value of the 'ecommerce_trade_pos_info' field.
      * Ecommerce trade por info
      * @param value The value of 'ecommerce_trade_pos_info'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setEcommerceTradePosInfo(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType value) {
      validate(fields()[2], value);
      this.ecommerce_trade_pos_infoBuilder = null;
      this.ecommerce_trade_pos_info = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ecommerce_trade_pos_info' field has been set.
      * Ecommerce trade por info
      * @return True if the 'ecommerce_trade_pos_info' field has been set, false otherwise.
      */
    public boolean hasEcommerceTradePosInfo() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'ecommerce_trade_pos_info' field and creates one if it doesn't exist yet.
     * Ecommerce trade por info
     * @return This builder.
     */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder getEcommerceTradePosInfoBuilder() {
      if (ecommerce_trade_pos_infoBuilder == null) {
        if (hasEcommerceTradePosInfo()) {
          setEcommerceTradePosInfoBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.newBuilder(ecommerce_trade_pos_info));
        } else {
          setEcommerceTradePosInfoBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.newBuilder());
        }
      }
      return ecommerce_trade_pos_infoBuilder;
    }

    /**
     * Sets the Builder instance for the 'ecommerce_trade_pos_info' field
     * Ecommerce trade por info
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setEcommerceTradePosInfoBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder value) {
      clearEcommerceTradePosInfo();
      ecommerce_trade_pos_infoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'ecommerce_trade_pos_info' field has an active Builder instance
     * Ecommerce trade por info
     * @return True if the 'ecommerce_trade_pos_info' field has an active Builder instance
     */
    public boolean hasEcommerceTradePosInfoBuilder() {
      return ecommerce_trade_pos_infoBuilder != null;
    }

    /**
      * Clears the value of the 'ecommerce_trade_pos_info' field.
      * Ecommerce trade por info
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearEcommerceTradePosInfo() {
      ecommerce_trade_pos_info = null;
      ecommerce_trade_pos_infoBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'country_iso' field.
      * The country ISO 
      * @return The value.
      */
    public java.lang.CharSequence getCountryIso() {
      return country_iso;
    }


    /**
      * Sets the value of the 'country_iso' field.
      * The country ISO 
      * @param value The value of 'country_iso'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setCountryIso(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.country_iso = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'country_iso' field has been set.
      * The country ISO 
      * @return True if the 'country_iso' field has been set, false otherwise.
      */
    public boolean hasCountryIso() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'country_iso' field.
      * The country ISO 
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearCountryIso() {
      country_iso = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'online_store_id' field.
      * The online store id
      * @return The value.
      */
    public int getOnlineStoreId() {
      return online_store_id;
    }


    /**
      * Sets the value of the 'online_store_id' field.
      * The online store id
      * @param value The value of 'online_store_id'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setOnlineStoreId(int value) {
      validate(fields()[4], value);
      this.online_store_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'online_store_id' field has been set.
      * The online store id
      * @return True if the 'online_store_id' field has been set, false otherwise.
      */
    public boolean hasOnlineStoreId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'online_store_id' field.
      * The online store id
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearOnlineStoreId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'online_store_Code' field.
      * Descripcion of the online store store
      * @return The value.
      */
    public java.lang.CharSequence getOnlineStoreCode() {
      return online_store_Code;
    }


    /**
      * Sets the value of the 'online_store_Code' field.
      * Descripcion of the online store store
      * @param value The value of 'online_store_Code'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setOnlineStoreCode(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.online_store_Code = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'online_store_Code' field has been set.
      * Descripcion of the online store store
      * @return True if the 'online_store_Code' field has been set, false otherwise.
      */
    public boolean hasOnlineStoreCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'online_store_Code' field.
      * Descripcion of the online store store
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearOnlineStoreCode() {
      online_store_Code = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_line_prices' field.
      * List of prices by utc date
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> getTimeLinePrices() {
      return time_line_prices;
    }


    /**
      * Sets the value of the 'time_line_prices' field.
      * List of prices by utc date
      * @param value The value of 'time_line_prices'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder setTimeLinePrices(java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> value) {
      validate(fields()[6], value);
      this.time_line_prices = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'time_line_prices' field has been set.
      * List of prices by utc date
      * @return True if the 'time_line_prices' field has been set, false otherwise.
      */
    public boolean hasTimeLinePrices() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'time_line_prices' field.
      * List of prices by utc date
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.SeasonLessProductPriceType.Builder clearTimeLinePrices() {
      time_line_prices = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SeasonLessProductPriceType build() {
      try {
        SeasonLessProductPriceType record = new SeasonLessProductPriceType();
        record.updated_at = fieldSetFlags()[0] ? this.updated_at : (java.lang.Long) defaultValue(fields()[0]);
        if (referenceBuilder != null) {
          try {
            record.reference = this.referenceBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("reference"));
            throw e;
          }
        } else {
          record.reference = fieldSetFlags()[1] ? this.reference : (com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType) defaultValue(fields()[1]);
        }
        if (ecommerce_trade_pos_infoBuilder != null) {
          try {
            record.ecommerce_trade_pos_info = this.ecommerce_trade_pos_infoBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("ecommerce_trade_pos_info"));
            throw e;
          }
        } else {
          record.ecommerce_trade_pos_info = fieldSetFlags()[2] ? this.ecommerce_trade_pos_info : (com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType) defaultValue(fields()[2]);
        }
        record.country_iso = fieldSetFlags()[3] ? this.country_iso : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.online_store_id = fieldSetFlags()[4] ? this.online_store_id : (java.lang.Integer) defaultValue(fields()[4]);
        record.online_store_Code = fieldSetFlags()[5] ? this.online_store_Code : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.time_line_prices = fieldSetFlags()[6] ? this.time_line_prices : (java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType>) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SeasonLessProductPriceType>
    WRITER$ = (org.apache.avro.io.DatumWriter<SeasonLessProductPriceType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SeasonLessProductPriceType>
    READER$ = (org.apache.avro.io.DatumReader<SeasonLessProductPriceType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.updated_at);

    this.reference.customEncode(out);

    this.ecommerce_trade_pos_info.customEncode(out);

    out.writeString(this.country_iso);

    out.writeInt(this.online_store_id);

    out.writeString(this.online_store_Code);

    long size0 = this.time_line_prices.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType e0: this.time_line_prices) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.updated_at = in.readLong();

      if (this.reference == null) {
        this.reference = new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType();
      }
      this.reference.customDecode(in);

      if (this.ecommerce_trade_pos_info == null) {
        this.ecommerce_trade_pos_info = new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType();
      }
      this.ecommerce_trade_pos_info.customDecode(in);

      this.country_iso = in.readString(this.country_iso instanceof Utf8 ? (Utf8)this.country_iso : null);

      this.online_store_id = in.readInt();

      this.online_store_Code = in.readString(this.online_store_Code instanceof Utf8 ? (Utf8)this.online_store_Code : null);

      long size0 = in.readArrayStart();
      java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> a0 = this.time_line_prices;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType>((int)size0, SCHEMA$.getField("time_line_prices").schema());
        this.time_line_prices = a0;
      } else a0.clear();
      SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.updated_at = in.readLong();
          break;

        case 1:
          if (this.reference == null) {
            this.reference = new com.inditex.mecc.ecomloadbk.api.avro.v2.ProductPriceReferenceType();
          }
          this.reference.customDecode(in);
          break;

        case 2:
          if (this.ecommerce_trade_pos_info == null) {
            this.ecommerce_trade_pos_info = new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType();
          }
          this.ecommerce_trade_pos_info.customDecode(in);
          break;

        case 3:
          this.country_iso = in.readString(this.country_iso instanceof Utf8 ? (Utf8)this.country_iso : null);
          break;

        case 4:
          this.online_store_id = in.readInt();
          break;

        case 5:
          this.online_store_Code = in.readString(this.online_store_Code instanceof Utf8 ? (Utf8)this.online_store_Code : null);
          break;

        case 6:
          long size0 = in.readArrayStart();
          java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> a0 = this.time_line_prices;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType>((int)size0, SCHEMA$.getField("time_line_prices").schema());
            this.time_line_prices = a0;
          } else a0.clear();
          SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.inditex.mecc.ecomloadbk.api.avro.v2.TimeLinePriceType();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










