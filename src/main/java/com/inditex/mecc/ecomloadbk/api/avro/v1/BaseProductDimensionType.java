/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.ecomloadbk.api.avro.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds the item's dimensions. */
@org.apache.avro.specific.AvroGenerated
public class BaseProductDimensionType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9070800341752466011L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BaseProductDimensionType\",\"namespace\":\"com.inditex.mecc.ecomloadbk.api.avro.v1\",\"doc\":\"Class that holds the item's dimensions.\",\"fields\":[{\"name\":\"lenght\",\"type\":[\"null\",\"double\"],\"doc\":\"The product lenght\",\"default\":null},{\"name\":\"width\",\"type\":[\"null\",\"double\"],\"doc\":\"The product width\",\"default\":null},{\"name\":\"height\",\"type\":[\"null\",\"double\"],\"doc\":\"The product height\",\"default\":null},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"the measure unit\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BaseProductDimensionType> ENCODER =
      new BinaryMessageEncoder<BaseProductDimensionType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BaseProductDimensionType> DECODER =
      new BinaryMessageDecoder<BaseProductDimensionType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BaseProductDimensionType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BaseProductDimensionType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BaseProductDimensionType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BaseProductDimensionType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BaseProductDimensionType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BaseProductDimensionType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BaseProductDimensionType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BaseProductDimensionType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** The product lenght */
  @Deprecated public java.lang.Double lenght;
  /** The product width */
  @Deprecated public java.lang.Double width;
  /** The product height */
  @Deprecated public java.lang.Double height;
  /** the measure unit */
  @Deprecated public java.lang.CharSequence unit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BaseProductDimensionType() {}

  /**
   * All-args constructor.
   * @param lenght The product lenght
   * @param width The product width
   * @param height The product height
   * @param unit the measure unit
   */
  public BaseProductDimensionType(java.lang.Double lenght, java.lang.Double width, java.lang.Double height, java.lang.CharSequence unit) {
    this.lenght = lenght;
    this.width = width;
    this.height = height;
    this.unit = unit;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return lenght;
    case 1: return width;
    case 2: return height;
    case 3: return unit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: lenght = (java.lang.Double)value$; break;
    case 1: width = (java.lang.Double)value$; break;
    case 2: height = (java.lang.Double)value$; break;
    case 3: unit = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'lenght' field.
   * @return The product lenght
   */
  public java.lang.Double getLenght() {
    return lenght;
  }


  /**
   * Sets the value of the 'lenght' field.
   * The product lenght
   * @param value the value to set.
   */
  public void setLenght(java.lang.Double value) {
    this.lenght = value;
  }

  /**
   * Gets the value of the 'width' field.
   * @return The product width
   */
  public java.lang.Double getWidth() {
    return width;
  }


  /**
   * Sets the value of the 'width' field.
   * The product width
   * @param value the value to set.
   */
  public void setWidth(java.lang.Double value) {
    this.width = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The product height
   */
  public java.lang.Double getHeight() {
    return height;
  }


  /**
   * Sets the value of the 'height' field.
   * The product height
   * @param value the value to set.
   */
  public void setHeight(java.lang.Double value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'unit' field.
   * @return the measure unit
   */
  public java.lang.CharSequence getUnit() {
    return unit;
  }


  /**
   * Sets the value of the 'unit' field.
   * the measure unit
   * @param value the value to set.
   */
  public void setUnit(java.lang.CharSequence value) {
    this.unit = value;
  }

  /**
   * Creates a new BaseProductDimensionType RecordBuilder.
   * @return A new BaseProductDimensionType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder newBuilder() {
    return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder();
  }

  /**
   * Creates a new BaseProductDimensionType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BaseProductDimensionType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder(other);
    }
  }

  /**
   * Creates a new BaseProductDimensionType RecordBuilder by copying an existing BaseProductDimensionType instance.
   * @param other The existing instance to copy.
   * @return A new BaseProductDimensionType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder(other);
    }
  }

  /**
   * RecordBuilder for BaseProductDimensionType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BaseProductDimensionType>
    implements org.apache.avro.data.RecordBuilder<BaseProductDimensionType> {

    /** The product lenght */
    private java.lang.Double lenght;
    /** The product width */
    private java.lang.Double width;
    /** The product height */
    private java.lang.Double height;
    /** the measure unit */
    private java.lang.CharSequence unit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.lenght)) {
        this.lenght = data().deepCopy(fields()[0].schema(), other.lenght);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.width)) {
        this.width = data().deepCopy(fields()[1].schema(), other.width);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.height)) {
        this.height = data().deepCopy(fields()[2].schema(), other.height);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.unit)) {
        this.unit = data().deepCopy(fields()[3].schema(), other.unit);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing BaseProductDimensionType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.lenght)) {
        this.lenght = data().deepCopy(fields()[0].schema(), other.lenght);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.width)) {
        this.width = data().deepCopy(fields()[1].schema(), other.width);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.height)) {
        this.height = data().deepCopy(fields()[2].schema(), other.height);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unit)) {
        this.unit = data().deepCopy(fields()[3].schema(), other.unit);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'lenght' field.
      * The product lenght
      * @return The value.
      */
    public java.lang.Double getLenght() {
      return lenght;
    }


    /**
      * Sets the value of the 'lenght' field.
      * The product lenght
      * @param value The value of 'lenght'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder setLenght(java.lang.Double value) {
      validate(fields()[0], value);
      this.lenght = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'lenght' field has been set.
      * The product lenght
      * @return True if the 'lenght' field has been set, false otherwise.
      */
    public boolean hasLenght() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'lenght' field.
      * The product lenght
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder clearLenght() {
      lenght = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'width' field.
      * The product width
      * @return The value.
      */
    public java.lang.Double getWidth() {
      return width;
    }


    /**
      * Sets the value of the 'width' field.
      * The product width
      * @param value The value of 'width'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder setWidth(java.lang.Double value) {
      validate(fields()[1], value);
      this.width = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'width' field has been set.
      * The product width
      * @return True if the 'width' field has been set, false otherwise.
      */
    public boolean hasWidth() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'width' field.
      * The product width
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder clearWidth() {
      width = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * The product height
      * @return The value.
      */
    public java.lang.Double getHeight() {
      return height;
    }


    /**
      * Sets the value of the 'height' field.
      * The product height
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder setHeight(java.lang.Double value) {
      validate(fields()[2], value);
      this.height = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * The product height
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'height' field.
      * The product height
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder clearHeight() {
      height = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'unit' field.
      * the measure unit
      * @return The value.
      */
    public java.lang.CharSequence getUnit() {
      return unit;
    }


    /**
      * Sets the value of the 'unit' field.
      * the measure unit
      * @param value The value of 'unit'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder setUnit(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.unit = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'unit' field has been set.
      * the measure unit
      * @return True if the 'unit' field has been set, false otherwise.
      */
    public boolean hasUnit() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'unit' field.
      * the measure unit
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductDimensionType.Builder clearUnit() {
      unit = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BaseProductDimensionType build() {
      try {
        BaseProductDimensionType record = new BaseProductDimensionType();
        record.lenght = fieldSetFlags()[0] ? this.lenght : (java.lang.Double) defaultValue(fields()[0]);
        record.width = fieldSetFlags()[1] ? this.width : (java.lang.Double) defaultValue(fields()[1]);
        record.height = fieldSetFlags()[2] ? this.height : (java.lang.Double) defaultValue(fields()[2]);
        record.unit = fieldSetFlags()[3] ? this.unit : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BaseProductDimensionType>
    WRITER$ = (org.apache.avro.io.DatumWriter<BaseProductDimensionType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BaseProductDimensionType>
    READER$ = (org.apache.avro.io.DatumReader<BaseProductDimensionType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.lenght == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.lenght);
    }

    if (this.width == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.width);
    }

    if (this.height == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.height);
    }

    out.writeString(this.unit);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.lenght = null;
      } else {
        this.lenght = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.width = null;
      } else {
        this.width = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.height = null;
      } else {
        this.height = in.readDouble();
      }

      this.unit = in.readString(this.unit instanceof Utf8 ? (Utf8)this.unit : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lenght = null;
          } else {
            this.lenght = in.readDouble();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.width = null;
          } else {
            this.width = in.readDouble();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.height = null;
          } else {
            this.height = in.readDouble();
          }
          break;

        case 3:
          this.unit = in.readString(this.unit instanceof Utf8 ? (Utf8)this.unit : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










