/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.ecomloadbk.api.avro.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds the color information of a base product */
@org.apache.avro.specific.AvroGenerated
public class BaseProductVariantType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6420227191174648190L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BaseProductVariantType\",\"namespace\":\"com.inditex.mecc.ecomloadbk.api.avro.v1\",\"doc\":\"Class that holds the color information of a base product\",\"fields\":[{\"name\":\"color\",\"type\":\"string\",\"doc\":\"cod color from partnumber\"},{\"name\":\"color_id\",\"type\":\"int\",\"doc\":\"ItemBean's id color\"},{\"name\":\"base_color_level_attributes\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BaseProductAttrType\",\"doc\":\"Class that holds availability changes in a base product component.\",\"fields\":[{\"name\":\"basic_attrs\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"doc\":\"List of basic attributes\"},{\"name\":\"custom_attributes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BaseProductCustomAttributeType\",\"doc\":\"Class that holds the attribute information of a base product\",\"fields\":[{\"name\":\"attr_code\",\"type\":\"string\",\"doc\":\"Key of the attribute\"},{\"name\":\"attr_type\",\"type\":{\"type\":\"enum\",\"name\":\"AttrTypeEnum\",\"symbols\":[\"NUMBER\",\"STRING\",\"BOOLEAN\"]},\"doc\":\"Primitive data type of the attribute\"},{\"name\":\"attr_value\",\"type\":\"string\",\"doc\":\"Value of the attribute\"}]}}],\"doc\":\"Key value atributes)\",\"default\":null}]}],\"doc\":\"Attributes at color level\",\"default\":null},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"The timestamp of the update date\"},{\"name\":\"sizes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"BaseProductSizeAttributeType\",\"doc\":\"Class that holds data attributes by size\",\"fields\":[{\"name\":\"reference\",\"type\":\"string\",\"doc\":\"itemBean's reference\"},{\"name\":\"legacy_catentry_id\",\"type\":[\"null\",\"long\"],\"doc\":\"The db2 product id for the beginning of the migration for the new product model\",\"default\":null},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"The timestamp of the update date\"},{\"name\":\"size_id\",\"type\":\"int\",\"doc\":\"ItemBean's id size\"},{\"name\":\"base_size_level_attributes\",\"type\":[\"null\",\"BaseProductAttrType\"],\"doc\":\"Attributes at size level\",\"default\":null},{\"name\":\"dimension\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BaseProductDimensionType\",\"doc\":\"Class that holds the item's dimensions.\",\"fields\":[{\"name\":\"lenght\",\"type\":[\"null\",\"double\"],\"doc\":\"The product lenght\",\"default\":null},{\"name\":\"width\",\"type\":[\"null\",\"double\"],\"doc\":\"The product width\",\"default\":null},{\"name\":\"height\",\"type\":[\"null\",\"double\"],\"doc\":\"The product height\",\"default\":null},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"the measure unit\"}]}],\"doc\":\"Dimensions info\",\"default\":null},{\"name\":\"weight\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BaseProductWeightType\",\"doc\":\"Class that holds the product ' weight information\",\"fields\":[{\"name\":\"value\",\"type\":\"double\",\"doc\":\"The weight ' amount\"},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"The weight unit\"}]}],\"doc\":\"Weight data\",\"default\":null}]}},\"doc\":\"Object with the size info\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BaseProductVariantType> ENCODER =
      new BinaryMessageEncoder<BaseProductVariantType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BaseProductVariantType> DECODER =
      new BinaryMessageDecoder<BaseProductVariantType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BaseProductVariantType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BaseProductVariantType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BaseProductVariantType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BaseProductVariantType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BaseProductVariantType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BaseProductVariantType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BaseProductVariantType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BaseProductVariantType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** cod color from partnumber */
  @Deprecated public java.lang.CharSequence color;
  /** ItemBean's id color */
  @Deprecated public int color_id;
  /** Attributes at color level */
  @Deprecated public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType base_color_level_attributes;
  /** The timestamp of the update date */
  @Deprecated public long updated_at;
  /** Object with the size info */
  @Deprecated public java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> sizes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BaseProductVariantType() {}

  /**
   * All-args constructor.
   * @param color cod color from partnumber
   * @param color_id ItemBean's id color
   * @param base_color_level_attributes Attributes at color level
   * @param updated_at The timestamp of the update date
   * @param sizes Object with the size info
   */
  public BaseProductVariantType(java.lang.CharSequence color, java.lang.Integer color_id, com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType base_color_level_attributes, java.lang.Long updated_at, java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> sizes) {
    this.color = color;
    this.color_id = color_id;
    this.base_color_level_attributes = base_color_level_attributes;
    this.updated_at = updated_at;
    this.sizes = sizes;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return color;
    case 1: return color_id;
    case 2: return base_color_level_attributes;
    case 3: return updated_at;
    case 4: return sizes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: color = (java.lang.CharSequence)value$; break;
    case 1: color_id = (java.lang.Integer)value$; break;
    case 2: base_color_level_attributes = (com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType)value$; break;
    case 3: updated_at = (java.lang.Long)value$; break;
    case 4: sizes = (java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'color' field.
   * @return cod color from partnumber
   */
  public java.lang.CharSequence getColor() {
    return color;
  }


  /**
   * Sets the value of the 'color' field.
   * cod color from partnumber
   * @param value the value to set.
   */
  public void setColor(java.lang.CharSequence value) {
    this.color = value;
  }

  /**
   * Gets the value of the 'color_id' field.
   * @return ItemBean's id color
   */
  public int getColorId() {
    return color_id;
  }


  /**
   * Sets the value of the 'color_id' field.
   * ItemBean's id color
   * @param value the value to set.
   */
  public void setColorId(int value) {
    this.color_id = value;
  }

  /**
   * Gets the value of the 'base_color_level_attributes' field.
   * @return Attributes at color level
   */
  public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType getBaseColorLevelAttributes() {
    return base_color_level_attributes;
  }


  /**
   * Sets the value of the 'base_color_level_attributes' field.
   * Attributes at color level
   * @param value the value to set.
   */
  public void setBaseColorLevelAttributes(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType value) {
    this.base_color_level_attributes = value;
  }

  /**
   * Gets the value of the 'updated_at' field.
   * @return The timestamp of the update date
   */
  public long getUpdatedAt() {
    return updated_at;
  }


  /**
   * Sets the value of the 'updated_at' field.
   * The timestamp of the update date
   * @param value the value to set.
   */
  public void setUpdatedAt(long value) {
    this.updated_at = value;
  }

  /**
   * Gets the value of the 'sizes' field.
   * @return Object with the size info
   */
  public java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> getSizes() {
    return sizes;
  }


  /**
   * Sets the value of the 'sizes' field.
   * Object with the size info
   * @param value the value to set.
   */
  public void setSizes(java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> value) {
    this.sizes = value;
  }

  /**
   * Creates a new BaseProductVariantType RecordBuilder.
   * @return A new BaseProductVariantType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder newBuilder() {
    return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder();
  }

  /**
   * Creates a new BaseProductVariantType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BaseProductVariantType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder(other);
    }
  }

  /**
   * Creates a new BaseProductVariantType RecordBuilder by copying an existing BaseProductVariantType instance.
   * @param other The existing instance to copy.
   * @return A new BaseProductVariantType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder(other);
    }
  }

  /**
   * RecordBuilder for BaseProductVariantType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BaseProductVariantType>
    implements org.apache.avro.data.RecordBuilder<BaseProductVariantType> {

    /** cod color from partnumber */
    private java.lang.CharSequence color;
    /** ItemBean's id color */
    private int color_id;
    /** Attributes at color level */
    private com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType base_color_level_attributes;
    private com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType.Builder base_color_level_attributesBuilder;
    /** The timestamp of the update date */
    private long updated_at;
    /** Object with the size info */
    private java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> sizes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.color)) {
        this.color = data().deepCopy(fields()[0].schema(), other.color);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.color_id)) {
        this.color_id = data().deepCopy(fields()[1].schema(), other.color_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.base_color_level_attributes)) {
        this.base_color_level_attributes = data().deepCopy(fields()[2].schema(), other.base_color_level_attributes);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasBaseColorLevelAttributesBuilder()) {
        this.base_color_level_attributesBuilder = com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType.newBuilder(other.getBaseColorLevelAttributesBuilder());
      }
      if (isValidValue(fields()[3], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[3].schema(), other.updated_at);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.sizes)) {
        this.sizes = data().deepCopy(fields()[4].schema(), other.sizes);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing BaseProductVariantType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.color)) {
        this.color = data().deepCopy(fields()[0].schema(), other.color);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.color_id)) {
        this.color_id = data().deepCopy(fields()[1].schema(), other.color_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.base_color_level_attributes)) {
        this.base_color_level_attributes = data().deepCopy(fields()[2].schema(), other.base_color_level_attributes);
        fieldSetFlags()[2] = true;
      }
      this.base_color_level_attributesBuilder = null;
      if (isValidValue(fields()[3], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[3].schema(), other.updated_at);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sizes)) {
        this.sizes = data().deepCopy(fields()[4].schema(), other.sizes);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'color' field.
      * cod color from partnumber
      * @return The value.
      */
    public java.lang.CharSequence getColor() {
      return color;
    }


    /**
      * Sets the value of the 'color' field.
      * cod color from partnumber
      * @param value The value of 'color'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder setColor(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.color = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'color' field has been set.
      * cod color from partnumber
      * @return True if the 'color' field has been set, false otherwise.
      */
    public boolean hasColor() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'color' field.
      * cod color from partnumber
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder clearColor() {
      color = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'color_id' field.
      * ItemBean's id color
      * @return The value.
      */
    public int getColorId() {
      return color_id;
    }


    /**
      * Sets the value of the 'color_id' field.
      * ItemBean's id color
      * @param value The value of 'color_id'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder setColorId(int value) {
      validate(fields()[1], value);
      this.color_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'color_id' field has been set.
      * ItemBean's id color
      * @return True if the 'color_id' field has been set, false otherwise.
      */
    public boolean hasColorId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'color_id' field.
      * ItemBean's id color
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder clearColorId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'base_color_level_attributes' field.
      * Attributes at color level
      * @return The value.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType getBaseColorLevelAttributes() {
      return base_color_level_attributes;
    }


    /**
      * Sets the value of the 'base_color_level_attributes' field.
      * Attributes at color level
      * @param value The value of 'base_color_level_attributes'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder setBaseColorLevelAttributes(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType value) {
      validate(fields()[2], value);
      this.base_color_level_attributesBuilder = null;
      this.base_color_level_attributes = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'base_color_level_attributes' field has been set.
      * Attributes at color level
      * @return True if the 'base_color_level_attributes' field has been set, false otherwise.
      */
    public boolean hasBaseColorLevelAttributes() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'base_color_level_attributes' field and creates one if it doesn't exist yet.
     * Attributes at color level
     * @return This builder.
     */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType.Builder getBaseColorLevelAttributesBuilder() {
      if (base_color_level_attributesBuilder == null) {
        if (hasBaseColorLevelAttributes()) {
          setBaseColorLevelAttributesBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType.newBuilder(base_color_level_attributes));
        } else {
          setBaseColorLevelAttributesBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType.newBuilder());
        }
      }
      return base_color_level_attributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'base_color_level_attributes' field
     * Attributes at color level
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder setBaseColorLevelAttributesBuilder(com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType.Builder value) {
      clearBaseColorLevelAttributes();
      base_color_level_attributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'base_color_level_attributes' field has an active Builder instance
     * Attributes at color level
     * @return True if the 'base_color_level_attributes' field has an active Builder instance
     */
    public boolean hasBaseColorLevelAttributesBuilder() {
      return base_color_level_attributesBuilder != null;
    }

    /**
      * Clears the value of the 'base_color_level_attributes' field.
      * Attributes at color level
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder clearBaseColorLevelAttributes() {
      base_color_level_attributes = null;
      base_color_level_attributesBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_at' field.
      * The timestamp of the update date
      * @return The value.
      */
    public long getUpdatedAt() {
      return updated_at;
    }


    /**
      * Sets the value of the 'updated_at' field.
      * The timestamp of the update date
      * @param value The value of 'updated_at'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder setUpdatedAt(long value) {
      validate(fields()[3], value);
      this.updated_at = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_at' field has been set.
      * The timestamp of the update date
      * @return True if the 'updated_at' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'updated_at' field.
      * The timestamp of the update date
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder clearUpdatedAt() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sizes' field.
      * Object with the size info
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> getSizes() {
      return sizes;
    }


    /**
      * Sets the value of the 'sizes' field.
      * Object with the size info
      * @param value The value of 'sizes'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder setSizes(java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> value) {
      validate(fields()[4], value);
      this.sizes = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sizes' field has been set.
      * Object with the size info
      * @return True if the 'sizes' field has been set, false otherwise.
      */
    public boolean hasSizes() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sizes' field.
      * Object with the size info
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductVariantType.Builder clearSizes() {
      sizes = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BaseProductVariantType build() {
      try {
        BaseProductVariantType record = new BaseProductVariantType();
        record.color = fieldSetFlags()[0] ? this.color : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.color_id = fieldSetFlags()[1] ? this.color_id : (java.lang.Integer) defaultValue(fields()[1]);
        if (base_color_level_attributesBuilder != null) {
          try {
            record.base_color_level_attributes = this.base_color_level_attributesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("base_color_level_attributes"));
            throw e;
          }
        } else {
          record.base_color_level_attributes = fieldSetFlags()[2] ? this.base_color_level_attributes : (com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType) defaultValue(fields()[2]);
        }
        record.updated_at = fieldSetFlags()[3] ? this.updated_at : (java.lang.Long) defaultValue(fields()[3]);
        record.sizes = fieldSetFlags()[4] ? this.sizes : (java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType>) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BaseProductVariantType>
    WRITER$ = (org.apache.avro.io.DatumWriter<BaseProductVariantType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BaseProductVariantType>
    READER$ = (org.apache.avro.io.DatumReader<BaseProductVariantType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.color);

    out.writeInt(this.color_id);

    if (this.base_color_level_attributes == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.base_color_level_attributes.customEncode(out);
    }

    out.writeLong(this.updated_at);

    long size0 = this.sizes.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType e0: this.sizes) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.color = in.readString(this.color instanceof Utf8 ? (Utf8)this.color : null);

      this.color_id = in.readInt();

      if (in.readIndex() != 1) {
        in.readNull();
        this.base_color_level_attributes = null;
      } else {
        if (this.base_color_level_attributes == null) {
          this.base_color_level_attributes = new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType();
        }
        this.base_color_level_attributes.customDecode(in);
      }

      this.updated_at = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> a0 = this.sizes;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType>((int)size0, SCHEMA$.getField("sizes").schema());
        this.sizes = a0;
      } else a0.clear();
      SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.color = in.readString(this.color instanceof Utf8 ? (Utf8)this.color : null);
          break;

        case 1:
          this.color_id = in.readInt();
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.base_color_level_attributes = null;
          } else {
            if (this.base_color_level_attributes == null) {
              this.base_color_level_attributes = new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductAttrType();
            }
            this.base_color_level_attributes.customDecode(in);
          }
          break;

        case 3:
          this.updated_at = in.readLong();
          break;

        case 4:
          long size0 = in.readArrayStart();
          java.util.List<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> a0 = this.sizes;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType>((int)size0, SCHEMA$.getField("sizes").schema());
            this.sizes = a0;
          } else a0.clear();
          SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.inditex.mecc.ecomloadbk.api.avro.v1.BaseProductSizeAttributeType();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










