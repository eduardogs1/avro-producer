/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.ecomloadbk.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds the current ecommerce trade info */
@org.apache.avro.specific.AvroGenerated
public class EcommerceTradePosInfoType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2394274636851978761L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EcommerceTradePosInfoType\",\"namespace\":\"com.inditex.mecc.ecomloadbk.api.avro.v2\",\"doc\":\"Class that holds the current ecommerce trade info\",\"fields\":[{\"name\":\"tradeposcn_id\",\"type\":\"long\",\"doc\":\"Internal ecommerce trade id\"},{\"name\":\"member_id\",\"type\":\"long\",\"doc\":\"Internal member id\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Internal ecommerce trade name\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EcommerceTradePosInfoType> ENCODER =
      new BinaryMessageEncoder<EcommerceTradePosInfoType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EcommerceTradePosInfoType> DECODER =
      new BinaryMessageDecoder<EcommerceTradePosInfoType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EcommerceTradePosInfoType> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EcommerceTradePosInfoType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EcommerceTradePosInfoType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EcommerceTradePosInfoType>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EcommerceTradePosInfoType to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EcommerceTradePosInfoType from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EcommerceTradePosInfoType instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EcommerceTradePosInfoType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Internal ecommerce trade id */
  @Deprecated public long tradeposcn_id;
  /** Internal member id */
  @Deprecated public long member_id;
  /** Internal ecommerce trade name */
  @Deprecated public java.lang.CharSequence name;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EcommerceTradePosInfoType() {}

  /**
   * All-args constructor.
   * @param tradeposcn_id Internal ecommerce trade id
   * @param member_id Internal member id
   * @param name Internal ecommerce trade name
   */
  public EcommerceTradePosInfoType(java.lang.Long tradeposcn_id, java.lang.Long member_id, java.lang.CharSequence name) {
    this.tradeposcn_id = tradeposcn_id;
    this.member_id = member_id;
    this.name = name;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tradeposcn_id;
    case 1: return member_id;
    case 2: return name;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tradeposcn_id = (java.lang.Long)value$; break;
    case 1: member_id = (java.lang.Long)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tradeposcn_id' field.
   * @return Internal ecommerce trade id
   */
  public long getTradeposcnId() {
    return tradeposcn_id;
  }


  /**
   * Sets the value of the 'tradeposcn_id' field.
   * Internal ecommerce trade id
   * @param value the value to set.
   */
  public void setTradeposcnId(long value) {
    this.tradeposcn_id = value;
  }

  /**
   * Gets the value of the 'member_id' field.
   * @return Internal member id
   */
  public long getMemberId() {
    return member_id;
  }


  /**
   * Sets the value of the 'member_id' field.
   * Internal member id
   * @param value the value to set.
   */
  public void setMemberId(long value) {
    this.member_id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Internal ecommerce trade name
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * Internal ecommerce trade name
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Creates a new EcommerceTradePosInfoType RecordBuilder.
   * @return A new EcommerceTradePosInfoType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder newBuilder() {
    return new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder();
  }

  /**
   * Creates a new EcommerceTradePosInfoType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EcommerceTradePosInfoType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder(other);
    }
  }

  /**
   * Creates a new EcommerceTradePosInfoType RecordBuilder by copying an existing EcommerceTradePosInfoType instance.
   * @param other The existing instance to copy.
   * @return A new EcommerceTradePosInfoType RecordBuilder
   */
  public static com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder newBuilder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType other) {
    if (other == null) {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder();
    } else {
      return new com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder(other);
    }
  }

  /**
   * RecordBuilder for EcommerceTradePosInfoType instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EcommerceTradePosInfoType>
    implements org.apache.avro.data.RecordBuilder<EcommerceTradePosInfoType> {

    /** Internal ecommerce trade id */
    private long tradeposcn_id;
    /** Internal member id */
    private long member_id;
    /** Internal ecommerce trade name */
    private java.lang.CharSequence name;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tradeposcn_id)) {
        this.tradeposcn_id = data().deepCopy(fields()[0].schema(), other.tradeposcn_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.member_id)) {
        this.member_id = data().deepCopy(fields()[1].schema(), other.member_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing EcommerceTradePosInfoType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.tradeposcn_id)) {
        this.tradeposcn_id = data().deepCopy(fields()[0].schema(), other.tradeposcn_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.member_id)) {
        this.member_id = data().deepCopy(fields()[1].schema(), other.member_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'tradeposcn_id' field.
      * Internal ecommerce trade id
      * @return The value.
      */
    public long getTradeposcnId() {
      return tradeposcn_id;
    }


    /**
      * Sets the value of the 'tradeposcn_id' field.
      * Internal ecommerce trade id
      * @param value The value of 'tradeposcn_id'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder setTradeposcnId(long value) {
      validate(fields()[0], value);
      this.tradeposcn_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeposcn_id' field has been set.
      * Internal ecommerce trade id
      * @return True if the 'tradeposcn_id' field has been set, false otherwise.
      */
    public boolean hasTradeposcnId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tradeposcn_id' field.
      * Internal ecommerce trade id
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder clearTradeposcnId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'member_id' field.
      * Internal member id
      * @return The value.
      */
    public long getMemberId() {
      return member_id;
    }


    /**
      * Sets the value of the 'member_id' field.
      * Internal member id
      * @param value The value of 'member_id'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder setMemberId(long value) {
      validate(fields()[1], value);
      this.member_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'member_id' field has been set.
      * Internal member id
      * @return True if the 'member_id' field has been set, false otherwise.
      */
    public boolean hasMemberId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'member_id' field.
      * Internal member id
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder clearMemberId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Internal ecommerce trade name
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * Internal ecommerce trade name
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Internal ecommerce trade name
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * Internal ecommerce trade name
      * @return This builder.
      */
    public com.inditex.mecc.ecomloadbk.api.avro.v2.EcommerceTradePosInfoType.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EcommerceTradePosInfoType build() {
      try {
        EcommerceTradePosInfoType record = new EcommerceTradePosInfoType();
        record.tradeposcn_id = fieldSetFlags()[0] ? this.tradeposcn_id : (java.lang.Long) defaultValue(fields()[0]);
        record.member_id = fieldSetFlags()[1] ? this.member_id : (java.lang.Long) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EcommerceTradePosInfoType>
    WRITER$ = (org.apache.avro.io.DatumWriter<EcommerceTradePosInfoType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EcommerceTradePosInfoType>
    READER$ = (org.apache.avro.io.DatumReader<EcommerceTradePosInfoType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.tradeposcn_id);

    out.writeLong(this.member_id);

    out.writeString(this.name);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.tradeposcn_id = in.readLong();

      this.member_id = in.readLong();

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.tradeposcn_id = in.readLong();
          break;

        case 1:
          this.member_id = in.readLong();
          break;

        case 2:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










