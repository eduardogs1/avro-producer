/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprwat.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Holds basic data of a child commercial component. */
@org.apache.avro.specific.AvroGenerated
public class Item extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4223119870029400621L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Item\",\"namespace\":\"com.inditex.mecc.mecprwat.api.avro.v2\",\"doc\":\"Holds basic data of a child commercial component.\",\"fields\":[{\"name\":\"item_id\",\"type\":\"long\",\"doc\":\"Child commercial component unique id.\"},{\"name\":\"size_id\",\"type\":\"long\",\"doc\":\"Child commercial component size id.\"},{\"name\":\"is_buyable\",\"type\":\"boolean\",\"doc\":\"Indicates whether the item is buyable or not.\"},{\"name\":\"reference\",\"type\":\"string\",\"doc\":\"Child commercial component partnumber.\"},{\"name\":\"hscode\",\"type\":[\"null\",\"long\"],\"doc\":\"Tariff heading code used by finances.\",\"default\":null},{\"name\":\"country_manufacture\",\"type\":[\"null\",\"string\"],\"doc\":\"Code indicating the country of manufacture\",\"default\":null},{\"name\":\"join_life\",\"type\":[\"null\",\"string\"],\"doc\":\"Join life code.\"},{\"name\":\"marks\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Marks at item level\",\"default\":[]},{\"name\":\"measures\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Measure\",\"doc\":\"Class that holds the information about an individual measure.\",\"fields\":[{\"name\":\"kind\",\"type\":\"string\",\"doc\":\"Kind of measure [weight, length, width, height]\"},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"Unit of the measure\"},{\"name\":\"value\",\"type\":\"double\",\"doc\":\"Measure value\"},{\"name\":\"store_id\",\"type\":[\"null\",\"long\"],\"doc\":\"StoreId of the measure\",\"default\":null}]}},\"doc\":\"Indicates measures for an item\",\"default\":[]},{\"name\":\"additional_info\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\",\"default\":{}}],\"doc\":\"Optional with dynamic additional information.\",\"default\":null},{\"name\":\"multi_valued_attributes\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"MultiValuedAttribute\",\"doc\":\"Class that represents a list of values for a multi valued attribute.\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Indicates the values of the attribute.\",\"default\":[]}]},\"default\":{}}],\"doc\":\"List of multi_valued_attributes of the item\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Item> ENCODER =
      new BinaryMessageEncoder<Item>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Item> DECODER =
      new BinaryMessageDecoder<Item>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Item> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Item> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Item> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Item>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Item to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Item from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Item instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Item fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Child commercial component unique id. */
  @Deprecated public long item_id;
  /** Child commercial component size id. */
  @Deprecated public long size_id;
  /** Indicates whether the item is buyable or not. */
  @Deprecated public boolean is_buyable;
  /** Child commercial component partnumber. */
  @Deprecated public java.lang.CharSequence reference;
  /** Tariff heading code used by finances. */
  @Deprecated public java.lang.Long hscode;
  /** Code indicating the country of manufacture */
  @Deprecated public java.lang.CharSequence country_manufacture;
  /** Join life code. */
  @Deprecated public java.lang.CharSequence join_life;
  /** Marks at item level */
  @Deprecated public java.util.List<java.lang.CharSequence> marks;
  /** Indicates measures for an item */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> measures;
  /** Optional with dynamic additional information. */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additional_info;
  /** List of multi_valued_attributes of the item */
  @Deprecated public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> multi_valued_attributes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Item() {}

  /**
   * All-args constructor.
   * @param item_id Child commercial component unique id.
   * @param size_id Child commercial component size id.
   * @param is_buyable Indicates whether the item is buyable or not.
   * @param reference Child commercial component partnumber.
   * @param hscode Tariff heading code used by finances.
   * @param country_manufacture Code indicating the country of manufacture
   * @param join_life Join life code.
   * @param marks Marks at item level
   * @param measures Indicates measures for an item
   * @param additional_info Optional with dynamic additional information.
   * @param multi_valued_attributes List of multi_valued_attributes of the item
   */
  public Item(java.lang.Long item_id, java.lang.Long size_id, java.lang.Boolean is_buyable, java.lang.CharSequence reference, java.lang.Long hscode, java.lang.CharSequence country_manufacture, java.lang.CharSequence join_life, java.util.List<java.lang.CharSequence> marks, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> measures, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additional_info, java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> multi_valued_attributes) {
    this.item_id = item_id;
    this.size_id = size_id;
    this.is_buyable = is_buyable;
    this.reference = reference;
    this.hscode = hscode;
    this.country_manufacture = country_manufacture;
    this.join_life = join_life;
    this.marks = marks;
    this.measures = measures;
    this.additional_info = additional_info;
    this.multi_valued_attributes = multi_valued_attributes;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item_id;
    case 1: return size_id;
    case 2: return is_buyable;
    case 3: return reference;
    case 4: return hscode;
    case 5: return country_manufacture;
    case 6: return join_life;
    case 7: return marks;
    case 8: return measures;
    case 9: return additional_info;
    case 10: return multi_valued_attributes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item_id = (java.lang.Long)value$; break;
    case 1: size_id = (java.lang.Long)value$; break;
    case 2: is_buyable = (java.lang.Boolean)value$; break;
    case 3: reference = (java.lang.CharSequence)value$; break;
    case 4: hscode = (java.lang.Long)value$; break;
    case 5: country_manufacture = (java.lang.CharSequence)value$; break;
    case 6: join_life = (java.lang.CharSequence)value$; break;
    case 7: marks = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: measures = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure>)value$; break;
    case 9: additional_info = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 10: multi_valued_attributes = (java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'item_id' field.
   * @return Child commercial component unique id.
   */
  public long getItemId() {
    return item_id;
  }


  /**
   * Sets the value of the 'item_id' field.
   * Child commercial component unique id.
   * @param value the value to set.
   */
  public void setItemId(long value) {
    this.item_id = value;
  }

  /**
   * Gets the value of the 'size_id' field.
   * @return Child commercial component size id.
   */
  public long getSizeId() {
    return size_id;
  }


  /**
   * Sets the value of the 'size_id' field.
   * Child commercial component size id.
   * @param value the value to set.
   */
  public void setSizeId(long value) {
    this.size_id = value;
  }

  /**
   * Gets the value of the 'is_buyable' field.
   * @return Indicates whether the item is buyable or not.
   */
  public boolean getIsBuyable() {
    return is_buyable;
  }


  /**
   * Sets the value of the 'is_buyable' field.
   * Indicates whether the item is buyable or not.
   * @param value the value to set.
   */
  public void setIsBuyable(boolean value) {
    this.is_buyable = value;
  }

  /**
   * Gets the value of the 'reference' field.
   * @return Child commercial component partnumber.
   */
  public java.lang.CharSequence getReference() {
    return reference;
  }


  /**
   * Sets the value of the 'reference' field.
   * Child commercial component partnumber.
   * @param value the value to set.
   */
  public void setReference(java.lang.CharSequence value) {
    this.reference = value;
  }

  /**
   * Gets the value of the 'hscode' field.
   * @return Tariff heading code used by finances.
   */
  public java.lang.Long getHscode() {
    return hscode;
  }


  /**
   * Sets the value of the 'hscode' field.
   * Tariff heading code used by finances.
   * @param value the value to set.
   */
  public void setHscode(java.lang.Long value) {
    this.hscode = value;
  }

  /**
   * Gets the value of the 'country_manufacture' field.
   * @return Code indicating the country of manufacture
   */
  public java.lang.CharSequence getCountryManufacture() {
    return country_manufacture;
  }


  /**
   * Sets the value of the 'country_manufacture' field.
   * Code indicating the country of manufacture
   * @param value the value to set.
   */
  public void setCountryManufacture(java.lang.CharSequence value) {
    this.country_manufacture = value;
  }

  /**
   * Gets the value of the 'join_life' field.
   * @return Join life code.
   */
  public java.lang.CharSequence getJoinLife() {
    return join_life;
  }


  /**
   * Sets the value of the 'join_life' field.
   * Join life code.
   * @param value the value to set.
   */
  public void setJoinLife(java.lang.CharSequence value) {
    this.join_life = value;
  }

  /**
   * Gets the value of the 'marks' field.
   * @return Marks at item level
   */
  public java.util.List<java.lang.CharSequence> getMarks() {
    return marks;
  }


  /**
   * Sets the value of the 'marks' field.
   * Marks at item level
   * @param value the value to set.
   */
  public void setMarks(java.util.List<java.lang.CharSequence> value) {
    this.marks = value;
  }

  /**
   * Gets the value of the 'measures' field.
   * @return Indicates measures for an item
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> getMeasures() {
    return measures;
  }


  /**
   * Sets the value of the 'measures' field.
   * Indicates measures for an item
   * @param value the value to set.
   */
  public void setMeasures(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> value) {
    this.measures = value;
  }

  /**
   * Gets the value of the 'additional_info' field.
   * @return Optional with dynamic additional information.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalInfo() {
    return additional_info;
  }


  /**
   * Sets the value of the 'additional_info' field.
   * Optional with dynamic additional information.
   * @param value the value to set.
   */
  public void setAdditionalInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.additional_info = value;
  }

  /**
   * Gets the value of the 'multi_valued_attributes' field.
   * @return List of multi_valued_attributes of the item
   */
  public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> getMultiValuedAttributes() {
    return multi_valued_attributes;
  }


  /**
   * Sets the value of the 'multi_valued_attributes' field.
   * List of multi_valued_attributes of the item
   * @param value the value to set.
   */
  public void setMultiValuedAttributes(java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> value) {
    this.multi_valued_attributes = value;
  }

  /**
   * Creates a new Item RecordBuilder.
   * @return A new Item RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder newBuilder() {
    return new com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder();
  }

  /**
   * Creates a new Item RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Item RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder(other);
    }
  }

  /**
   * Creates a new Item RecordBuilder by copying an existing Item instance.
   * @param other The existing instance to copy.
   * @return A new Item RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Item other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder(other);
    }
  }

  /**
   * RecordBuilder for Item instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Item>
    implements org.apache.avro.data.RecordBuilder<Item> {

    /** Child commercial component unique id. */
    private long item_id;
    /** Child commercial component size id. */
    private long size_id;
    /** Indicates whether the item is buyable or not. */
    private boolean is_buyable;
    /** Child commercial component partnumber. */
    private java.lang.CharSequence reference;
    /** Tariff heading code used by finances. */
    private java.lang.Long hscode;
    /** Code indicating the country of manufacture */
    private java.lang.CharSequence country_manufacture;
    /** Join life code. */
    private java.lang.CharSequence join_life;
    /** Marks at item level */
    private java.util.List<java.lang.CharSequence> marks;
    /** Indicates measures for an item */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> measures;
    /** Optional with dynamic additional information. */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additional_info;
    /** List of multi_valued_attributes of the item */
    private java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> multi_valued_attributes;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item_id)) {
        this.item_id = data().deepCopy(fields()[0].schema(), other.item_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.size_id)) {
        this.size_id = data().deepCopy(fields()[1].schema(), other.size_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.is_buyable)) {
        this.is_buyable = data().deepCopy(fields()[2].schema(), other.is_buyable);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.reference)) {
        this.reference = data().deepCopy(fields()[3].schema(), other.reference);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.hscode)) {
        this.hscode = data().deepCopy(fields()[4].schema(), other.hscode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.country_manufacture)) {
        this.country_manufacture = data().deepCopy(fields()[5].schema(), other.country_manufacture);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.join_life)) {
        this.join_life = data().deepCopy(fields()[6].schema(), other.join_life);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.marks)) {
        this.marks = data().deepCopy(fields()[7].schema(), other.marks);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.measures)) {
        this.measures = data().deepCopy(fields()[8].schema(), other.measures);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.additional_info)) {
        this.additional_info = data().deepCopy(fields()[9].schema(), other.additional_info);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.multi_valued_attributes)) {
        this.multi_valued_attributes = data().deepCopy(fields()[10].schema(), other.multi_valued_attributes);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing Item instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.Item other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.item_id)) {
        this.item_id = data().deepCopy(fields()[0].schema(), other.item_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.size_id)) {
        this.size_id = data().deepCopy(fields()[1].schema(), other.size_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.is_buyable)) {
        this.is_buyable = data().deepCopy(fields()[2].schema(), other.is_buyable);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.reference)) {
        this.reference = data().deepCopy(fields()[3].schema(), other.reference);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hscode)) {
        this.hscode = data().deepCopy(fields()[4].schema(), other.hscode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.country_manufacture)) {
        this.country_manufacture = data().deepCopy(fields()[5].schema(), other.country_manufacture);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.join_life)) {
        this.join_life = data().deepCopy(fields()[6].schema(), other.join_life);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.marks)) {
        this.marks = data().deepCopy(fields()[7].schema(), other.marks);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.measures)) {
        this.measures = data().deepCopy(fields()[8].schema(), other.measures);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.additional_info)) {
        this.additional_info = data().deepCopy(fields()[9].schema(), other.additional_info);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.multi_valued_attributes)) {
        this.multi_valued_attributes = data().deepCopy(fields()[10].schema(), other.multi_valued_attributes);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'item_id' field.
      * Child commercial component unique id.
      * @return The value.
      */
    public long getItemId() {
      return item_id;
    }


    /**
      * Sets the value of the 'item_id' field.
      * Child commercial component unique id.
      * @param value The value of 'item_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setItemId(long value) {
      validate(fields()[0], value);
      this.item_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'item_id' field has been set.
      * Child commercial component unique id.
      * @return True if the 'item_id' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'item_id' field.
      * Child commercial component unique id.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearItemId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'size_id' field.
      * Child commercial component size id.
      * @return The value.
      */
    public long getSizeId() {
      return size_id;
    }


    /**
      * Sets the value of the 'size_id' field.
      * Child commercial component size id.
      * @param value The value of 'size_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setSizeId(long value) {
      validate(fields()[1], value);
      this.size_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'size_id' field has been set.
      * Child commercial component size id.
      * @return True if the 'size_id' field has been set, false otherwise.
      */
    public boolean hasSizeId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'size_id' field.
      * Child commercial component size id.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearSizeId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_buyable' field.
      * Indicates whether the item is buyable or not.
      * @return The value.
      */
    public boolean getIsBuyable() {
      return is_buyable;
    }


    /**
      * Sets the value of the 'is_buyable' field.
      * Indicates whether the item is buyable or not.
      * @param value The value of 'is_buyable'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setIsBuyable(boolean value) {
      validate(fields()[2], value);
      this.is_buyable = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'is_buyable' field has been set.
      * Indicates whether the item is buyable or not.
      * @return True if the 'is_buyable' field has been set, false otherwise.
      */
    public boolean hasIsBuyable() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'is_buyable' field.
      * Indicates whether the item is buyable or not.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearIsBuyable() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'reference' field.
      * Child commercial component partnumber.
      * @return The value.
      */
    public java.lang.CharSequence getReference() {
      return reference;
    }


    /**
      * Sets the value of the 'reference' field.
      * Child commercial component partnumber.
      * @param value The value of 'reference'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setReference(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.reference = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'reference' field has been set.
      * Child commercial component partnumber.
      * @return True if the 'reference' field has been set, false otherwise.
      */
    public boolean hasReference() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'reference' field.
      * Child commercial component partnumber.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearReference() {
      reference = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'hscode' field.
      * Tariff heading code used by finances.
      * @return The value.
      */
    public java.lang.Long getHscode() {
      return hscode;
    }


    /**
      * Sets the value of the 'hscode' field.
      * Tariff heading code used by finances.
      * @param value The value of 'hscode'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setHscode(java.lang.Long value) {
      validate(fields()[4], value);
      this.hscode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'hscode' field has been set.
      * Tariff heading code used by finances.
      * @return True if the 'hscode' field has been set, false otherwise.
      */
    public boolean hasHscode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'hscode' field.
      * Tariff heading code used by finances.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearHscode() {
      hscode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'country_manufacture' field.
      * Code indicating the country of manufacture
      * @return The value.
      */
    public java.lang.CharSequence getCountryManufacture() {
      return country_manufacture;
    }


    /**
      * Sets the value of the 'country_manufacture' field.
      * Code indicating the country of manufacture
      * @param value The value of 'country_manufacture'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setCountryManufacture(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.country_manufacture = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'country_manufacture' field has been set.
      * Code indicating the country of manufacture
      * @return True if the 'country_manufacture' field has been set, false otherwise.
      */
    public boolean hasCountryManufacture() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'country_manufacture' field.
      * Code indicating the country of manufacture
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearCountryManufacture() {
      country_manufacture = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'join_life' field.
      * Join life code.
      * @return The value.
      */
    public java.lang.CharSequence getJoinLife() {
      return join_life;
    }


    /**
      * Sets the value of the 'join_life' field.
      * Join life code.
      * @param value The value of 'join_life'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setJoinLife(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.join_life = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'join_life' field has been set.
      * Join life code.
      * @return True if the 'join_life' field has been set, false otherwise.
      */
    public boolean hasJoinLife() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'join_life' field.
      * Join life code.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearJoinLife() {
      join_life = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'marks' field.
      * Marks at item level
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getMarks() {
      return marks;
    }


    /**
      * Sets the value of the 'marks' field.
      * Marks at item level
      * @param value The value of 'marks'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setMarks(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.marks = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'marks' field has been set.
      * Marks at item level
      * @return True if the 'marks' field has been set, false otherwise.
      */
    public boolean hasMarks() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'marks' field.
      * Marks at item level
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearMarks() {
      marks = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'measures' field.
      * Indicates measures for an item
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> getMeasures() {
      return measures;
    }


    /**
      * Sets the value of the 'measures' field.
      * Indicates measures for an item
      * @param value The value of 'measures'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setMeasures(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> value) {
      validate(fields()[8], value);
      this.measures = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'measures' field has been set.
      * Indicates measures for an item
      * @return True if the 'measures' field has been set, false otherwise.
      */
    public boolean hasMeasures() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'measures' field.
      * Indicates measures for an item
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearMeasures() {
      measures = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'additional_info' field.
      * Optional with dynamic additional information.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalInfo() {
      return additional_info;
    }


    /**
      * Sets the value of the 'additional_info' field.
      * Optional with dynamic additional information.
      * @param value The value of 'additional_info'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setAdditionalInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.additional_info = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'additional_info' field has been set.
      * Optional with dynamic additional information.
      * @return True if the 'additional_info' field has been set, false otherwise.
      */
    public boolean hasAdditionalInfo() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'additional_info' field.
      * Optional with dynamic additional information.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearAdditionalInfo() {
      additional_info = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'multi_valued_attributes' field.
      * List of multi_valued_attributes of the item
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> getMultiValuedAttributes() {
      return multi_valued_attributes;
    }


    /**
      * Sets the value of the 'multi_valued_attributes' field.
      * List of multi_valued_attributes of the item
      * @param value The value of 'multi_valued_attributes'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder setMultiValuedAttributes(java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> value) {
      validate(fields()[10], value);
      this.multi_valued_attributes = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'multi_valued_attributes' field has been set.
      * List of multi_valued_attributes of the item
      * @return True if the 'multi_valued_attributes' field has been set, false otherwise.
      */
    public boolean hasMultiValuedAttributes() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'multi_valued_attributes' field.
      * List of multi_valued_attributes of the item
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Item.Builder clearMultiValuedAttributes() {
      multi_valued_attributes = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Item build() {
      try {
        Item record = new Item();
        record.item_id = fieldSetFlags()[0] ? this.item_id : (java.lang.Long) defaultValue(fields()[0]);
        record.size_id = fieldSetFlags()[1] ? this.size_id : (java.lang.Long) defaultValue(fields()[1]);
        record.is_buyable = fieldSetFlags()[2] ? this.is_buyable : (java.lang.Boolean) defaultValue(fields()[2]);
        record.reference = fieldSetFlags()[3] ? this.reference : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.hscode = fieldSetFlags()[4] ? this.hscode : (java.lang.Long) defaultValue(fields()[4]);
        record.country_manufacture = fieldSetFlags()[5] ? this.country_manufacture : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.join_life = fieldSetFlags()[6] ? this.join_life : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.marks = fieldSetFlags()[7] ? this.marks : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.measures = fieldSetFlags()[8] ? this.measures : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure>) defaultValue(fields()[8]);
        record.additional_info = fieldSetFlags()[9] ? this.additional_info : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[9]);
        record.multi_valued_attributes = fieldSetFlags()[10] ? this.multi_valued_attributes : (java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute>) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Item>
    WRITER$ = (org.apache.avro.io.DatumWriter<Item>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Item>
    READER$ = (org.apache.avro.io.DatumReader<Item>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.item_id);

    out.writeLong(this.size_id);

    out.writeBoolean(this.is_buyable);

    out.writeString(this.reference);

    if (this.hscode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.hscode);
    }

    if (this.country_manufacture == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.country_manufacture);
    }

    if (this.join_life == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.join_life);
    }

    long size0 = this.marks.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.marks) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.measures.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.Measure e1: this.measures) {
      actualSize1++;
      out.startItem();
      e1.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    if (this.additional_info == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size2 = this.additional_info.size();
      out.writeMapStart();
      out.setItemCount(size2);
      long actualSize2 = 0;
      for (java.util.Map.Entry<java.lang.CharSequence, java.lang.CharSequence> e2: this.additional_info.entrySet()) {
        actualSize2++;
        out.startItem();
        out.writeString(e2.getKey());
        java.lang.CharSequence v2 = e2.getValue();
        out.writeString(v2);
      }
      out.writeMapEnd();
      if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size2 + ", but element count was " + actualSize2 + ".");
    }

    if (this.multi_valued_attributes == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size3 = this.multi_valued_attributes.size();
      out.writeMapStart();
      out.setItemCount(size3);
      long actualSize3 = 0;
      for (java.util.Map.Entry<java.lang.CharSequence, com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> e3: this.multi_valued_attributes.entrySet()) {
        actualSize3++;
        out.startItem();
        out.writeString(e3.getKey());
        com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute v3 = e3.getValue();
        v3.customEncode(out);
      }
      out.writeMapEnd();
      if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size3 + ", but element count was " + actualSize3 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.item_id = in.readLong();

      this.size_id = in.readLong();

      this.is_buyable = in.readBoolean();

      this.reference = in.readString(this.reference instanceof Utf8 ? (Utf8)this.reference : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.hscode = null;
      } else {
        this.hscode = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.country_manufacture = null;
      } else {
        this.country_manufacture = in.readString(this.country_manufacture instanceof Utf8 ? (Utf8)this.country_manufacture : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.join_life = null;
      } else {
        this.join_life = in.readString(this.join_life instanceof Utf8 ? (Utf8)this.join_life : null);
      }

      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.marks;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("marks").schema());
        this.marks = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> a1 = this.measures;
      if (a1 == null) {
        a1 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Measure>((int)size1, SCHEMA$.getField("measures").schema());
        this.measures = a1;
      } else a1.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Measure> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Measure>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          com.inditex.mecc.mecprwat.api.avro.v2.Measure e1 = (ga1 != null ? ga1.peek() : null);
          if (e1 == null) {
            e1 = new com.inditex.mecc.mecprwat.api.avro.v2.Measure();
          }
          e1.customDecode(in);
          a1.add(e1);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.additional_info = null;
      } else {
        long size2 = in.readMapStart();
        java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m2 = this.additional_info; // Need fresh name due to limitation of macro system
        if (m2 == null) {
          m2 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size2);
          this.additional_info = m2;
        } else m2.clear();
        for ( ; 0 < size2; size2 = in.mapNext()) {
          for ( ; size2 != 0; size2--) {
            java.lang.CharSequence k2 = null;
            k2 = in.readString(k2 instanceof Utf8 ? (Utf8)k2 : null);
            java.lang.CharSequence v2 = null;
            v2 = in.readString(v2 instanceof Utf8 ? (Utf8)v2 : null);
            m2.put(k2, v2);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.multi_valued_attributes = null;
      } else {
        long size3 = in.readMapStart();
        java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> m3 = this.multi_valued_attributes; // Need fresh name due to limitation of macro system
        if (m3 == null) {
          m3 = new java.util.HashMap<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute>((int)size3);
          this.multi_valued_attributes = m3;
        } else m3.clear();
        for ( ; 0 < size3; size3 = in.mapNext()) {
          for ( ; size3 != 0; size3--) {
            java.lang.CharSequence k3 = null;
            k3 = in.readString(k3 instanceof Utf8 ? (Utf8)k3 : null);
            com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute v3 = null;
            if (v3 == null) {
              v3 = new com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute();
            }
            v3.customDecode(in);
            m3.put(k3, v3);
          }
        }
      }

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.item_id = in.readLong();
          break;

        case 1:
          this.size_id = in.readLong();
          break;

        case 2:
          this.is_buyable = in.readBoolean();
          break;

        case 3:
          this.reference = in.readString(this.reference instanceof Utf8 ? (Utf8)this.reference : null);
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.hscode = null;
          } else {
            this.hscode = in.readLong();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.country_manufacture = null;
          } else {
            this.country_manufacture = in.readString(this.country_manufacture instanceof Utf8 ? (Utf8)this.country_manufacture : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.join_life = null;
          } else {
            this.join_life = in.readString(this.join_life instanceof Utf8 ? (Utf8)this.join_life : null);
          }
          break;

        case 7:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.marks;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("marks").schema());
            this.marks = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 8:
          long size1 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Measure> a1 = this.measures;
          if (a1 == null) {
            a1 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Measure>((int)size1, SCHEMA$.getField("measures").schema());
            this.measures = a1;
          } else a1.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Measure> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Measure>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              com.inditex.mecc.mecprwat.api.avro.v2.Measure e1 = (ga1 != null ? ga1.peek() : null);
              if (e1 == null) {
                e1 = new com.inditex.mecc.mecprwat.api.avro.v2.Measure();
              }
              e1.customDecode(in);
              a1.add(e1);
            }
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.additional_info = null;
          } else {
            long size2 = in.readMapStart();
            java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m2 = this.additional_info; // Need fresh name due to limitation of macro system
            if (m2 == null) {
              m2 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size2);
              this.additional_info = m2;
            } else m2.clear();
            for ( ; 0 < size2; size2 = in.mapNext()) {
              for ( ; size2 != 0; size2--) {
                java.lang.CharSequence k2 = null;
                k2 = in.readString(k2 instanceof Utf8 ? (Utf8)k2 : null);
                java.lang.CharSequence v2 = null;
                v2 = in.readString(v2 instanceof Utf8 ? (Utf8)v2 : null);
                m2.put(k2, v2);
              }
            }
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.multi_valued_attributes = null;
          } else {
            long size3 = in.readMapStart();
            java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute> m3 = this.multi_valued_attributes; // Need fresh name due to limitation of macro system
            if (m3 == null) {
              m3 = new java.util.HashMap<java.lang.CharSequence,com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute>((int)size3);
              this.multi_valued_attributes = m3;
            } else m3.clear();
            for ( ; 0 < size3; size3 = in.mapNext()) {
              for ( ; size3 != 0; size3--) {
                java.lang.CharSequence k3 = null;
                k3 = in.readString(k3 instanceof Utf8 ? (Utf8)k3 : null);
                com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute v3 = null;
                if (v3 == null) {
                  v3 = new com.inditex.mecc.mecprwat.api.avro.v2.MultiValuedAttribute();
                }
                v3.customDecode(in);
                m3.put(k3, v3);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










