/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprwat.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds xmedia changes in a Commercial Component. */
@org.apache.avro.specific.AvroGenerated
public class CommercialComponentXmediaChanged extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1760800460647185387L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CommercialComponentXmediaChanged\",\"namespace\":\"com.inditex.mecc.mecprwat.api.avro.v2\",\"doc\":\"Class that holds xmedia changes in a Commercial Component.\",\"fields\":[{\"name\":\"store_id\",\"type\":[\"null\",\"long\"],\"doc\":\"Store's unique identifier.\",\"default\":null},{\"name\":\"commercial_component_id\",\"type\":\"long\",\"doc\":\"Commercial component's identifier.\"},{\"name\":\"commercial_component_type\",\"type\":{\"type\":\"enum\",\"name\":\"CommercialComponentType\",\"symbols\":[\"PRODUCT\",\"SINGLE_COMPONENT\",\"BUNDLE_COMPONENT\",\"BANNER\"]},\"doc\":\"Type of commercial component.\"},{\"name\":\"environment\",\"type\":{\"type\":\"enum\",\"name\":\"Environment\",\"symbols\":[\"DRAFT\",\"LIVE\"]},\"doc\":\"Environment where the xmedia change has been processed.\"},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Event's date in microseconds.\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"xmedias\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Xmedia\",\"doc\":\"Class that holds an Xmedia information.\",\"fields\":[{\"name\":\"color_id\",\"type\":\"string\",\"doc\":\"Identifier of the color which the xmedia belongs to\"},{\"name\":\"color_position\",\"type\":\"int\",\"doc\":\"Position of the color in the list of colors for a given product.\"},{\"name\":\"set\",\"type\":\"int\",\"doc\":\"Contains the set this xmedia is associated to. Typically front end will only display xmedia containing set = 2\"},{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Indicates the type of xmedia (e.g. image, audio, video, vector or hls among others)\"},{\"name\":\"kind\",\"type\":\"string\",\"doc\":\"Secondary classification of xmedia (e.g. double, animation, double-animation) to be used for grids, or containing information about the image associated in a product detail view (e.g. full, side, back, detail, plain, look or colorcut)\"},{\"name\":\"index\",\"type\":\"int\",\"doc\":\"This index is used to discriminate different media for the same kind.\"},{\"name\":\"path\",\"type\":\"string\",\"doc\":\"Path where the xmedia is found within the base URL for a given xmedia types. Base URL's are defined within available xmedia formats for a given store\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"File name of the xmedia that can be used to build the URL. File extension is obtained from the xmedia format corresponding to the xmedia.\"},{\"name\":\"width\",\"type\":\"int\",\"doc\":\"Width of the highest resolution version of the xmedia expressed in pixels. This can be used to compute aspect ratios.\"},{\"name\":\"height\",\"type\":\"int\",\"doc\":\"Height of the highest resolution version of the xmedia expressed in pixels. This can be used to compute aspect ratios.\"},{\"name\":\"timestamp\",\"type\":\"string\",\"doc\":\"Timestamp of the xmedia expressed in milliseconds since epoch time. This is used to keep further control of browser caches.\"},{\"name\":\"allowed_screens\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Indicates whether this xmedia is suitable for small screens (e.g. phones), large screens (e.g. computers and tablets) or both.\"},{\"name\":\"locations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Location\",\"doc\":\"Class that holds location information for the media.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Location's name.\"},{\"name\":\"order\",\"type\":\"int\",\"doc\":\"Order in which media should be displayed.\"}]}},\"doc\":\"List of locations where the media was designed for.\"},{\"name\":\"extra_info\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Additional information used by other Inditex brands.\"}]}},\"doc\":\"List of xmedias included in the commercial component.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CommercialComponentXmediaChanged> ENCODER =
      new BinaryMessageEncoder<CommercialComponentXmediaChanged>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CommercialComponentXmediaChanged> DECODER =
      new BinaryMessageDecoder<CommercialComponentXmediaChanged>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CommercialComponentXmediaChanged> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CommercialComponentXmediaChanged> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CommercialComponentXmediaChanged> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CommercialComponentXmediaChanged>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CommercialComponentXmediaChanged to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CommercialComponentXmediaChanged from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CommercialComponentXmediaChanged instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CommercialComponentXmediaChanged fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Store's unique identifier. */
  @Deprecated public java.lang.Long store_id;
  /** Commercial component's identifier. */
  @Deprecated public long commercial_component_id;
  /** Type of commercial component. */
  @Deprecated public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType commercial_component_type;
  /** Environment where the xmedia change has been processed. */
  @Deprecated public com.inditex.mecc.mecprwat.api.avro.v2.Environment environment;
  /** Event's date in microseconds. */
  @Deprecated public long updated_at;
  /** List of xmedias included in the commercial component. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> xmedias;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CommercialComponentXmediaChanged() {}

  /**
   * All-args constructor.
   * @param store_id Store's unique identifier.
   * @param commercial_component_id Commercial component's identifier.
   * @param commercial_component_type Type of commercial component.
   * @param environment Environment where the xmedia change has been processed.
   * @param updated_at Event's date in microseconds.
   * @param xmedias List of xmedias included in the commercial component.
   */
  public CommercialComponentXmediaChanged(java.lang.Long store_id, java.lang.Long commercial_component_id, com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType commercial_component_type, com.inditex.mecc.mecprwat.api.avro.v2.Environment environment, java.lang.Long updated_at, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> xmedias) {
    this.store_id = store_id;
    this.commercial_component_id = commercial_component_id;
    this.commercial_component_type = commercial_component_type;
    this.environment = environment;
    this.updated_at = updated_at;
    this.xmedias = xmedias;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return store_id;
    case 1: return commercial_component_id;
    case 2: return commercial_component_type;
    case 3: return environment;
    case 4: return updated_at;
    case 5: return xmedias;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: store_id = (java.lang.Long)value$; break;
    case 1: commercial_component_id = (java.lang.Long)value$; break;
    case 2: commercial_component_type = (com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType)value$; break;
    case 3: environment = (com.inditex.mecc.mecprwat.api.avro.v2.Environment)value$; break;
    case 4: updated_at = (java.lang.Long)value$; break;
    case 5: xmedias = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'store_id' field.
   * @return Store's unique identifier.
   */
  public java.lang.Long getStoreId() {
    return store_id;
  }


  /**
   * Sets the value of the 'store_id' field.
   * Store's unique identifier.
   * @param value the value to set.
   */
  public void setStoreId(java.lang.Long value) {
    this.store_id = value;
  }

  /**
   * Gets the value of the 'commercial_component_id' field.
   * @return Commercial component's identifier.
   */
  public long getCommercialComponentId() {
    return commercial_component_id;
  }


  /**
   * Sets the value of the 'commercial_component_id' field.
   * Commercial component's identifier.
   * @param value the value to set.
   */
  public void setCommercialComponentId(long value) {
    this.commercial_component_id = value;
  }

  /**
   * Gets the value of the 'commercial_component_type' field.
   * @return Type of commercial component.
   */
  public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType getCommercialComponentType() {
    return commercial_component_type;
  }


  /**
   * Sets the value of the 'commercial_component_type' field.
   * Type of commercial component.
   * @param value the value to set.
   */
  public void setCommercialComponentType(com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType value) {
    this.commercial_component_type = value;
  }

  /**
   * Gets the value of the 'environment' field.
   * @return Environment where the xmedia change has been processed.
   */
  public com.inditex.mecc.mecprwat.api.avro.v2.Environment getEnvironment() {
    return environment;
  }


  /**
   * Sets the value of the 'environment' field.
   * Environment where the xmedia change has been processed.
   * @param value the value to set.
   */
  public void setEnvironment(com.inditex.mecc.mecprwat.api.avro.v2.Environment value) {
    this.environment = value;
  }

  /**
   * Gets the value of the 'updated_at' field.
   * @return Event's date in microseconds.
   */
  public long getUpdatedAt() {
    return updated_at;
  }


  /**
   * Sets the value of the 'updated_at' field.
   * Event's date in microseconds.
   * @param value the value to set.
   */
  public void setUpdatedAt(long value) {
    this.updated_at = value;
  }

  /**
   * Gets the value of the 'xmedias' field.
   * @return List of xmedias included in the commercial component.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> getXmedias() {
    return xmedias;
  }


  /**
   * Sets the value of the 'xmedias' field.
   * List of xmedias included in the commercial component.
   * @param value the value to set.
   */
  public void setXmedias(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> value) {
    this.xmedias = value;
  }

  /**
   * Creates a new CommercialComponentXmediaChanged RecordBuilder.
   * @return A new CommercialComponentXmediaChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder newBuilder() {
    return new com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder();
  }

  /**
   * Creates a new CommercialComponentXmediaChanged RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CommercialComponentXmediaChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder(other);
    }
  }

  /**
   * Creates a new CommercialComponentXmediaChanged RecordBuilder by copying an existing CommercialComponentXmediaChanged instance.
   * @param other The existing instance to copy.
   * @return A new CommercialComponentXmediaChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder(other);
    }
  }

  /**
   * RecordBuilder for CommercialComponentXmediaChanged instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CommercialComponentXmediaChanged>
    implements org.apache.avro.data.RecordBuilder<CommercialComponentXmediaChanged> {

    /** Store's unique identifier. */
    private java.lang.Long store_id;
    /** Commercial component's identifier. */
    private long commercial_component_id;
    /** Type of commercial component. */
    private com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType commercial_component_type;
    /** Environment where the xmedia change has been processed. */
    private com.inditex.mecc.mecprwat.api.avro.v2.Environment environment;
    /** Event's date in microseconds. */
    private long updated_at;
    /** List of xmedias included in the commercial component. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> xmedias;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.store_id)) {
        this.store_id = data().deepCopy(fields()[0].schema(), other.store_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.commercial_component_id)) {
        this.commercial_component_id = data().deepCopy(fields()[1].schema(), other.commercial_component_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.commercial_component_type)) {
        this.commercial_component_type = data().deepCopy(fields()[2].schema(), other.commercial_component_type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.environment)) {
        this.environment = data().deepCopy(fields()[3].schema(), other.environment);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[4].schema(), other.updated_at);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.xmedias)) {
        this.xmedias = data().deepCopy(fields()[5].schema(), other.xmedias);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing CommercialComponentXmediaChanged instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.store_id)) {
        this.store_id = data().deepCopy(fields()[0].schema(), other.store_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.commercial_component_id)) {
        this.commercial_component_id = data().deepCopy(fields()[1].schema(), other.commercial_component_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.commercial_component_type)) {
        this.commercial_component_type = data().deepCopy(fields()[2].schema(), other.commercial_component_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.environment)) {
        this.environment = data().deepCopy(fields()[3].schema(), other.environment);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[4].schema(), other.updated_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.xmedias)) {
        this.xmedias = data().deepCopy(fields()[5].schema(), other.xmedias);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'store_id' field.
      * Store's unique identifier.
      * @return The value.
      */
    public java.lang.Long getStoreId() {
      return store_id;
    }


    /**
      * Sets the value of the 'store_id' field.
      * Store's unique identifier.
      * @param value The value of 'store_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder setStoreId(java.lang.Long value) {
      validate(fields()[0], value);
      this.store_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'store_id' field has been set.
      * Store's unique identifier.
      * @return True if the 'store_id' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'store_id' field.
      * Store's unique identifier.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder clearStoreId() {
      store_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'commercial_component_id' field.
      * Commercial component's identifier.
      * @return The value.
      */
    public long getCommercialComponentId() {
      return commercial_component_id;
    }


    /**
      * Sets the value of the 'commercial_component_id' field.
      * Commercial component's identifier.
      * @param value The value of 'commercial_component_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder setCommercialComponentId(long value) {
      validate(fields()[1], value);
      this.commercial_component_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'commercial_component_id' field has been set.
      * Commercial component's identifier.
      * @return True if the 'commercial_component_id' field has been set, false otherwise.
      */
    public boolean hasCommercialComponentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'commercial_component_id' field.
      * Commercial component's identifier.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder clearCommercialComponentId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'commercial_component_type' field.
      * Type of commercial component.
      * @return The value.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType getCommercialComponentType() {
      return commercial_component_type;
    }


    /**
      * Sets the value of the 'commercial_component_type' field.
      * Type of commercial component.
      * @param value The value of 'commercial_component_type'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder setCommercialComponentType(com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType value) {
      validate(fields()[2], value);
      this.commercial_component_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'commercial_component_type' field has been set.
      * Type of commercial component.
      * @return True if the 'commercial_component_type' field has been set, false otherwise.
      */
    public boolean hasCommercialComponentType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'commercial_component_type' field.
      * Type of commercial component.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder clearCommercialComponentType() {
      commercial_component_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'environment' field.
      * Environment where the xmedia change has been processed.
      * @return The value.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Environment getEnvironment() {
      return environment;
    }


    /**
      * Sets the value of the 'environment' field.
      * Environment where the xmedia change has been processed.
      * @param value The value of 'environment'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder setEnvironment(com.inditex.mecc.mecprwat.api.avro.v2.Environment value) {
      validate(fields()[3], value);
      this.environment = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'environment' field has been set.
      * Environment where the xmedia change has been processed.
      * @return True if the 'environment' field has been set, false otherwise.
      */
    public boolean hasEnvironment() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'environment' field.
      * Environment where the xmedia change has been processed.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder clearEnvironment() {
      environment = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_at' field.
      * Event's date in microseconds.
      * @return The value.
      */
    public long getUpdatedAt() {
      return updated_at;
    }


    /**
      * Sets the value of the 'updated_at' field.
      * Event's date in microseconds.
      * @param value The value of 'updated_at'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder setUpdatedAt(long value) {
      validate(fields()[4], value);
      this.updated_at = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_at' field has been set.
      * Event's date in microseconds.
      * @return True if the 'updated_at' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'updated_at' field.
      * Event's date in microseconds.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder clearUpdatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'xmedias' field.
      * List of xmedias included in the commercial component.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> getXmedias() {
      return xmedias;
    }


    /**
      * Sets the value of the 'xmedias' field.
      * List of xmedias included in the commercial component.
      * @param value The value of 'xmedias'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder setXmedias(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> value) {
      validate(fields()[5], value);
      this.xmedias = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'xmedias' field has been set.
      * List of xmedias included in the commercial component.
      * @return True if the 'xmedias' field has been set, false otherwise.
      */
    public boolean hasXmedias() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'xmedias' field.
      * List of xmedias included in the commercial component.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentXmediaChanged.Builder clearXmedias() {
      xmedias = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CommercialComponentXmediaChanged build() {
      try {
        CommercialComponentXmediaChanged record = new CommercialComponentXmediaChanged();
        record.store_id = fieldSetFlags()[0] ? this.store_id : (java.lang.Long) defaultValue(fields()[0]);
        record.commercial_component_id = fieldSetFlags()[1] ? this.commercial_component_id : (java.lang.Long) defaultValue(fields()[1]);
        record.commercial_component_type = fieldSetFlags()[2] ? this.commercial_component_type : (com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType) defaultValue(fields()[2]);
        record.environment = fieldSetFlags()[3] ? this.environment : (com.inditex.mecc.mecprwat.api.avro.v2.Environment) defaultValue(fields()[3]);
        record.updated_at = fieldSetFlags()[4] ? this.updated_at : (java.lang.Long) defaultValue(fields()[4]);
        record.xmedias = fieldSetFlags()[5] ? this.xmedias : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia>) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CommercialComponentXmediaChanged>
    WRITER$ = (org.apache.avro.io.DatumWriter<CommercialComponentXmediaChanged>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CommercialComponentXmediaChanged>
    READER$ = (org.apache.avro.io.DatumReader<CommercialComponentXmediaChanged>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.store_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.store_id);
    }

    out.writeLong(this.commercial_component_id);

    out.writeEnum(this.commercial_component_type.ordinal());

    out.writeEnum(this.environment.ordinal());

    out.writeLong(this.updated_at);

    long size0 = this.xmedias.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.Xmedia e0: this.xmedias) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.store_id = null;
      } else {
        this.store_id = in.readLong();
      }

      this.commercial_component_id = in.readLong();

      this.commercial_component_type = com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType.values()[in.readEnum()];

      this.environment = com.inditex.mecc.mecprwat.api.avro.v2.Environment.values()[in.readEnum()];

      this.updated_at = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> a0 = this.xmedias;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia>((int)size0, SCHEMA$.getField("xmedias").schema());
        this.xmedias = a0;
      } else a0.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.inditex.mecc.mecprwat.api.avro.v2.Xmedia e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.inditex.mecc.mecprwat.api.avro.v2.Xmedia();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.store_id = null;
          } else {
            this.store_id = in.readLong();
          }
          break;

        case 1:
          this.commercial_component_id = in.readLong();
          break;

        case 2:
          this.commercial_component_type = com.inditex.mecc.mecprwat.api.avro.v2.CommercialComponentType.values()[in.readEnum()];
          break;

        case 3:
          this.environment = com.inditex.mecc.mecprwat.api.avro.v2.Environment.values()[in.readEnum()];
          break;

        case 4:
          this.updated_at = in.readLong();
          break;

        case 5:
          long size0 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> a0 = this.xmedias;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia>((int)size0, SCHEMA$.getField("xmedias").schema());
            this.xmedias = a0;
          } else a0.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Xmedia>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.inditex.mecc.mecprwat.api.avro.v2.Xmedia e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.inditex.mecc.mecprwat.api.avro.v2.Xmedia();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










