/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprwat.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds the extended information that has changed for a Bundle Component. Bundle components contain related products, such as in men suits, which are typically composed of trousers, shirt and jacket */
@org.apache.avro.specific.AvroGenerated
public class BundleComponentExtendedInfoChanged extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 590322672508722191L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BundleComponentExtendedInfoChanged\",\"namespace\":\"com.inditex.mecc.mecprwat.api.avro.v2\",\"doc\":\"Class that holds the extended information that has changed for a Bundle Component. Bundle components contain related products, such as in men suits, which are typically composed of trousers, shirt and jacket\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store's unique identifier.\"},{\"name\":\"commercial_component_id\",\"type\":\"long\",\"doc\":\"Commercial component's unique identifier.\"},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Event's date in microseconds.\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"name\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"I18NText\",\"doc\":\"Class that holds a text and its locale ISO code.\",\"fields\":[{\"name\":\"iso_code\",\"type\":\"string\",\"doc\":\"Locale ISO code.\"},{\"name\":\"text\",\"type\":\"string\",\"doc\":\"Internationalized text.\"}]}},\"doc\":\"Bundle Component's name in a bunch of locales.\",\"default\":[]},{\"name\":\"short_descriptions\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Bundle Component's short description in a bunch of locales.\",\"default\":[]},{\"name\":\"long_descriptions\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Bundle Component's long description in a bunch of locales.\",\"default\":[]},{\"name\":\"color\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Color\",\"doc\":\"Class that holds color information such names and identifier.\",\"fields\":[{\"name\":\"color_id\",\"type\":\"string\",\"doc\":\"Color's identifier.\"},{\"name\":\"color_names\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Color's name in a bunch of locales.\",\"default\":[]},{\"name\":\"gammas\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GammaDesc\",\"doc\":\"Class that holds gamma's information.\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"Gamma's identifier.\"},{\"name\":\"gamma_name\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Size's name in a bunch of locales.\",\"default\":[]}]}},\"doc\":\"List of color gammas.\",\"default\":[]}]}],\"doc\":\"Optional list of colors.\"},{\"name\":\"seo_info\",\"type\":{\"type\":\"record\",\"name\":\"SeoInfo\",\"doc\":\"Class that holds SEO information.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"SEO identifier.\"},{\"name\":\"keywords\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Optional list of internationalized SEO keywords.\",\"default\":[]}]},\"doc\":\"Product's SEO information object.\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Tag\",\"doc\":\"Class that holds a tag (identifier and type) translated in all available languages.\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Internationalized tags.\",\"default\":[]},{\"name\":\"identifier\",\"type\":\"string\",\"doc\":\"Indicates the identifier of the tag C-SRA-PARKA, C-NNO-BASICO, C-SRA-ABRIGOS-TRENCH...\"},{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Indicates the type of tag (XGENFILTER, XCATFILTER).\"}]}},\"doc\":\"List of internationalized tags.\",\"default\":[]},{\"name\":\"labels\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Label\",\"doc\":\"Class that represents a business label (for instance: new, ...) translated in all available languages.\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Internationalized label name.\",\"default\":[]},{\"name\":\"type\",\"type\":{\"type\":\"record\",\"name\":\"LabelType\",\"doc\":\"Class that represents a type of label.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Label's type identifier.\"}]},\"doc\":\"Related label's type.\"}]}},\"doc\":\"List of internationalized labels.\",\"default\":[]},{\"name\":\"marks\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Marks for the single component (ZARA_SCENES...)\",\"default\":[]},{\"name\":\"valued_attributes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ValuedAttribute\",\"doc\":\"Class that represents a valued attribute and, if translated, its translations.\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"array\",\"items\":\"I18NText\"},\"doc\":\"Internationalized attribute name.\",\"default\":[]},{\"name\":\"identifier\",\"type\":\"string\",\"doc\":\"Indicates the identifier of the attribute\"},{\"name\":\"value\",\"type\":\"string\",\"doc\":\"Indicates the value of the attribute\"}]}},\"doc\":\"List of valued_attributes of the single component\",\"default\":[]},{\"name\":\"additional_info\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\",\"default\":{}}],\"doc\":\"Optional with dynamic additional information.\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BundleComponentExtendedInfoChanged> ENCODER =
      new BinaryMessageEncoder<BundleComponentExtendedInfoChanged>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BundleComponentExtendedInfoChanged> DECODER =
      new BinaryMessageDecoder<BundleComponentExtendedInfoChanged>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BundleComponentExtendedInfoChanged> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BundleComponentExtendedInfoChanged> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BundleComponentExtendedInfoChanged> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BundleComponentExtendedInfoChanged>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BundleComponentExtendedInfoChanged to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BundleComponentExtendedInfoChanged from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BundleComponentExtendedInfoChanged instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BundleComponentExtendedInfoChanged fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Store's unique identifier. */
  @Deprecated public long store_id;
  /** Commercial component's unique identifier. */
  @Deprecated public long commercial_component_id;
  /** Event's date in microseconds. */
  @Deprecated public long updated_at;
  /** Bundle Component's name in a bunch of locales. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> name;
  /** Bundle Component's short description in a bunch of locales. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> short_descriptions;
  /** Bundle Component's long description in a bunch of locales. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> long_descriptions;
  /** Optional list of colors. */
  @Deprecated public com.inditex.mecc.mecprwat.api.avro.v2.Color color;
  /** Product's SEO information object. */
  @Deprecated public com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo seo_info;
  /** List of internationalized tags. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> tags;
  /** List of internationalized labels. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> labels;
  /** Marks for the single component (ZARA_SCENES...) */
  @Deprecated public java.util.List<java.lang.CharSequence> marks;
  /** List of valued_attributes of the single component */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> valued_attributes;
  /** Optional with dynamic additional information. */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additional_info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BundleComponentExtendedInfoChanged() {}

  /**
   * All-args constructor.
   * @param store_id Store's unique identifier.
   * @param commercial_component_id Commercial component's unique identifier.
   * @param updated_at Event's date in microseconds.
   * @param name Bundle Component's name in a bunch of locales.
   * @param short_descriptions Bundle Component's short description in a bunch of locales.
   * @param long_descriptions Bundle Component's long description in a bunch of locales.
   * @param color Optional list of colors.
   * @param seo_info Product's SEO information object.
   * @param tags List of internationalized tags.
   * @param labels List of internationalized labels.
   * @param marks Marks for the single component (ZARA_SCENES...)
   * @param valued_attributes List of valued_attributes of the single component
   * @param additional_info Optional with dynamic additional information.
   */
  public BundleComponentExtendedInfoChanged(java.lang.Long store_id, java.lang.Long commercial_component_id, java.lang.Long updated_at, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> name, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> short_descriptions, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> long_descriptions, com.inditex.mecc.mecprwat.api.avro.v2.Color color, com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo seo_info, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> tags, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> labels, java.util.List<java.lang.CharSequence> marks, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> valued_attributes, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additional_info) {
    this.store_id = store_id;
    this.commercial_component_id = commercial_component_id;
    this.updated_at = updated_at;
    this.name = name;
    this.short_descriptions = short_descriptions;
    this.long_descriptions = long_descriptions;
    this.color = color;
    this.seo_info = seo_info;
    this.tags = tags;
    this.labels = labels;
    this.marks = marks;
    this.valued_attributes = valued_attributes;
    this.additional_info = additional_info;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return store_id;
    case 1: return commercial_component_id;
    case 2: return updated_at;
    case 3: return name;
    case 4: return short_descriptions;
    case 5: return long_descriptions;
    case 6: return color;
    case 7: return seo_info;
    case 8: return tags;
    case 9: return labels;
    case 10: return marks;
    case 11: return valued_attributes;
    case 12: return additional_info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: store_id = (java.lang.Long)value$; break;
    case 1: commercial_component_id = (java.lang.Long)value$; break;
    case 2: updated_at = (java.lang.Long)value$; break;
    case 3: name = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)value$; break;
    case 4: short_descriptions = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)value$; break;
    case 5: long_descriptions = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)value$; break;
    case 6: color = (com.inditex.mecc.mecprwat.api.avro.v2.Color)value$; break;
    case 7: seo_info = (com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo)value$; break;
    case 8: tags = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag>)value$; break;
    case 9: labels = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label>)value$; break;
    case 10: marks = (java.util.List<java.lang.CharSequence>)value$; break;
    case 11: valued_attributes = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute>)value$; break;
    case 12: additional_info = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'store_id' field.
   * @return Store's unique identifier.
   */
  public long getStoreId() {
    return store_id;
  }


  /**
   * Sets the value of the 'store_id' field.
   * Store's unique identifier.
   * @param value the value to set.
   */
  public void setStoreId(long value) {
    this.store_id = value;
  }

  /**
   * Gets the value of the 'commercial_component_id' field.
   * @return Commercial component's unique identifier.
   */
  public long getCommercialComponentId() {
    return commercial_component_id;
  }


  /**
   * Sets the value of the 'commercial_component_id' field.
   * Commercial component's unique identifier.
   * @param value the value to set.
   */
  public void setCommercialComponentId(long value) {
    this.commercial_component_id = value;
  }

  /**
   * Gets the value of the 'updated_at' field.
   * @return Event's date in microseconds.
   */
  public long getUpdatedAt() {
    return updated_at;
  }


  /**
   * Sets the value of the 'updated_at' field.
   * Event's date in microseconds.
   * @param value the value to set.
   */
  public void setUpdatedAt(long value) {
    this.updated_at = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Bundle Component's name in a bunch of locales.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * Bundle Component's name in a bunch of locales.
   * @param value the value to set.
   */
  public void setName(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'short_descriptions' field.
   * @return Bundle Component's short description in a bunch of locales.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> getShortDescriptions() {
    return short_descriptions;
  }


  /**
   * Sets the value of the 'short_descriptions' field.
   * Bundle Component's short description in a bunch of locales.
   * @param value the value to set.
   */
  public void setShortDescriptions(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> value) {
    this.short_descriptions = value;
  }

  /**
   * Gets the value of the 'long_descriptions' field.
   * @return Bundle Component's long description in a bunch of locales.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> getLongDescriptions() {
    return long_descriptions;
  }


  /**
   * Sets the value of the 'long_descriptions' field.
   * Bundle Component's long description in a bunch of locales.
   * @param value the value to set.
   */
  public void setLongDescriptions(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> value) {
    this.long_descriptions = value;
  }

  /**
   * Gets the value of the 'color' field.
   * @return Optional list of colors.
   */
  public com.inditex.mecc.mecprwat.api.avro.v2.Color getColor() {
    return color;
  }


  /**
   * Sets the value of the 'color' field.
   * Optional list of colors.
   * @param value the value to set.
   */
  public void setColor(com.inditex.mecc.mecprwat.api.avro.v2.Color value) {
    this.color = value;
  }

  /**
   * Gets the value of the 'seo_info' field.
   * @return Product's SEO information object.
   */
  public com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo getSeoInfo() {
    return seo_info;
  }


  /**
   * Sets the value of the 'seo_info' field.
   * Product's SEO information object.
   * @param value the value to set.
   */
  public void setSeoInfo(com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo value) {
    this.seo_info = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return List of internationalized tags.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> getTags() {
    return tags;
  }


  /**
   * Sets the value of the 'tags' field.
   * List of internationalized tags.
   * @param value the value to set.
   */
  public void setTags(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'labels' field.
   * @return List of internationalized labels.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> getLabels() {
    return labels;
  }


  /**
   * Sets the value of the 'labels' field.
   * List of internationalized labels.
   * @param value the value to set.
   */
  public void setLabels(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> value) {
    this.labels = value;
  }

  /**
   * Gets the value of the 'marks' field.
   * @return Marks for the single component (ZARA_SCENES...)
   */
  public java.util.List<java.lang.CharSequence> getMarks() {
    return marks;
  }


  /**
   * Sets the value of the 'marks' field.
   * Marks for the single component (ZARA_SCENES...)
   * @param value the value to set.
   */
  public void setMarks(java.util.List<java.lang.CharSequence> value) {
    this.marks = value;
  }

  /**
   * Gets the value of the 'valued_attributes' field.
   * @return List of valued_attributes of the single component
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> getValuedAttributes() {
    return valued_attributes;
  }


  /**
   * Sets the value of the 'valued_attributes' field.
   * List of valued_attributes of the single component
   * @param value the value to set.
   */
  public void setValuedAttributes(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> value) {
    this.valued_attributes = value;
  }

  /**
   * Gets the value of the 'additional_info' field.
   * @return Optional with dynamic additional information.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalInfo() {
    return additional_info;
  }


  /**
   * Sets the value of the 'additional_info' field.
   * Optional with dynamic additional information.
   * @param value the value to set.
   */
  public void setAdditionalInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.additional_info = value;
  }

  /**
   * Creates a new BundleComponentExtendedInfoChanged RecordBuilder.
   * @return A new BundleComponentExtendedInfoChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder newBuilder() {
    return new com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder();
  }

  /**
   * Creates a new BundleComponentExtendedInfoChanged RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BundleComponentExtendedInfoChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder(other);
    }
  }

  /**
   * Creates a new BundleComponentExtendedInfoChanged RecordBuilder by copying an existing BundleComponentExtendedInfoChanged instance.
   * @param other The existing instance to copy.
   * @return A new BundleComponentExtendedInfoChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder(other);
    }
  }

  /**
   * RecordBuilder for BundleComponentExtendedInfoChanged instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BundleComponentExtendedInfoChanged>
    implements org.apache.avro.data.RecordBuilder<BundleComponentExtendedInfoChanged> {

    /** Store's unique identifier. */
    private long store_id;
    /** Commercial component's unique identifier. */
    private long commercial_component_id;
    /** Event's date in microseconds. */
    private long updated_at;
    /** Bundle Component's name in a bunch of locales. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> name;
    /** Bundle Component's short description in a bunch of locales. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> short_descriptions;
    /** Bundle Component's long description in a bunch of locales. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> long_descriptions;
    /** Optional list of colors. */
    private com.inditex.mecc.mecprwat.api.avro.v2.Color color;
    private com.inditex.mecc.mecprwat.api.avro.v2.Color.Builder colorBuilder;
    /** Product's SEO information object. */
    private com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo seo_info;
    private com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo.Builder seo_infoBuilder;
    /** List of internationalized tags. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> tags;
    /** List of internationalized labels. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> labels;
    /** Marks for the single component (ZARA_SCENES...) */
    private java.util.List<java.lang.CharSequence> marks;
    /** List of valued_attributes of the single component */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> valued_attributes;
    /** Optional with dynamic additional information. */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additional_info;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.store_id)) {
        this.store_id = data().deepCopy(fields()[0].schema(), other.store_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.commercial_component_id)) {
        this.commercial_component_id = data().deepCopy(fields()[1].schema(), other.commercial_component_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[2].schema(), other.updated_at);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.short_descriptions)) {
        this.short_descriptions = data().deepCopy(fields()[4].schema(), other.short_descriptions);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.long_descriptions)) {
        this.long_descriptions = data().deepCopy(fields()[5].schema(), other.long_descriptions);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.color)) {
        this.color = data().deepCopy(fields()[6].schema(), other.color);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasColorBuilder()) {
        this.colorBuilder = com.inditex.mecc.mecprwat.api.avro.v2.Color.newBuilder(other.getColorBuilder());
      }
      if (isValidValue(fields()[7], other.seo_info)) {
        this.seo_info = data().deepCopy(fields()[7].schema(), other.seo_info);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasSeoInfoBuilder()) {
        this.seo_infoBuilder = com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo.newBuilder(other.getSeoInfoBuilder());
      }
      if (isValidValue(fields()[8], other.tags)) {
        this.tags = data().deepCopy(fields()[8].schema(), other.tags);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.labels)) {
        this.labels = data().deepCopy(fields()[9].schema(), other.labels);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.marks)) {
        this.marks = data().deepCopy(fields()[10].schema(), other.marks);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.valued_attributes)) {
        this.valued_attributes = data().deepCopy(fields()[11].schema(), other.valued_attributes);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.additional_info)) {
        this.additional_info = data().deepCopy(fields()[12].schema(), other.additional_info);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing BundleComponentExtendedInfoChanged instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.store_id)) {
        this.store_id = data().deepCopy(fields()[0].schema(), other.store_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.commercial_component_id)) {
        this.commercial_component_id = data().deepCopy(fields()[1].schema(), other.commercial_component_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[2].schema(), other.updated_at);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.short_descriptions)) {
        this.short_descriptions = data().deepCopy(fields()[4].schema(), other.short_descriptions);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.long_descriptions)) {
        this.long_descriptions = data().deepCopy(fields()[5].schema(), other.long_descriptions);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.color)) {
        this.color = data().deepCopy(fields()[6].schema(), other.color);
        fieldSetFlags()[6] = true;
      }
      this.colorBuilder = null;
      if (isValidValue(fields()[7], other.seo_info)) {
        this.seo_info = data().deepCopy(fields()[7].schema(), other.seo_info);
        fieldSetFlags()[7] = true;
      }
      this.seo_infoBuilder = null;
      if (isValidValue(fields()[8], other.tags)) {
        this.tags = data().deepCopy(fields()[8].schema(), other.tags);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.labels)) {
        this.labels = data().deepCopy(fields()[9].schema(), other.labels);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.marks)) {
        this.marks = data().deepCopy(fields()[10].schema(), other.marks);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.valued_attributes)) {
        this.valued_attributes = data().deepCopy(fields()[11].schema(), other.valued_attributes);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.additional_info)) {
        this.additional_info = data().deepCopy(fields()[12].schema(), other.additional_info);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'store_id' field.
      * Store's unique identifier.
      * @return The value.
      */
    public long getStoreId() {
      return store_id;
    }


    /**
      * Sets the value of the 'store_id' field.
      * Store's unique identifier.
      * @param value The value of 'store_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setStoreId(long value) {
      validate(fields()[0], value);
      this.store_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'store_id' field has been set.
      * Store's unique identifier.
      * @return True if the 'store_id' field has been set, false otherwise.
      */
    public boolean hasStoreId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'store_id' field.
      * Store's unique identifier.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearStoreId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'commercial_component_id' field.
      * Commercial component's unique identifier.
      * @return The value.
      */
    public long getCommercialComponentId() {
      return commercial_component_id;
    }


    /**
      * Sets the value of the 'commercial_component_id' field.
      * Commercial component's unique identifier.
      * @param value The value of 'commercial_component_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setCommercialComponentId(long value) {
      validate(fields()[1], value);
      this.commercial_component_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'commercial_component_id' field has been set.
      * Commercial component's unique identifier.
      * @return True if the 'commercial_component_id' field has been set, false otherwise.
      */
    public boolean hasCommercialComponentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'commercial_component_id' field.
      * Commercial component's unique identifier.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearCommercialComponentId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_at' field.
      * Event's date in microseconds.
      * @return The value.
      */
    public long getUpdatedAt() {
      return updated_at;
    }


    /**
      * Sets the value of the 'updated_at' field.
      * Event's date in microseconds.
      * @param value The value of 'updated_at'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setUpdatedAt(long value) {
      validate(fields()[2], value);
      this.updated_at = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_at' field has been set.
      * Event's date in microseconds.
      * @return True if the 'updated_at' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'updated_at' field.
      * Event's date in microseconds.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearUpdatedAt() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Bundle Component's name in a bunch of locales.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * Bundle Component's name in a bunch of locales.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setName(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Bundle Component's name in a bunch of locales.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'name' field.
      * Bundle Component's name in a bunch of locales.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'short_descriptions' field.
      * Bundle Component's short description in a bunch of locales.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> getShortDescriptions() {
      return short_descriptions;
    }


    /**
      * Sets the value of the 'short_descriptions' field.
      * Bundle Component's short description in a bunch of locales.
      * @param value The value of 'short_descriptions'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setShortDescriptions(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> value) {
      validate(fields()[4], value);
      this.short_descriptions = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'short_descriptions' field has been set.
      * Bundle Component's short description in a bunch of locales.
      * @return True if the 'short_descriptions' field has been set, false otherwise.
      */
    public boolean hasShortDescriptions() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'short_descriptions' field.
      * Bundle Component's short description in a bunch of locales.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearShortDescriptions() {
      short_descriptions = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'long_descriptions' field.
      * Bundle Component's long description in a bunch of locales.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> getLongDescriptions() {
      return long_descriptions;
    }


    /**
      * Sets the value of the 'long_descriptions' field.
      * Bundle Component's long description in a bunch of locales.
      * @param value The value of 'long_descriptions'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setLongDescriptions(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> value) {
      validate(fields()[5], value);
      this.long_descriptions = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'long_descriptions' field has been set.
      * Bundle Component's long description in a bunch of locales.
      * @return True if the 'long_descriptions' field has been set, false otherwise.
      */
    public boolean hasLongDescriptions() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'long_descriptions' field.
      * Bundle Component's long description in a bunch of locales.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearLongDescriptions() {
      long_descriptions = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'color' field.
      * Optional list of colors.
      * @return The value.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Color getColor() {
      return color;
    }


    /**
      * Sets the value of the 'color' field.
      * Optional list of colors.
      * @param value The value of 'color'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setColor(com.inditex.mecc.mecprwat.api.avro.v2.Color value) {
      validate(fields()[6], value);
      this.colorBuilder = null;
      this.color = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'color' field has been set.
      * Optional list of colors.
      * @return True if the 'color' field has been set, false otherwise.
      */
    public boolean hasColor() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'color' field and creates one if it doesn't exist yet.
     * Optional list of colors.
     * @return This builder.
     */
    public com.inditex.mecc.mecprwat.api.avro.v2.Color.Builder getColorBuilder() {
      if (colorBuilder == null) {
        if (hasColor()) {
          setColorBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Color.newBuilder(color));
        } else {
          setColorBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Color.newBuilder());
        }
      }
      return colorBuilder;
    }

    /**
     * Sets the Builder instance for the 'color' field
     * Optional list of colors.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setColorBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Color.Builder value) {
      clearColor();
      colorBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'color' field has an active Builder instance
     * Optional list of colors.
     * @return True if the 'color' field has an active Builder instance
     */
    public boolean hasColorBuilder() {
      return colorBuilder != null;
    }

    /**
      * Clears the value of the 'color' field.
      * Optional list of colors.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearColor() {
      color = null;
      colorBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'seo_info' field.
      * Product's SEO information object.
      * @return The value.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo getSeoInfo() {
      return seo_info;
    }


    /**
      * Sets the value of the 'seo_info' field.
      * Product's SEO information object.
      * @param value The value of 'seo_info'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setSeoInfo(com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo value) {
      validate(fields()[7], value);
      this.seo_infoBuilder = null;
      this.seo_info = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'seo_info' field has been set.
      * Product's SEO information object.
      * @return True if the 'seo_info' field has been set, false otherwise.
      */
    public boolean hasSeoInfo() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'seo_info' field and creates one if it doesn't exist yet.
     * Product's SEO information object.
     * @return This builder.
     */
    public com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo.Builder getSeoInfoBuilder() {
      if (seo_infoBuilder == null) {
        if (hasSeoInfo()) {
          setSeoInfoBuilder(com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo.newBuilder(seo_info));
        } else {
          setSeoInfoBuilder(com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo.newBuilder());
        }
      }
      return seo_infoBuilder;
    }

    /**
     * Sets the Builder instance for the 'seo_info' field
     * Product's SEO information object.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setSeoInfoBuilder(com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo.Builder value) {
      clearSeoInfo();
      seo_infoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'seo_info' field has an active Builder instance
     * Product's SEO information object.
     * @return True if the 'seo_info' field has an active Builder instance
     */
    public boolean hasSeoInfoBuilder() {
      return seo_infoBuilder != null;
    }

    /**
      * Clears the value of the 'seo_info' field.
      * Product's SEO information object.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearSeoInfo() {
      seo_info = null;
      seo_infoBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * List of internationalized tags.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> getTags() {
      return tags;
    }


    /**
      * Sets the value of the 'tags' field.
      * List of internationalized tags.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setTags(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> value) {
      validate(fields()[8], value);
      this.tags = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * List of internationalized tags.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'tags' field.
      * List of internationalized tags.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearTags() {
      tags = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'labels' field.
      * List of internationalized labels.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> getLabels() {
      return labels;
    }


    /**
      * Sets the value of the 'labels' field.
      * List of internationalized labels.
      * @param value The value of 'labels'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setLabels(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> value) {
      validate(fields()[9], value);
      this.labels = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'labels' field has been set.
      * List of internationalized labels.
      * @return True if the 'labels' field has been set, false otherwise.
      */
    public boolean hasLabels() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'labels' field.
      * List of internationalized labels.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearLabels() {
      labels = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'marks' field.
      * Marks for the single component (ZARA_SCENES...)
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getMarks() {
      return marks;
    }


    /**
      * Sets the value of the 'marks' field.
      * Marks for the single component (ZARA_SCENES...)
      * @param value The value of 'marks'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setMarks(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.marks = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'marks' field has been set.
      * Marks for the single component (ZARA_SCENES...)
      * @return True if the 'marks' field has been set, false otherwise.
      */
    public boolean hasMarks() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'marks' field.
      * Marks for the single component (ZARA_SCENES...)
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearMarks() {
      marks = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'valued_attributes' field.
      * List of valued_attributes of the single component
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> getValuedAttributes() {
      return valued_attributes;
    }


    /**
      * Sets the value of the 'valued_attributes' field.
      * List of valued_attributes of the single component
      * @param value The value of 'valued_attributes'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setValuedAttributes(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> value) {
      validate(fields()[11], value);
      this.valued_attributes = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'valued_attributes' field has been set.
      * List of valued_attributes of the single component
      * @return True if the 'valued_attributes' field has been set, false otherwise.
      */
    public boolean hasValuedAttributes() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'valued_attributes' field.
      * List of valued_attributes of the single component
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearValuedAttributes() {
      valued_attributes = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'additional_info' field.
      * Optional with dynamic additional information.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalInfo() {
      return additional_info;
    }


    /**
      * Sets the value of the 'additional_info' field.
      * Optional with dynamic additional information.
      * @param value The value of 'additional_info'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder setAdditionalInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[12], value);
      this.additional_info = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'additional_info' field has been set.
      * Optional with dynamic additional information.
      * @return True if the 'additional_info' field has been set, false otherwise.
      */
    public boolean hasAdditionalInfo() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'additional_info' field.
      * Optional with dynamic additional information.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleComponentExtendedInfoChanged.Builder clearAdditionalInfo() {
      additional_info = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BundleComponentExtendedInfoChanged build() {
      try {
        BundleComponentExtendedInfoChanged record = new BundleComponentExtendedInfoChanged();
        record.store_id = fieldSetFlags()[0] ? this.store_id : (java.lang.Long) defaultValue(fields()[0]);
        record.commercial_component_id = fieldSetFlags()[1] ? this.commercial_component_id : (java.lang.Long) defaultValue(fields()[1]);
        record.updated_at = fieldSetFlags()[2] ? this.updated_at : (java.lang.Long) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>) defaultValue(fields()[3]);
        record.short_descriptions = fieldSetFlags()[4] ? this.short_descriptions : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>) defaultValue(fields()[4]);
        record.long_descriptions = fieldSetFlags()[5] ? this.long_descriptions : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>) defaultValue(fields()[5]);
        if (colorBuilder != null) {
          try {
            record.color = this.colorBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("color"));
            throw e;
          }
        } else {
          record.color = fieldSetFlags()[6] ? this.color : (com.inditex.mecc.mecprwat.api.avro.v2.Color) defaultValue(fields()[6]);
        }
        if (seo_infoBuilder != null) {
          try {
            record.seo_info = this.seo_infoBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("seo_info"));
            throw e;
          }
        } else {
          record.seo_info = fieldSetFlags()[7] ? this.seo_info : (com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo) defaultValue(fields()[7]);
        }
        record.tags = fieldSetFlags()[8] ? this.tags : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag>) defaultValue(fields()[8]);
        record.labels = fieldSetFlags()[9] ? this.labels : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label>) defaultValue(fields()[9]);
        record.marks = fieldSetFlags()[10] ? this.marks : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[10]);
        record.valued_attributes = fieldSetFlags()[11] ? this.valued_attributes : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute>) defaultValue(fields()[11]);
        record.additional_info = fieldSetFlags()[12] ? this.additional_info : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BundleComponentExtendedInfoChanged>
    WRITER$ = (org.apache.avro.io.DatumWriter<BundleComponentExtendedInfoChanged>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BundleComponentExtendedInfoChanged>
    READER$ = (org.apache.avro.io.DatumReader<BundleComponentExtendedInfoChanged>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.store_id);

    out.writeLong(this.commercial_component_id);

    out.writeLong(this.updated_at);

    long size0 = this.name.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.I18NText e0: this.name) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.short_descriptions.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.I18NText e1: this.short_descriptions) {
      actualSize1++;
      out.startItem();
      e1.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.long_descriptions.size();
    out.writeArrayStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.I18NText e2: this.long_descriptions) {
      actualSize2++;
      out.startItem();
      e2.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    if (this.color == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.color.customEncode(out);
    }

    this.seo_info.customEncode(out);

    long size3 = this.tags.size();
    out.writeArrayStart();
    out.setItemCount(size3);
    long actualSize3 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.Tag e3: this.tags) {
      actualSize3++;
      out.startItem();
      e3.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");

    long size4 = this.labels.size();
    out.writeArrayStart();
    out.setItemCount(size4);
    long actualSize4 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.Label e4: this.labels) {
      actualSize4++;
      out.startItem();
      e4.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize4 != size4)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size4 + ", but element count was " + actualSize4 + ".");

    long size5 = this.marks.size();
    out.writeArrayStart();
    out.setItemCount(size5);
    long actualSize5 = 0;
    for (java.lang.CharSequence e5: this.marks) {
      actualSize5++;
      out.startItem();
      out.writeString(e5);
    }
    out.writeArrayEnd();
    if (actualSize5 != size5)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size5 + ", but element count was " + actualSize5 + ".");

    long size6 = this.valued_attributes.size();
    out.writeArrayStart();
    out.setItemCount(size6);
    long actualSize6 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute e6: this.valued_attributes) {
      actualSize6++;
      out.startItem();
      e6.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize6 != size6)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size6 + ", but element count was " + actualSize6 + ".");

    if (this.additional_info == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size7 = this.additional_info.size();
      out.writeMapStart();
      out.setItemCount(size7);
      long actualSize7 = 0;
      for (java.util.Map.Entry<java.lang.CharSequence, java.lang.CharSequence> e7: this.additional_info.entrySet()) {
        actualSize7++;
        out.startItem();
        out.writeString(e7.getKey());
        java.lang.CharSequence v7 = e7.getValue();
        out.writeString(v7);
      }
      out.writeMapEnd();
      if (actualSize7 != size7)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size7 + ", but element count was " + actualSize7 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.store_id = in.readLong();

      this.commercial_component_id = in.readLong();

      this.updated_at = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> a0 = this.name;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>((int)size0, SCHEMA$.getField("name").schema());
        this.name = a0;
      } else a0.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.inditex.mecc.mecprwat.api.avro.v2.I18NText e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.inditex.mecc.mecprwat.api.avro.v2.I18NText();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> a1 = this.short_descriptions;
      if (a1 == null) {
        a1 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>((int)size1, SCHEMA$.getField("short_descriptions").schema());
        this.short_descriptions = a1;
      } else a1.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          com.inditex.mecc.mecprwat.api.avro.v2.I18NText e1 = (ga1 != null ? ga1.peek() : null);
          if (e1 == null) {
            e1 = new com.inditex.mecc.mecprwat.api.avro.v2.I18NText();
          }
          e1.customDecode(in);
          a1.add(e1);
        }
      }

      long size2 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> a2 = this.long_descriptions;
      if (a2 == null) {
        a2 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>((int)size2, SCHEMA$.getField("long_descriptions").schema());
        this.long_descriptions = a2;
      } else a2.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)a2 : null);
      for ( ; 0 < size2; size2 = in.arrayNext()) {
        for ( ; size2 != 0; size2--) {
          com.inditex.mecc.mecprwat.api.avro.v2.I18NText e2 = (ga2 != null ? ga2.peek() : null);
          if (e2 == null) {
            e2 = new com.inditex.mecc.mecprwat.api.avro.v2.I18NText();
          }
          e2.customDecode(in);
          a2.add(e2);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.color = null;
      } else {
        if (this.color == null) {
          this.color = new com.inditex.mecc.mecprwat.api.avro.v2.Color();
        }
        this.color.customDecode(in);
      }

      if (this.seo_info == null) {
        this.seo_info = new com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo();
      }
      this.seo_info.customDecode(in);

      long size3 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> a3 = this.tags;
      if (a3 == null) {
        a3 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Tag>((int)size3, SCHEMA$.getField("tags").schema());
        this.tags = a3;
      } else a3.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Tag> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Tag>)a3 : null);
      for ( ; 0 < size3; size3 = in.arrayNext()) {
        for ( ; size3 != 0; size3--) {
          com.inditex.mecc.mecprwat.api.avro.v2.Tag e3 = (ga3 != null ? ga3.peek() : null);
          if (e3 == null) {
            e3 = new com.inditex.mecc.mecprwat.api.avro.v2.Tag();
          }
          e3.customDecode(in);
          a3.add(e3);
        }
      }

      long size4 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> a4 = this.labels;
      if (a4 == null) {
        a4 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Label>((int)size4, SCHEMA$.getField("labels").schema());
        this.labels = a4;
      } else a4.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Label> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Label>)a4 : null);
      for ( ; 0 < size4; size4 = in.arrayNext()) {
        for ( ; size4 != 0; size4--) {
          com.inditex.mecc.mecprwat.api.avro.v2.Label e4 = (ga4 != null ? ga4.peek() : null);
          if (e4 == null) {
            e4 = new com.inditex.mecc.mecprwat.api.avro.v2.Label();
          }
          e4.customDecode(in);
          a4.add(e4);
        }
      }

      long size5 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a5 = this.marks;
      if (a5 == null) {
        a5 = new SpecificData.Array<java.lang.CharSequence>((int)size5, SCHEMA$.getField("marks").schema());
        this.marks = a5;
      } else a5.clear();
      SpecificData.Array<java.lang.CharSequence> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a5 : null);
      for ( ; 0 < size5; size5 = in.arrayNext()) {
        for ( ; size5 != 0; size5--) {
          java.lang.CharSequence e5 = (ga5 != null ? ga5.peek() : null);
          e5 = in.readString(e5 instanceof Utf8 ? (Utf8)e5 : null);
          a5.add(e5);
        }
      }

      long size6 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> a6 = this.valued_attributes;
      if (a6 == null) {
        a6 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute>((int)size6, SCHEMA$.getField("valued_attributes").schema());
        this.valued_attributes = a6;
      } else a6.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> ga6 = (a6 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute>)a6 : null);
      for ( ; 0 < size6; size6 = in.arrayNext()) {
        for ( ; size6 != 0; size6--) {
          com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute e6 = (ga6 != null ? ga6.peek() : null);
          if (e6 == null) {
            e6 = new com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute();
          }
          e6.customDecode(in);
          a6.add(e6);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.additional_info = null;
      } else {
        long size7 = in.readMapStart();
        java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m7 = this.additional_info; // Need fresh name due to limitation of macro system
        if (m7 == null) {
          m7 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size7);
          this.additional_info = m7;
        } else m7.clear();
        for ( ; 0 < size7; size7 = in.mapNext()) {
          for ( ; size7 != 0; size7--) {
            java.lang.CharSequence k7 = null;
            k7 = in.readString(k7 instanceof Utf8 ? (Utf8)k7 : null);
            java.lang.CharSequence v7 = null;
            v7 = in.readString(v7 instanceof Utf8 ? (Utf8)v7 : null);
            m7.put(k7, v7);
          }
        }
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.store_id = in.readLong();
          break;

        case 1:
          this.commercial_component_id = in.readLong();
          break;

        case 2:
          this.updated_at = in.readLong();
          break;

        case 3:
          long size0 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> a0 = this.name;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>((int)size0, SCHEMA$.getField("name").schema());
            this.name = a0;
          } else a0.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.inditex.mecc.mecprwat.api.avro.v2.I18NText e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.inditex.mecc.mecprwat.api.avro.v2.I18NText();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 4:
          long size1 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> a1 = this.short_descriptions;
          if (a1 == null) {
            a1 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>((int)size1, SCHEMA$.getField("short_descriptions").schema());
            this.short_descriptions = a1;
          } else a1.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              com.inditex.mecc.mecprwat.api.avro.v2.I18NText e1 = (ga1 != null ? ga1.peek() : null);
              if (e1 == null) {
                e1 = new com.inditex.mecc.mecprwat.api.avro.v2.I18NText();
              }
              e1.customDecode(in);
              a1.add(e1);
            }
          }
          break;

        case 5:
          long size2 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> a2 = this.long_descriptions;
          if (a2 == null) {
            a2 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>((int)size2, SCHEMA$.getField("long_descriptions").schema());
            this.long_descriptions = a2;
          } else a2.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.I18NText>)a2 : null);
          for ( ; 0 < size2; size2 = in.arrayNext()) {
            for ( ; size2 != 0; size2--) {
              com.inditex.mecc.mecprwat.api.avro.v2.I18NText e2 = (ga2 != null ? ga2.peek() : null);
              if (e2 == null) {
                e2 = new com.inditex.mecc.mecprwat.api.avro.v2.I18NText();
              }
              e2.customDecode(in);
              a2.add(e2);
            }
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.color = null;
          } else {
            if (this.color == null) {
              this.color = new com.inditex.mecc.mecprwat.api.avro.v2.Color();
            }
            this.color.customDecode(in);
          }
          break;

        case 7:
          if (this.seo_info == null) {
            this.seo_info = new com.inditex.mecc.mecprwat.api.avro.v2.SeoInfo();
          }
          this.seo_info.customDecode(in);
          break;

        case 8:
          long size3 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Tag> a3 = this.tags;
          if (a3 == null) {
            a3 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Tag>((int)size3, SCHEMA$.getField("tags").schema());
            this.tags = a3;
          } else a3.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Tag> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Tag>)a3 : null);
          for ( ; 0 < size3; size3 = in.arrayNext()) {
            for ( ; size3 != 0; size3--) {
              com.inditex.mecc.mecprwat.api.avro.v2.Tag e3 = (ga3 != null ? ga3.peek() : null);
              if (e3 == null) {
                e3 = new com.inditex.mecc.mecprwat.api.avro.v2.Tag();
              }
              e3.customDecode(in);
              a3.add(e3);
            }
          }
          break;

        case 9:
          long size4 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.Label> a4 = this.labels;
          if (a4 == null) {
            a4 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Label>((int)size4, SCHEMA$.getField("labels").schema());
            this.labels = a4;
          } else a4.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Label> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.Label>)a4 : null);
          for ( ; 0 < size4; size4 = in.arrayNext()) {
            for ( ; size4 != 0; size4--) {
              com.inditex.mecc.mecprwat.api.avro.v2.Label e4 = (ga4 != null ? ga4.peek() : null);
              if (e4 == null) {
                e4 = new com.inditex.mecc.mecprwat.api.avro.v2.Label();
              }
              e4.customDecode(in);
              a4.add(e4);
            }
          }
          break;

        case 10:
          long size5 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a5 = this.marks;
          if (a5 == null) {
            a5 = new SpecificData.Array<java.lang.CharSequence>((int)size5, SCHEMA$.getField("marks").schema());
            this.marks = a5;
          } else a5.clear();
          SpecificData.Array<java.lang.CharSequence> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a5 : null);
          for ( ; 0 < size5; size5 = in.arrayNext()) {
            for ( ; size5 != 0; size5--) {
              java.lang.CharSequence e5 = (ga5 != null ? ga5.peek() : null);
              e5 = in.readString(e5 instanceof Utf8 ? (Utf8)e5 : null);
              a5.add(e5);
            }
          }
          break;

        case 11:
          long size6 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> a6 = this.valued_attributes;
          if (a6 == null) {
            a6 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute>((int)size6, SCHEMA$.getField("valued_attributes").schema());
            this.valued_attributes = a6;
          } else a6.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute> ga6 = (a6 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute>)a6 : null);
          for ( ; 0 < size6; size6 = in.arrayNext()) {
            for ( ; size6 != 0; size6--) {
              com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute e6 = (ga6 != null ? ga6.peek() : null);
              if (e6 == null) {
                e6 = new com.inditex.mecc.mecprwat.api.avro.v2.ValuedAttribute();
              }
              e6.customDecode(in);
              a6.add(e6);
            }
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.additional_info = null;
          } else {
            long size7 = in.readMapStart();
            java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m7 = this.additional_info; // Need fresh name due to limitation of macro system
            if (m7 == null) {
              m7 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size7);
              this.additional_info = m7;
            } else m7.clear();
            for ( ; 0 < size7; size7 = in.mapNext()) {
              for ( ; size7 != 0; size7--) {
                java.lang.CharSequence k7 = null;
                k7 = in.readString(k7 instanceof Utf8 ? (Utf8)k7 : null);
                java.lang.CharSequence v7 = null;
                v7 = in.readString(v7 instanceof Utf8 ? (Utf8)v7 : null);
                m7.put(k7, v7);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










