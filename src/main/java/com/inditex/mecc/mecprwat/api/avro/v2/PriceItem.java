/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprwat.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Class that holds price information for an item bean. */
@org.apache.avro.specific.AvroGenerated
public class PriceItem extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7107230317273108315L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PriceItem\",\"namespace\":\"com.inditex.mecc.mecprwat.api.avro.v2\",\"doc\":\"Class that holds price information for an item bean.\",\"fields\":[{\"name\":\"item_id\",\"type\":\"long\",\"doc\":\"Item's identifier\"},{\"name\":\"offer\",\"type\":{\"type\":\"record\",\"name\":\"Offer\",\"doc\":\"Class that holds the list of prices of the item bean.\",\"fields\":[{\"name\":\"prices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Price\",\"doc\":\"Class that holds price information for a given period of time.\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"Starting period date in milliseconds since epoch time where the price becomes valid.\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"end_date\",\"type\":\"long\",\"doc\":\"Ending period date in milliseconds since epoch time where the price stops being valid.\",\"order\":\"ignore\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"price\",\"type\":\"long\",\"doc\":\"Current price during the current period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents).\",\"order\":\"ignore\"},{\"name\":\"old_price\",\"type\":[\"null\",\"long\"],\"doc\":\"Previous price of the product during a sales period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents). This is optional and used to compare previous and current prices during sales.\",\"order\":\"ignore\"},{\"name\":\"currency_iso\",\"type\":\"string\",\"doc\":\"Currency ISO 4217 code.\",\"order\":\"ignore\"},{\"name\":\"promotion\",\"type\":[\"null\",\"string\"],\"doc\":\"Price promotion information. This value will not be set on a regular price but will be set instead on sales and event prices.\",\"default\":null,\"order\":\"ignore\"}]}},\"doc\":\"List of prices of the current item.\"}]},\"doc\":\"Contains list of prices of the item bean.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PriceItem> ENCODER =
      new BinaryMessageEncoder<PriceItem>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PriceItem> DECODER =
      new BinaryMessageDecoder<PriceItem>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PriceItem> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PriceItem> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PriceItem> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PriceItem>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PriceItem to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PriceItem from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PriceItem instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PriceItem fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Item's identifier */
  @Deprecated public long item_id;
  /** Contains list of prices of the item bean. */
  @Deprecated public com.inditex.mecc.mecprwat.api.avro.v2.Offer offer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PriceItem() {}

  /**
   * All-args constructor.
   * @param item_id Item's identifier
   * @param offer Contains list of prices of the item bean.
   */
  public PriceItem(java.lang.Long item_id, com.inditex.mecc.mecprwat.api.avro.v2.Offer offer) {
    this.item_id = item_id;
    this.offer = offer;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item_id;
    case 1: return offer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item_id = (java.lang.Long)value$; break;
    case 1: offer = (com.inditex.mecc.mecprwat.api.avro.v2.Offer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'item_id' field.
   * @return Item's identifier
   */
  public long getItemId() {
    return item_id;
  }


  /**
   * Sets the value of the 'item_id' field.
   * Item's identifier
   * @param value the value to set.
   */
  public void setItemId(long value) {
    this.item_id = value;
  }

  /**
   * Gets the value of the 'offer' field.
   * @return Contains list of prices of the item bean.
   */
  public com.inditex.mecc.mecprwat.api.avro.v2.Offer getOffer() {
    return offer;
  }


  /**
   * Sets the value of the 'offer' field.
   * Contains list of prices of the item bean.
   * @param value the value to set.
   */
  public void setOffer(com.inditex.mecc.mecprwat.api.avro.v2.Offer value) {
    this.offer = value;
  }

  /**
   * Creates a new PriceItem RecordBuilder.
   * @return A new PriceItem RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder newBuilder() {
    return new com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder();
  }

  /**
   * Creates a new PriceItem RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PriceItem RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder(other);
    }
  }

  /**
   * Creates a new PriceItem RecordBuilder by copying an existing PriceItem instance.
   * @param other The existing instance to copy.
   * @return A new PriceItem RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.PriceItem other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder(other);
    }
  }

  /**
   * RecordBuilder for PriceItem instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PriceItem>
    implements org.apache.avro.data.RecordBuilder<PriceItem> {

    /** Item's identifier */
    private long item_id;
    /** Contains list of prices of the item bean. */
    private com.inditex.mecc.mecprwat.api.avro.v2.Offer offer;
    private com.inditex.mecc.mecprwat.api.avro.v2.Offer.Builder offerBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item_id)) {
        this.item_id = data().deepCopy(fields()[0].schema(), other.item_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.offer)) {
        this.offer = data().deepCopy(fields()[1].schema(), other.offer);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasOfferBuilder()) {
        this.offerBuilder = com.inditex.mecc.mecprwat.api.avro.v2.Offer.newBuilder(other.getOfferBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PriceItem instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.PriceItem other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.item_id)) {
        this.item_id = data().deepCopy(fields()[0].schema(), other.item_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.offer)) {
        this.offer = data().deepCopy(fields()[1].schema(), other.offer);
        fieldSetFlags()[1] = true;
      }
      this.offerBuilder = null;
    }

    /**
      * Gets the value of the 'item_id' field.
      * Item's identifier
      * @return The value.
      */
    public long getItemId() {
      return item_id;
    }


    /**
      * Sets the value of the 'item_id' field.
      * Item's identifier
      * @param value The value of 'item_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder setItemId(long value) {
      validate(fields()[0], value);
      this.item_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'item_id' field has been set.
      * Item's identifier
      * @return True if the 'item_id' field has been set, false otherwise.
      */
    public boolean hasItemId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'item_id' field.
      * Item's identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder clearItemId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'offer' field.
      * Contains list of prices of the item bean.
      * @return The value.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.Offer getOffer() {
      return offer;
    }


    /**
      * Sets the value of the 'offer' field.
      * Contains list of prices of the item bean.
      * @param value The value of 'offer'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder setOffer(com.inditex.mecc.mecprwat.api.avro.v2.Offer value) {
      validate(fields()[1], value);
      this.offerBuilder = null;
      this.offer = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'offer' field has been set.
      * Contains list of prices of the item bean.
      * @return True if the 'offer' field has been set, false otherwise.
      */
    public boolean hasOffer() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'offer' field and creates one if it doesn't exist yet.
     * Contains list of prices of the item bean.
     * @return This builder.
     */
    public com.inditex.mecc.mecprwat.api.avro.v2.Offer.Builder getOfferBuilder() {
      if (offerBuilder == null) {
        if (hasOffer()) {
          setOfferBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Offer.newBuilder(offer));
        } else {
          setOfferBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Offer.newBuilder());
        }
      }
      return offerBuilder;
    }

    /**
     * Sets the Builder instance for the 'offer' field
     * Contains list of prices of the item bean.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder setOfferBuilder(com.inditex.mecc.mecprwat.api.avro.v2.Offer.Builder value) {
      clearOffer();
      offerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'offer' field has an active Builder instance
     * Contains list of prices of the item bean.
     * @return True if the 'offer' field has an active Builder instance
     */
    public boolean hasOfferBuilder() {
      return offerBuilder != null;
    }

    /**
      * Clears the value of the 'offer' field.
      * Contains list of prices of the item bean.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.PriceItem.Builder clearOffer() {
      offer = null;
      offerBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PriceItem build() {
      try {
        PriceItem record = new PriceItem();
        record.item_id = fieldSetFlags()[0] ? this.item_id : (java.lang.Long) defaultValue(fields()[0]);
        if (offerBuilder != null) {
          try {
            record.offer = this.offerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("offer"));
            throw e;
          }
        } else {
          record.offer = fieldSetFlags()[1] ? this.offer : (com.inditex.mecc.mecprwat.api.avro.v2.Offer) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PriceItem>
    WRITER$ = (org.apache.avro.io.DatumWriter<PriceItem>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PriceItem>
    READER$ = (org.apache.avro.io.DatumReader<PriceItem>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.item_id);

    this.offer.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.item_id = in.readLong();

      if (this.offer == null) {
        this.offer = new com.inditex.mecc.mecprwat.api.avro.v2.Offer();
      }
      this.offer.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.item_id = in.readLong();
          break;

        case 1:
          if (this.offer == null) {
            this.offer = new com.inditex.mecc.mecprwat.api.avro.v2.Offer();
          }
          this.offer.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










