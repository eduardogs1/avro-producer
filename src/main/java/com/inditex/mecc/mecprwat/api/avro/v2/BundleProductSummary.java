/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprwat.api.avro.v2;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Summary of a product composing a commercial component bundle. */
@org.apache.avro.specific.AvroGenerated
public class BundleProductSummary extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6153479122130107858L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BundleProductSummary\",\"namespace\":\"com.inditex.mecc.mecprwat.api.avro.v2\",\"doc\":\"Summary of a product composing a commercial component bundle.\",\"fields\":[{\"name\":\"commercial_component_id\",\"type\":\"long\",\"doc\":\"Commercial component unique identifier of a product this bundle is composed of.\"},{\"name\":\"color_id\",\"type\":[\"null\",\"string\"],\"doc\":\"Color id of this product applying to the bundle.\"},{\"name\":\"styling_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Styling id of this product applying to the bundle.\"},{\"name\":\"is_main_component\",\"type\":\"boolean\",\"doc\":\"Indicates whether this is the main product contained in a bundle.\"},{\"name\":\"colorItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ColorItem\",\"doc\":\"Holds colors of the commercial component.\",\"fields\":[{\"name\":\"color_id\",\"type\":\"string\",\"doc\":\"Child commercial component color id.\"},{\"name\":\"gammas\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Gamma\",\"doc\":\"Class that holds gamma information.\",\"fields\":[{\"name\":\"gamma_id\",\"type\":\"long\",\"doc\":\"Gamma id of color.\"},{\"name\":\"position\",\"type\":\"long\",\"doc\":\"Correlation index of the gamma.\"},{\"name\":\"hex_code\",\"type\":\"string\",\"doc\":\"Hexadecimal code of the gamma.\"}]}},\"doc\":\"Gammas info of the color.\",\"default\":[]},{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"doc\":\"Holds basic data of a child commercial component.\",\"fields\":[{\"name\":\"item_id\",\"type\":\"long\",\"doc\":\"Child commercial component unique id.\"},{\"name\":\"size_id\",\"type\":\"long\",\"doc\":\"Child commercial component size id.\"},{\"name\":\"is_buyable\",\"type\":\"boolean\",\"doc\":\"Indicates whether the item is buyable or not.\"},{\"name\":\"reference\",\"type\":\"string\",\"doc\":\"Child commercial component partnumber.\"},{\"name\":\"hscode\",\"type\":[\"null\",\"long\"],\"doc\":\"Tariff heading code used by finances.\",\"default\":null},{\"name\":\"country_manufacture\",\"type\":[\"null\",\"string\"],\"doc\":\"Code indicating the country of manufacture\",\"default\":null},{\"name\":\"join_life\",\"type\":[\"null\",\"string\"],\"doc\":\"Join life code.\"},{\"name\":\"marks\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Marks at item level\",\"default\":[]},{\"name\":\"measures\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Measure\",\"doc\":\"Class that holds the information about an individual measure.\",\"fields\":[{\"name\":\"kind\",\"type\":\"string\",\"doc\":\"Kind of measure [weight, length, width, height]\"},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"Unit of the measure\"},{\"name\":\"value\",\"type\":\"double\",\"doc\":\"Measure value\"},{\"name\":\"store_id\",\"type\":[\"null\",\"long\"],\"doc\":\"StoreId of the measure\",\"default\":null}]}},\"doc\":\"Indicates measures for an item\",\"default\":[]},{\"name\":\"additional_info\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\",\"default\":{}}],\"doc\":\"Optional with dynamic additional information.\",\"default\":null},{\"name\":\"multi_valued_attributes\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"MultiValuedAttribute\",\"doc\":\"Class that represents a list of values for a multi valued attribute.\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Indicates the values of the attribute.\",\"default\":[]}]},\"default\":{}}],\"doc\":\"List of multi_valued_attributes of the item\",\"default\":null}]}},\"doc\":\"Items contained by this color.\"}]}},\"doc\":\"Commercial component items associated to a bundle product summary.\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BundleProductSummary> ENCODER =
      new BinaryMessageEncoder<BundleProductSummary>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BundleProductSummary> DECODER =
      new BinaryMessageDecoder<BundleProductSummary>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BundleProductSummary> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BundleProductSummary> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BundleProductSummary> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BundleProductSummary>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BundleProductSummary to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BundleProductSummary from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BundleProductSummary instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BundleProductSummary fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Commercial component unique identifier of a product this bundle is composed of. */
  @Deprecated public long commercial_component_id;
  /** Color id of this product applying to the bundle. */
  @Deprecated public java.lang.CharSequence color_id;
  /** Styling id of this product applying to the bundle. */
  @Deprecated public java.lang.Integer styling_id;
  /** Indicates whether this is the main product contained in a bundle. */
  @Deprecated public boolean is_main_component;
  /** Commercial component items associated to a bundle product summary. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> colorItems;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BundleProductSummary() {}

  /**
   * All-args constructor.
   * @param commercial_component_id Commercial component unique identifier of a product this bundle is composed of.
   * @param color_id Color id of this product applying to the bundle.
   * @param styling_id Styling id of this product applying to the bundle.
   * @param is_main_component Indicates whether this is the main product contained in a bundle.
   * @param colorItems Commercial component items associated to a bundle product summary.
   */
  public BundleProductSummary(java.lang.Long commercial_component_id, java.lang.CharSequence color_id, java.lang.Integer styling_id, java.lang.Boolean is_main_component, java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> colorItems) {
    this.commercial_component_id = commercial_component_id;
    this.color_id = color_id;
    this.styling_id = styling_id;
    this.is_main_component = is_main_component;
    this.colorItems = colorItems;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return commercial_component_id;
    case 1: return color_id;
    case 2: return styling_id;
    case 3: return is_main_component;
    case 4: return colorItems;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: commercial_component_id = (java.lang.Long)value$; break;
    case 1: color_id = (java.lang.CharSequence)value$; break;
    case 2: styling_id = (java.lang.Integer)value$; break;
    case 3: is_main_component = (java.lang.Boolean)value$; break;
    case 4: colorItems = (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'commercial_component_id' field.
   * @return Commercial component unique identifier of a product this bundle is composed of.
   */
  public long getCommercialComponentId() {
    return commercial_component_id;
  }


  /**
   * Sets the value of the 'commercial_component_id' field.
   * Commercial component unique identifier of a product this bundle is composed of.
   * @param value the value to set.
   */
  public void setCommercialComponentId(long value) {
    this.commercial_component_id = value;
  }

  /**
   * Gets the value of the 'color_id' field.
   * @return Color id of this product applying to the bundle.
   */
  public java.lang.CharSequence getColorId() {
    return color_id;
  }


  /**
   * Sets the value of the 'color_id' field.
   * Color id of this product applying to the bundle.
   * @param value the value to set.
   */
  public void setColorId(java.lang.CharSequence value) {
    this.color_id = value;
  }

  /**
   * Gets the value of the 'styling_id' field.
   * @return Styling id of this product applying to the bundle.
   */
  public java.lang.Integer getStylingId() {
    return styling_id;
  }


  /**
   * Sets the value of the 'styling_id' field.
   * Styling id of this product applying to the bundle.
   * @param value the value to set.
   */
  public void setStylingId(java.lang.Integer value) {
    this.styling_id = value;
  }

  /**
   * Gets the value of the 'is_main_component' field.
   * @return Indicates whether this is the main product contained in a bundle.
   */
  public boolean getIsMainComponent() {
    return is_main_component;
  }


  /**
   * Sets the value of the 'is_main_component' field.
   * Indicates whether this is the main product contained in a bundle.
   * @param value the value to set.
   */
  public void setIsMainComponent(boolean value) {
    this.is_main_component = value;
  }

  /**
   * Gets the value of the 'colorItems' field.
   * @return Commercial component items associated to a bundle product summary.
   */
  public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> getColorItems() {
    return colorItems;
  }


  /**
   * Sets the value of the 'colorItems' field.
   * Commercial component items associated to a bundle product summary.
   * @param value the value to set.
   */
  public void setColorItems(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> value) {
    this.colorItems = value;
  }

  /**
   * Creates a new BundleProductSummary RecordBuilder.
   * @return A new BundleProductSummary RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder newBuilder() {
    return new com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder();
  }

  /**
   * Creates a new BundleProductSummary RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BundleProductSummary RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder(other);
    }
  }

  /**
   * Creates a new BundleProductSummary RecordBuilder by copying an existing BundleProductSummary instance.
   * @param other The existing instance to copy.
   * @return A new BundleProductSummary RecordBuilder
   */
  public static com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder newBuilder(com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary other) {
    if (other == null) {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder();
    } else {
      return new com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder(other);
    }
  }

  /**
   * RecordBuilder for BundleProductSummary instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BundleProductSummary>
    implements org.apache.avro.data.RecordBuilder<BundleProductSummary> {

    /** Commercial component unique identifier of a product this bundle is composed of. */
    private long commercial_component_id;
    /** Color id of this product applying to the bundle. */
    private java.lang.CharSequence color_id;
    /** Styling id of this product applying to the bundle. */
    private java.lang.Integer styling_id;
    /** Indicates whether this is the main product contained in a bundle. */
    private boolean is_main_component;
    /** Commercial component items associated to a bundle product summary. */
    private java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> colorItems;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.commercial_component_id)) {
        this.commercial_component_id = data().deepCopy(fields()[0].schema(), other.commercial_component_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.color_id)) {
        this.color_id = data().deepCopy(fields()[1].schema(), other.color_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.styling_id)) {
        this.styling_id = data().deepCopy(fields()[2].schema(), other.styling_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.is_main_component)) {
        this.is_main_component = data().deepCopy(fields()[3].schema(), other.is_main_component);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.colorItems)) {
        this.colorItems = data().deepCopy(fields()[4].schema(), other.colorItems);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing BundleProductSummary instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.commercial_component_id)) {
        this.commercial_component_id = data().deepCopy(fields()[0].schema(), other.commercial_component_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.color_id)) {
        this.color_id = data().deepCopy(fields()[1].schema(), other.color_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.styling_id)) {
        this.styling_id = data().deepCopy(fields()[2].schema(), other.styling_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.is_main_component)) {
        this.is_main_component = data().deepCopy(fields()[3].schema(), other.is_main_component);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.colorItems)) {
        this.colorItems = data().deepCopy(fields()[4].schema(), other.colorItems);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'commercial_component_id' field.
      * Commercial component unique identifier of a product this bundle is composed of.
      * @return The value.
      */
    public long getCommercialComponentId() {
      return commercial_component_id;
    }


    /**
      * Sets the value of the 'commercial_component_id' field.
      * Commercial component unique identifier of a product this bundle is composed of.
      * @param value The value of 'commercial_component_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder setCommercialComponentId(long value) {
      validate(fields()[0], value);
      this.commercial_component_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'commercial_component_id' field has been set.
      * Commercial component unique identifier of a product this bundle is composed of.
      * @return True if the 'commercial_component_id' field has been set, false otherwise.
      */
    public boolean hasCommercialComponentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'commercial_component_id' field.
      * Commercial component unique identifier of a product this bundle is composed of.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder clearCommercialComponentId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'color_id' field.
      * Color id of this product applying to the bundle.
      * @return The value.
      */
    public java.lang.CharSequence getColorId() {
      return color_id;
    }


    /**
      * Sets the value of the 'color_id' field.
      * Color id of this product applying to the bundle.
      * @param value The value of 'color_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder setColorId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.color_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'color_id' field has been set.
      * Color id of this product applying to the bundle.
      * @return True if the 'color_id' field has been set, false otherwise.
      */
    public boolean hasColorId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'color_id' field.
      * Color id of this product applying to the bundle.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder clearColorId() {
      color_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'styling_id' field.
      * Styling id of this product applying to the bundle.
      * @return The value.
      */
    public java.lang.Integer getStylingId() {
      return styling_id;
    }


    /**
      * Sets the value of the 'styling_id' field.
      * Styling id of this product applying to the bundle.
      * @param value The value of 'styling_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder setStylingId(java.lang.Integer value) {
      validate(fields()[2], value);
      this.styling_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'styling_id' field has been set.
      * Styling id of this product applying to the bundle.
      * @return True if the 'styling_id' field has been set, false otherwise.
      */
    public boolean hasStylingId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'styling_id' field.
      * Styling id of this product applying to the bundle.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder clearStylingId() {
      styling_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_main_component' field.
      * Indicates whether this is the main product contained in a bundle.
      * @return The value.
      */
    public boolean getIsMainComponent() {
      return is_main_component;
    }


    /**
      * Sets the value of the 'is_main_component' field.
      * Indicates whether this is the main product contained in a bundle.
      * @param value The value of 'is_main_component'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder setIsMainComponent(boolean value) {
      validate(fields()[3], value);
      this.is_main_component = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'is_main_component' field has been set.
      * Indicates whether this is the main product contained in a bundle.
      * @return True if the 'is_main_component' field has been set, false otherwise.
      */
    public boolean hasIsMainComponent() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'is_main_component' field.
      * Indicates whether this is the main product contained in a bundle.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder clearIsMainComponent() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'colorItems' field.
      * Commercial component items associated to a bundle product summary.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> getColorItems() {
      return colorItems;
    }


    /**
      * Sets the value of the 'colorItems' field.
      * Commercial component items associated to a bundle product summary.
      * @param value The value of 'colorItems'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder setColorItems(java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> value) {
      validate(fields()[4], value);
      this.colorItems = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'colorItems' field has been set.
      * Commercial component items associated to a bundle product summary.
      * @return True if the 'colorItems' field has been set, false otherwise.
      */
    public boolean hasColorItems() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'colorItems' field.
      * Commercial component items associated to a bundle product summary.
      * @return This builder.
      */
    public com.inditex.mecc.mecprwat.api.avro.v2.BundleProductSummary.Builder clearColorItems() {
      colorItems = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BundleProductSummary build() {
      try {
        BundleProductSummary record = new BundleProductSummary();
        record.commercial_component_id = fieldSetFlags()[0] ? this.commercial_component_id : (java.lang.Long) defaultValue(fields()[0]);
        record.color_id = fieldSetFlags()[1] ? this.color_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.styling_id = fieldSetFlags()[2] ? this.styling_id : (java.lang.Integer) defaultValue(fields()[2]);
        record.is_main_component = fieldSetFlags()[3] ? this.is_main_component : (java.lang.Boolean) defaultValue(fields()[3]);
        record.colorItems = fieldSetFlags()[4] ? this.colorItems : (java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem>) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BundleProductSummary>
    WRITER$ = (org.apache.avro.io.DatumWriter<BundleProductSummary>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BundleProductSummary>
    READER$ = (org.apache.avro.io.DatumReader<BundleProductSummary>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.commercial_component_id);

    if (this.color_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.color_id);
    }

    if (this.styling_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.styling_id);
    }

    out.writeBoolean(this.is_main_component);

    long size0 = this.colorItems.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.inditex.mecc.mecprwat.api.avro.v2.ColorItem e0: this.colorItems) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.commercial_component_id = in.readLong();

      if (in.readIndex() != 1) {
        in.readNull();
        this.color_id = null;
      } else {
        this.color_id = in.readString(this.color_id instanceof Utf8 ? (Utf8)this.color_id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.styling_id = null;
      } else {
        this.styling_id = in.readInt();
      }

      this.is_main_component = in.readBoolean();

      long size0 = in.readArrayStart();
      java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> a0 = this.colorItems;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem>((int)size0, SCHEMA$.getField("colorItems").schema());
        this.colorItems = a0;
      } else a0.clear();
      SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.inditex.mecc.mecprwat.api.avro.v2.ColorItem e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.inditex.mecc.mecprwat.api.avro.v2.ColorItem();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.commercial_component_id = in.readLong();
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.color_id = null;
          } else {
            this.color_id = in.readString(this.color_id instanceof Utf8 ? (Utf8)this.color_id : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.styling_id = null;
          } else {
            this.styling_id = in.readInt();
          }
          break;

        case 3:
          this.is_main_component = in.readBoolean();
          break;

        case 4:
          long size0 = in.readArrayStart();
          java.util.List<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> a0 = this.colorItems;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem>((int)size0, SCHEMA$.getField("colorItems").schema());
            this.colorItems = a0;
          } else a0.clear();
          SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.inditex.mecc.mecprwat.api.avro.v2.ColorItem>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.inditex.mecc.mecprwat.api.avro.v2.ColorItem e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.inditex.mecc.mecprwat.api.avro.v2.ColorItem();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










