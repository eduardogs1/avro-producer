/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprcc.api.avro.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds the whole commercial component information. */
@org.apache.avro.specific.AvroGenerated
public class CCChanged extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3854872824009955747L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CCChanged\",\"namespace\":\"com.inditex.mecc.mecprcc.api.avro.v1\",\"doc\":\"Class that holds the whole commercial component information.\",\"fields\":[{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Timestamp expressed in microseconds when the Commercial Component was updated\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"id\",\"type\":\"long\",\"doc\":\"Commercial Component unique identifier\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"CommercialComponentType\",\"symbols\":[\"LOOK\",\"SUIT\",\"UNISIZE\",\"MULTISIZE\",\"GROUP\",\"BEAUTY\",\"COLORBUNDLE\",\"STYLINGBUNDLE\"]},\"doc\":\"Type of Commercial Component\"},{\"name\":\"style_id\",\"type\":\"int\",\"doc\":\"Styling identifier\"},{\"name\":\"reference\",\"type\":\"string\",\"doc\":\"Commercial Component's partnumber\"},{\"name\":\"seo\",\"type\":{\"type\":\"record\",\"name\":\"Seo\",\"doc\":\"Class that holds the SEO information of a Commercial Component.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"SEO unique identifier\"}]},\"doc\":\"Commercial Component's SEO information\"},{\"name\":\"base_cc_id\",\"type\":[\"null\",\"long\"],\"doc\":\"Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component\"},{\"name\":\"groups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Group\",\"doc\":\"Class that holds the Commercial Component Group information.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Commercial Component Group's name\"},{\"name\":\"position\",\"type\":\"int\",\"doc\":\"Commercial Component Group's position\"},{\"name\":\"relations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupRelation\",\"doc\":\"Class that holds the Commercial Component Group Relation information.\",\"fields\":[{\"name\":\"product_id\",\"type\":\"long\",\"doc\":\"Product's unique identifier\"},{\"name\":\"color_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Color's unique identifier\"},{\"name\":\"is_main\",\"type\":\"boolean\",\"doc\":\"Whether it's the main product of the Commercial Component\"},{\"name\":\"position\",\"type\":\"int\",\"doc\":\"Product's position in Commercial Component\"},{\"name\":\"size_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Size's unique identifier\"},{\"name\":\"style_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Optional styling of the product\"}]}},\"doc\":\"List of relations of the Commercial Component Group\"}]}}},{\"name\":\"publication_timelines\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"PublicationTimeline\",\"doc\":\"Class that holds a publication timeline information for a Commercial Component that includes the store where it applies as well as the list of publication segments\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store unique identifier\"},{\"name\":\"segments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PublicationSegment\",\"doc\":\"Class that holds a publication segment with both the initial and final timestamps\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"end_date\",\"type\":[\"null\",\"long\"],\"doc\":\"Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible\",\"logicalType\":\"timestamp-millis\"}]}}},{\"name\":\"blocked\",\"type\":\"boolean\",\"doc\":\"Whether the timeline is blocked or not\"}]}},\"doc\":\"Map of publication's timelines per store\"},{\"name\":\"descriptions\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Description\",\"doc\":\"Class that holds a the descriptions' texts for a Commercial Component and a locale\",\"fields\":[{\"name\":\"locale\",\"type\":\"string\",\"doc\":\"Locale ISO code\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Commercial Component's description name on the given locale\"},{\"name\":\"description\",\"type\":\"string\",\"doc\":\"DEPRECATED - Commercial Component's description text on the given locale\"},{\"name\":\"short_description\",\"type\":[\"null\",\"string\"],\"doc\":\"Commercial Component's short description text on the given locale\"},{\"name\":\"long_description\",\"type\":[\"null\",\"string\"],\"doc\":\"Commercial Component's long description text on the given locale\"}]}},\"doc\":\"Map of descriptions per locale\"},{\"name\":\"attributes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Attribute\",\"doc\":\"Class that holds a the attributes' texts for a Commercial Component and a locale\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Type of attribute\",\"symbols\":[\"TAG\",\"LABEL\"]},{\"name\":\"code\",\"type\":\"string\",\"doc\":\"Attribute's unique identifier\"},{\"name\":\"values\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"AttributeValue\",\"doc\":\"Class that holds a the attributes' values for an Attribute a locale\",\"fields\":[{\"name\":\"locale\",\"type\":\"string\",\"doc\":\"Attribute's locale ISO Code\"},{\"name\":\"value\",\"type\":\"string\",\"doc\":\"Attribute's value text\"}]}},\"doc\":\"Map of attribute values per locale\"}]}}},{\"name\":\"media\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Media\",\"doc\":\"Class that holds a information about a Media\",\"fields\":[{\"name\":\"data\",\"type\":\"string\",\"doc\":\"JSON with Media's data in String format\"}]}],\"doc\":\"Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CCChanged> ENCODER =
      new BinaryMessageEncoder<CCChanged>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CCChanged> DECODER =
      new BinaryMessageDecoder<CCChanged>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CCChanged> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CCChanged> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CCChanged>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CCChanged to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CCChanged from a ByteBuffer. */
  public static CCChanged fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Timestamp expressed in microseconds when the Commercial Component was updated */
  @Deprecated public long updated_at;
  /** Commercial Component unique identifier */
  @Deprecated public long id;
  /** Type of Commercial Component */
  @Deprecated public com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType type;
  /** Styling identifier */
  @Deprecated public int style_id;
  /** Commercial Component's partnumber */
  @Deprecated public java.lang.CharSequence reference;
  /** Commercial Component's SEO information */
  @Deprecated public com.inditex.mecc.mecprcc.api.avro.v1.Seo seo;
  /** Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component */
  @Deprecated public java.lang.Long base_cc_id;
  @Deprecated public java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> groups;
  /** Map of publication's timelines per store */
  @Deprecated public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> publication_timelines;
  /** Map of descriptions per locale */
  @Deprecated public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> descriptions;
  @Deprecated public java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> attributes;
  /** Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed */
  @Deprecated public com.inditex.mecc.mecprcc.api.avro.v1.Media media;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CCChanged() {}

  /**
   * All-args constructor.
   * @param updated_at Timestamp expressed in microseconds when the Commercial Component was updated
   * @param id Commercial Component unique identifier
   * @param type Type of Commercial Component
   * @param style_id Styling identifier
   * @param reference Commercial Component's partnumber
   * @param seo Commercial Component's SEO information
   * @param base_cc_id Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
   * @param groups The new value for groups
   * @param publication_timelines Map of publication's timelines per store
   * @param descriptions Map of descriptions per locale
   * @param attributes The new value for attributes
   * @param media Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
   */
  public CCChanged(java.lang.Long updated_at, java.lang.Long id, com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType type, java.lang.Integer style_id, java.lang.CharSequence reference, com.inditex.mecc.mecprcc.api.avro.v1.Seo seo, java.lang.Long base_cc_id, java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> groups, java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> publication_timelines, java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> descriptions, java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> attributes, com.inditex.mecc.mecprcc.api.avro.v1.Media media) {
    this.updated_at = updated_at;
    this.id = id;
    this.type = type;
    this.style_id = style_id;
    this.reference = reference;
    this.seo = seo;
    this.base_cc_id = base_cc_id;
    this.groups = groups;
    this.publication_timelines = publication_timelines;
    this.descriptions = descriptions;
    this.attributes = attributes;
    this.media = media;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return updated_at;
    case 1: return id;
    case 2: return type;
    case 3: return style_id;
    case 4: return reference;
    case 5: return seo;
    case 6: return base_cc_id;
    case 7: return groups;
    case 8: return publication_timelines;
    case 9: return descriptions;
    case 10: return attributes;
    case 11: return media;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: updated_at = (java.lang.Long)value$; break;
    case 1: id = (java.lang.Long)value$; break;
    case 2: type = (com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType)value$; break;
    case 3: style_id = (java.lang.Integer)value$; break;
    case 4: reference = (java.lang.CharSequence)value$; break;
    case 5: seo = (com.inditex.mecc.mecprcc.api.avro.v1.Seo)value$; break;
    case 6: base_cc_id = (java.lang.Long)value$; break;
    case 7: groups = (java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group>)value$; break;
    case 8: publication_timelines = (java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline>)value$; break;
    case 9: descriptions = (java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description>)value$; break;
    case 10: attributes = (java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute>)value$; break;
    case 11: media = (com.inditex.mecc.mecprcc.api.avro.v1.Media)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'updated_at' field.
   * @return Timestamp expressed in microseconds when the Commercial Component was updated
   */
  public java.lang.Long getUpdatedAt() {
    return updated_at;
  }

  /**
   * Sets the value of the 'updated_at' field.
   * Timestamp expressed in microseconds when the Commercial Component was updated
   * @param value the value to set.
   */
  public void setUpdatedAt(java.lang.Long value) {
    this.updated_at = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return Commercial Component unique identifier
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * Commercial Component unique identifier
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return Type of Commercial Component
   */
  public com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Type of Commercial Component
   * @param value the value to set.
   */
  public void setType(com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'style_id' field.
   * @return Styling identifier
   */
  public java.lang.Integer getStyleId() {
    return style_id;
  }

  /**
   * Sets the value of the 'style_id' field.
   * Styling identifier
   * @param value the value to set.
   */
  public void setStyleId(java.lang.Integer value) {
    this.style_id = value;
  }

  /**
   * Gets the value of the 'reference' field.
   * @return Commercial Component's partnumber
   */
  public java.lang.CharSequence getReference() {
    return reference;
  }

  /**
   * Sets the value of the 'reference' field.
   * Commercial Component's partnumber
   * @param value the value to set.
   */
  public void setReference(java.lang.CharSequence value) {
    this.reference = value;
  }

  /**
   * Gets the value of the 'seo' field.
   * @return Commercial Component's SEO information
   */
  public com.inditex.mecc.mecprcc.api.avro.v1.Seo getSeo() {
    return seo;
  }

  /**
   * Sets the value of the 'seo' field.
   * Commercial Component's SEO information
   * @param value the value to set.
   */
  public void setSeo(com.inditex.mecc.mecprcc.api.avro.v1.Seo value) {
    this.seo = value;
  }

  /**
   * Gets the value of the 'base_cc_id' field.
   * @return Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
   */
  public java.lang.Long getBaseCcId() {
    return base_cc_id;
  }

  /**
   * Sets the value of the 'base_cc_id' field.
   * Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
   * @param value the value to set.
   */
  public void setBaseCcId(java.lang.Long value) {
    this.base_cc_id = value;
  }

  /**
   * Gets the value of the 'groups' field.
   * @return The value of the 'groups' field.
   */
  public java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> getGroups() {
    return groups;
  }

  /**
   * Sets the value of the 'groups' field.
   * @param value the value to set.
   */
  public void setGroups(java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> value) {
    this.groups = value;
  }

  /**
   * Gets the value of the 'publication_timelines' field.
   * @return Map of publication's timelines per store
   */
  public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> getPublicationTimelines() {
    return publication_timelines;
  }

  /**
   * Sets the value of the 'publication_timelines' field.
   * Map of publication's timelines per store
   * @param value the value to set.
   */
  public void setPublicationTimelines(java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> value) {
    this.publication_timelines = value;
  }

  /**
   * Gets the value of the 'descriptions' field.
   * @return Map of descriptions per locale
   */
  public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> getDescriptions() {
    return descriptions;
  }

  /**
   * Sets the value of the 'descriptions' field.
   * Map of descriptions per locale
   * @param value the value to set.
   */
  public void setDescriptions(java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> value) {
    this.descriptions = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   * @return The value of the 'attributes' field.
   */
  public java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * @param value the value to set.
   */
  public void setAttributes(java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'media' field.
   * @return Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
   */
  public com.inditex.mecc.mecprcc.api.avro.v1.Media getMedia() {
    return media;
  }

  /**
   * Sets the value of the 'media' field.
   * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
   * @param value the value to set.
   */
  public void setMedia(com.inditex.mecc.mecprcc.api.avro.v1.Media value) {
    this.media = value;
  }

  /**
   * Creates a new CCChanged RecordBuilder.
   * @return A new CCChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder newBuilder() {
    return new com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder();
  }

  /**
   * Creates a new CCChanged RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CCChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder(other);
  }

  /**
   * Creates a new CCChanged RecordBuilder by copying an existing CCChanged instance.
   * @param other The existing instance to copy.
   * @return A new CCChanged RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.CCChanged other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder(other);
  }

  /**
   * RecordBuilder for CCChanged instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CCChanged>
    implements org.apache.avro.data.RecordBuilder<CCChanged> {

    /** Timestamp expressed in microseconds when the Commercial Component was updated */
    private long updated_at;
    /** Commercial Component unique identifier */
    private long id;
    /** Type of Commercial Component */
    private com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType type;
    /** Styling identifier */
    private int style_id;
    /** Commercial Component's partnumber */
    private java.lang.CharSequence reference;
    /** Commercial Component's SEO information */
    private com.inditex.mecc.mecprcc.api.avro.v1.Seo seo;
    private com.inditex.mecc.mecprcc.api.avro.v1.Seo.Builder seoBuilder;
    /** Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component */
    private java.lang.Long base_cc_id;
    private java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> groups;
    /** Map of publication's timelines per store */
    private java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> publication_timelines;
    /** Map of descriptions per locale */
    private java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> descriptions;
    private java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> attributes;
    /** Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed */
    private com.inditex.mecc.mecprcc.api.avro.v1.Media media;
    private com.inditex.mecc.mecprcc.api.avro.v1.Media.Builder mediaBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[0].schema(), other.updated_at);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.style_id)) {
        this.style_id = data().deepCopy(fields()[3].schema(), other.style_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reference)) {
        this.reference = data().deepCopy(fields()[4].schema(), other.reference);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.seo)) {
        this.seo = data().deepCopy(fields()[5].schema(), other.seo);
        fieldSetFlags()[5] = true;
      }
      if (other.hasSeoBuilder()) {
        this.seoBuilder = com.inditex.mecc.mecprcc.api.avro.v1.Seo.newBuilder(other.getSeoBuilder());
      }
      if (isValidValue(fields()[6], other.base_cc_id)) {
        this.base_cc_id = data().deepCopy(fields()[6].schema(), other.base_cc_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.groups)) {
        this.groups = data().deepCopy(fields()[7].schema(), other.groups);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.publication_timelines)) {
        this.publication_timelines = data().deepCopy(fields()[8].schema(), other.publication_timelines);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.descriptions)) {
        this.descriptions = data().deepCopy(fields()[9].schema(), other.descriptions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.attributes)) {
        this.attributes = data().deepCopy(fields()[10].schema(), other.attributes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.media)) {
        this.media = data().deepCopy(fields()[11].schema(), other.media);
        fieldSetFlags()[11] = true;
      }
      if (other.hasMediaBuilder()) {
        this.mediaBuilder = com.inditex.mecc.mecprcc.api.avro.v1.Media.newBuilder(other.getMediaBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing CCChanged instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.CCChanged other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[0].schema(), other.updated_at);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.style_id)) {
        this.style_id = data().deepCopy(fields()[3].schema(), other.style_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reference)) {
        this.reference = data().deepCopy(fields()[4].schema(), other.reference);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.seo)) {
        this.seo = data().deepCopy(fields()[5].schema(), other.seo);
        fieldSetFlags()[5] = true;
      }
      this.seoBuilder = null;
      if (isValidValue(fields()[6], other.base_cc_id)) {
        this.base_cc_id = data().deepCopy(fields()[6].schema(), other.base_cc_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.groups)) {
        this.groups = data().deepCopy(fields()[7].schema(), other.groups);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.publication_timelines)) {
        this.publication_timelines = data().deepCopy(fields()[8].schema(), other.publication_timelines);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.descriptions)) {
        this.descriptions = data().deepCopy(fields()[9].schema(), other.descriptions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.attributes)) {
        this.attributes = data().deepCopy(fields()[10].schema(), other.attributes);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.media)) {
        this.media = data().deepCopy(fields()[11].schema(), other.media);
        fieldSetFlags()[11] = true;
      }
      this.mediaBuilder = null;
    }

    /**
      * Gets the value of the 'updated_at' field.
      * Timestamp expressed in microseconds when the Commercial Component was updated
      * @return The value.
      */
    public java.lang.Long getUpdatedAt() {
      return updated_at;
    }

    /**
      * Sets the value of the 'updated_at' field.
      * Timestamp expressed in microseconds when the Commercial Component was updated
      * @param value The value of 'updated_at'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setUpdatedAt(long value) {
      validate(fields()[0], value);
      this.updated_at = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_at' field has been set.
      * Timestamp expressed in microseconds when the Commercial Component was updated
      * @return True if the 'updated_at' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'updated_at' field.
      * Timestamp expressed in microseconds when the Commercial Component was updated
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearUpdatedAt() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * Commercial Component unique identifier
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * Commercial Component unique identifier
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setId(long value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Commercial Component unique identifier
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * Commercial Component unique identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * Type of Commercial Component
      * @return The value.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * Type of Commercial Component
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setType(com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * Type of Commercial Component
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * Type of Commercial Component
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'style_id' field.
      * Styling identifier
      * @return The value.
      */
    public java.lang.Integer getStyleId() {
      return style_id;
    }

    /**
      * Sets the value of the 'style_id' field.
      * Styling identifier
      * @param value The value of 'style_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setStyleId(int value) {
      validate(fields()[3], value);
      this.style_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'style_id' field has been set.
      * Styling identifier
      * @return True if the 'style_id' field has been set, false otherwise.
      */
    public boolean hasStyleId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'style_id' field.
      * Styling identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearStyleId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'reference' field.
      * Commercial Component's partnumber
      * @return The value.
      */
    public java.lang.CharSequence getReference() {
      return reference;
    }

    /**
      * Sets the value of the 'reference' field.
      * Commercial Component's partnumber
      * @param value The value of 'reference'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setReference(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.reference = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'reference' field has been set.
      * Commercial Component's partnumber
      * @return True if the 'reference' field has been set, false otherwise.
      */
    public boolean hasReference() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'reference' field.
      * Commercial Component's partnumber
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearReference() {
      reference = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'seo' field.
      * Commercial Component's SEO information
      * @return The value.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Seo getSeo() {
      return seo;
    }

    /**
      * Sets the value of the 'seo' field.
      * Commercial Component's SEO information
      * @param value The value of 'seo'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setSeo(com.inditex.mecc.mecprcc.api.avro.v1.Seo value) {
      validate(fields()[5], value);
      this.seoBuilder = null;
      this.seo = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'seo' field has been set.
      * Commercial Component's SEO information
      * @return True if the 'seo' field has been set, false otherwise.
      */
    public boolean hasSeo() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'seo' field and creates one if it doesn't exist yet.
     * Commercial Component's SEO information
     * @return This builder.
     */
    public com.inditex.mecc.mecprcc.api.avro.v1.Seo.Builder getSeoBuilder() {
      if (seoBuilder == null) {
        if (hasSeo()) {
          setSeoBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Seo.newBuilder(seo));
        } else {
          setSeoBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Seo.newBuilder());
        }
      }
      return seoBuilder;
    }

    /**
     * Sets the Builder instance for the 'seo' field
     * Commercial Component's SEO information
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setSeoBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Seo.Builder value) {
      clearSeo();
      seoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'seo' field has an active Builder instance
     * Commercial Component's SEO information
     * @return True if the 'seo' field has an active Builder instance
     */
    public boolean hasSeoBuilder() {
      return seoBuilder != null;
    }

    /**
      * Clears the value of the 'seo' field.
      * Commercial Component's SEO information
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearSeo() {
      seo = null;
      seoBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'base_cc_id' field.
      * Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
      * @return The value.
      */
    public java.lang.Long getBaseCcId() {
      return base_cc_id;
    }

    /**
      * Sets the value of the 'base_cc_id' field.
      * Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
      * @param value The value of 'base_cc_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setBaseCcId(java.lang.Long value) {
      validate(fields()[6], value);
      this.base_cc_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'base_cc_id' field has been set.
      * Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
      * @return True if the 'base_cc_id' field has been set, false otherwise.
      */
    public boolean hasBaseCcId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'base_cc_id' field.
      * Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearBaseCcId() {
      base_cc_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'groups' field.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> getGroups() {
      return groups;
    }

    /**
      * Sets the value of the 'groups' field.
      * @param value The value of 'groups'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setGroups(java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group> value) {
      validate(fields()[7], value);
      this.groups = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'groups' field has been set.
      * @return True if the 'groups' field has been set, false otherwise.
      */
    public boolean hasGroups() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'groups' field.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearGroups() {
      groups = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'publication_timelines' field.
      * Map of publication's timelines per store
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> getPublicationTimelines() {
      return publication_timelines;
    }

    /**
      * Sets the value of the 'publication_timelines' field.
      * Map of publication's timelines per store
      * @param value The value of 'publication_timelines'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setPublicationTimelines(java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline> value) {
      validate(fields()[8], value);
      this.publication_timelines = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'publication_timelines' field has been set.
      * Map of publication's timelines per store
      * @return True if the 'publication_timelines' field has been set, false otherwise.
      */
    public boolean hasPublicationTimelines() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'publication_timelines' field.
      * Map of publication's timelines per store
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearPublicationTimelines() {
      publication_timelines = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'descriptions' field.
      * Map of descriptions per locale
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> getDescriptions() {
      return descriptions;
    }

    /**
      * Sets the value of the 'descriptions' field.
      * Map of descriptions per locale
      * @param value The value of 'descriptions'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setDescriptions(java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description> value) {
      validate(fields()[9], value);
      this.descriptions = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'descriptions' field has been set.
      * Map of descriptions per locale
      * @return True if the 'descriptions' field has been set, false otherwise.
      */
    public boolean hasDescriptions() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'descriptions' field.
      * Map of descriptions per locale
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearDescriptions() {
      descriptions = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributes' field.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> getAttributes() {
      return attributes;
    }

    /**
      * Sets the value of the 'attributes' field.
      * @param value The value of 'attributes'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setAttributes(java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute> value) {
      validate(fields()[10], value);
      this.attributes = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'attributes' field has been set.
      * @return True if the 'attributes' field has been set, false otherwise.
      */
    public boolean hasAttributes() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'attributes' field.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearAttributes() {
      attributes = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'media' field.
      * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
      * @return The value.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Media getMedia() {
      return media;
    }

    /**
      * Sets the value of the 'media' field.
      * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
      * @param value The value of 'media'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setMedia(com.inditex.mecc.mecprcc.api.avro.v1.Media value) {
      validate(fields()[11], value);
      this.mediaBuilder = null;
      this.media = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'media' field has been set.
      * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
      * @return True if the 'media' field has been set, false otherwise.
      */
    public boolean hasMedia() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'media' field and creates one if it doesn't exist yet.
     * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
     * @return This builder.
     */
    public com.inditex.mecc.mecprcc.api.avro.v1.Media.Builder getMediaBuilder() {
      if (mediaBuilder == null) {
        if (hasMedia()) {
          setMediaBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Media.newBuilder(media));
        } else {
          setMediaBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Media.newBuilder());
        }
      }
      return mediaBuilder;
    }

    /**
     * Sets the Builder instance for the 'media' field
     * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder setMediaBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Media.Builder value) {
      clearMedia();
      mediaBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'media' field has an active Builder instance
     * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
     * @return True if the 'media' field has an active Builder instance
     */
    public boolean hasMediaBuilder() {
      return mediaBuilder != null;
    }

    /**
      * Clears the value of the 'media' field.
      * Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChanged.Builder clearMedia() {
      media = null;
      mediaBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CCChanged build() {
      try {
        CCChanged record = new CCChanged();
        record.updated_at = fieldSetFlags()[0] ? this.updated_at : (java.lang.Long) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.Long) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (com.inditex.mecc.mecprcc.api.avro.v1.CommercialComponentType) defaultValue(fields()[2]);
        record.style_id = fieldSetFlags()[3] ? this.style_id : (java.lang.Integer) defaultValue(fields()[3]);
        record.reference = fieldSetFlags()[4] ? this.reference : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (seoBuilder != null) {
          record.seo = this.seoBuilder.build();
        } else {
          record.seo = fieldSetFlags()[5] ? this.seo : (com.inditex.mecc.mecprcc.api.avro.v1.Seo) defaultValue(fields()[5]);
        }
        record.base_cc_id = fieldSetFlags()[6] ? this.base_cc_id : (java.lang.Long) defaultValue(fields()[6]);
        record.groups = fieldSetFlags()[7] ? this.groups : (java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Group>) defaultValue(fields()[7]);
        record.publication_timelines = fieldSetFlags()[8] ? this.publication_timelines : (java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.PublicationTimeline>) defaultValue(fields()[8]);
        record.descriptions = fieldSetFlags()[9] ? this.descriptions : (java.util.Map<java.lang.CharSequence,com.inditex.mecc.mecprcc.api.avro.v1.Description>) defaultValue(fields()[9]);
        record.attributes = fieldSetFlags()[10] ? this.attributes : (java.util.List<com.inditex.mecc.mecprcc.api.avro.v1.Attribute>) defaultValue(fields()[10]);
        if (mediaBuilder != null) {
          record.media = this.mediaBuilder.build();
        } else {
          record.media = fieldSetFlags()[11] ? this.media : (com.inditex.mecc.mecprcc.api.avro.v1.Media) defaultValue(fields()[11]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CCChanged>
    WRITER$ = (org.apache.avro.io.DatumWriter<CCChanged>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CCChanged>
    READER$ = (org.apache.avro.io.DatumReader<CCChanged>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
