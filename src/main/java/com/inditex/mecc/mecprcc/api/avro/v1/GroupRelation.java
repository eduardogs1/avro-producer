/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprcc.api.avro.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds the Commercial Component Group Relation information. */
@org.apache.avro.specific.AvroGenerated
public class GroupRelation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8763950372420362216L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GroupRelation\",\"namespace\":\"com.inditex.mecc.mecprcc.api.avro.v1\",\"doc\":\"Class that holds the Commercial Component Group Relation information.\",\"fields\":[{\"name\":\"product_id\",\"type\":\"long\",\"doc\":\"Product's unique identifier\"},{\"name\":\"color_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Color's unique identifier\"},{\"name\":\"is_main\",\"type\":\"boolean\",\"doc\":\"Whether it's the main product of the Commercial Component\"},{\"name\":\"position\",\"type\":\"int\",\"doc\":\"Product's position in Commercial Component\"},{\"name\":\"size_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Size's unique identifier\"},{\"name\":\"style_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Optional styling of the product\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GroupRelation> ENCODER =
      new BinaryMessageEncoder<GroupRelation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GroupRelation> DECODER =
      new BinaryMessageDecoder<GroupRelation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<GroupRelation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<GroupRelation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GroupRelation>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this GroupRelation to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a GroupRelation from a ByteBuffer. */
  public static GroupRelation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Product's unique identifier */
  @Deprecated public long product_id;
  /** Color's unique identifier */
  @Deprecated public java.lang.Integer color_id;
  /** Whether it's the main product of the Commercial Component */
  @Deprecated public boolean is_main;
  /** Product's position in Commercial Component */
  @Deprecated public int position;
  /** Size's unique identifier */
  @Deprecated public java.lang.Integer size_id;
  /** Optional styling of the product */
  @Deprecated public java.lang.Integer style_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GroupRelation() {}

  /**
   * All-args constructor.
   * @param product_id Product's unique identifier
   * @param color_id Color's unique identifier
   * @param is_main Whether it's the main product of the Commercial Component
   * @param position Product's position in Commercial Component
   * @param size_id Size's unique identifier
   * @param style_id Optional styling of the product
   */
  public GroupRelation(java.lang.Long product_id, java.lang.Integer color_id, java.lang.Boolean is_main, java.lang.Integer position, java.lang.Integer size_id, java.lang.Integer style_id) {
    this.product_id = product_id;
    this.color_id = color_id;
    this.is_main = is_main;
    this.position = position;
    this.size_id = size_id;
    this.style_id = style_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return product_id;
    case 1: return color_id;
    case 2: return is_main;
    case 3: return position;
    case 4: return size_id;
    case 5: return style_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: product_id = (java.lang.Long)value$; break;
    case 1: color_id = (java.lang.Integer)value$; break;
    case 2: is_main = (java.lang.Boolean)value$; break;
    case 3: position = (java.lang.Integer)value$; break;
    case 4: size_id = (java.lang.Integer)value$; break;
    case 5: style_id = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'product_id' field.
   * @return Product's unique identifier
   */
  public java.lang.Long getProductId() {
    return product_id;
  }

  /**
   * Sets the value of the 'product_id' field.
   * Product's unique identifier
   * @param value the value to set.
   */
  public void setProductId(java.lang.Long value) {
    this.product_id = value;
  }

  /**
   * Gets the value of the 'color_id' field.
   * @return Color's unique identifier
   */
  public java.lang.Integer getColorId() {
    return color_id;
  }

  /**
   * Sets the value of the 'color_id' field.
   * Color's unique identifier
   * @param value the value to set.
   */
  public void setColorId(java.lang.Integer value) {
    this.color_id = value;
  }

  /**
   * Gets the value of the 'is_main' field.
   * @return Whether it's the main product of the Commercial Component
   */
  public java.lang.Boolean getIsMain() {
    return is_main;
  }

  /**
   * Sets the value of the 'is_main' field.
   * Whether it's the main product of the Commercial Component
   * @param value the value to set.
   */
  public void setIsMain(java.lang.Boolean value) {
    this.is_main = value;
  }

  /**
   * Gets the value of the 'position' field.
   * @return Product's position in Commercial Component
   */
  public java.lang.Integer getPosition() {
    return position;
  }

  /**
   * Sets the value of the 'position' field.
   * Product's position in Commercial Component
   * @param value the value to set.
   */
  public void setPosition(java.lang.Integer value) {
    this.position = value;
  }

  /**
   * Gets the value of the 'size_id' field.
   * @return Size's unique identifier
   */
  public java.lang.Integer getSizeId() {
    return size_id;
  }

  /**
   * Sets the value of the 'size_id' field.
   * Size's unique identifier
   * @param value the value to set.
   */
  public void setSizeId(java.lang.Integer value) {
    this.size_id = value;
  }

  /**
   * Gets the value of the 'style_id' field.
   * @return Optional styling of the product
   */
  public java.lang.Integer getStyleId() {
    return style_id;
  }

  /**
   * Sets the value of the 'style_id' field.
   * Optional styling of the product
   * @param value the value to set.
   */
  public void setStyleId(java.lang.Integer value) {
    this.style_id = value;
  }

  /**
   * Creates a new GroupRelation RecordBuilder.
   * @return A new GroupRelation RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder newBuilder() {
    return new com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder();
  }

  /**
   * Creates a new GroupRelation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GroupRelation RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder(other);
  }

  /**
   * Creates a new GroupRelation RecordBuilder by copying an existing GroupRelation instance.
   * @param other The existing instance to copy.
   * @return A new GroupRelation RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder(other);
  }

  /**
   * RecordBuilder for GroupRelation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GroupRelation>
    implements org.apache.avro.data.RecordBuilder<GroupRelation> {

    /** Product's unique identifier */
    private long product_id;
    /** Color's unique identifier */
    private java.lang.Integer color_id;
    /** Whether it's the main product of the Commercial Component */
    private boolean is_main;
    /** Product's position in Commercial Component */
    private int position;
    /** Size's unique identifier */
    private java.lang.Integer size_id;
    /** Optional styling of the product */
    private java.lang.Integer style_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.color_id)) {
        this.color_id = data().deepCopy(fields()[1].schema(), other.color_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.is_main)) {
        this.is_main = data().deepCopy(fields()[2].schema(), other.is_main);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.position)) {
        this.position = data().deepCopy(fields()[3].schema(), other.position);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.size_id)) {
        this.size_id = data().deepCopy(fields()[4].schema(), other.size_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.style_id)) {
        this.style_id = data().deepCopy(fields()[5].schema(), other.style_id);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing GroupRelation instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.color_id)) {
        this.color_id = data().deepCopy(fields()[1].schema(), other.color_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.is_main)) {
        this.is_main = data().deepCopy(fields()[2].schema(), other.is_main);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.position)) {
        this.position = data().deepCopy(fields()[3].schema(), other.position);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.size_id)) {
        this.size_id = data().deepCopy(fields()[4].schema(), other.size_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.style_id)) {
        this.style_id = data().deepCopy(fields()[5].schema(), other.style_id);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'product_id' field.
      * Product's unique identifier
      * @return The value.
      */
    public java.lang.Long getProductId() {
      return product_id;
    }

    /**
      * Sets the value of the 'product_id' field.
      * Product's unique identifier
      * @param value The value of 'product_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder setProductId(long value) {
      validate(fields()[0], value);
      this.product_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'product_id' field has been set.
      * Product's unique identifier
      * @return True if the 'product_id' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'product_id' field.
      * Product's unique identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder clearProductId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'color_id' field.
      * Color's unique identifier
      * @return The value.
      */
    public java.lang.Integer getColorId() {
      return color_id;
    }

    /**
      * Sets the value of the 'color_id' field.
      * Color's unique identifier
      * @param value The value of 'color_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder setColorId(java.lang.Integer value) {
      validate(fields()[1], value);
      this.color_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'color_id' field has been set.
      * Color's unique identifier
      * @return True if the 'color_id' field has been set, false otherwise.
      */
    public boolean hasColorId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'color_id' field.
      * Color's unique identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder clearColorId() {
      color_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_main' field.
      * Whether it's the main product of the Commercial Component
      * @return The value.
      */
    public java.lang.Boolean getIsMain() {
      return is_main;
    }

    /**
      * Sets the value of the 'is_main' field.
      * Whether it's the main product of the Commercial Component
      * @param value The value of 'is_main'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder setIsMain(boolean value) {
      validate(fields()[2], value);
      this.is_main = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'is_main' field has been set.
      * Whether it's the main product of the Commercial Component
      * @return True if the 'is_main' field has been set, false otherwise.
      */
    public boolean hasIsMain() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'is_main' field.
      * Whether it's the main product of the Commercial Component
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder clearIsMain() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'position' field.
      * Product's position in Commercial Component
      * @return The value.
      */
    public java.lang.Integer getPosition() {
      return position;
    }

    /**
      * Sets the value of the 'position' field.
      * Product's position in Commercial Component
      * @param value The value of 'position'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder setPosition(int value) {
      validate(fields()[3], value);
      this.position = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'position' field has been set.
      * Product's position in Commercial Component
      * @return True if the 'position' field has been set, false otherwise.
      */
    public boolean hasPosition() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'position' field.
      * Product's position in Commercial Component
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder clearPosition() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'size_id' field.
      * Size's unique identifier
      * @return The value.
      */
    public java.lang.Integer getSizeId() {
      return size_id;
    }

    /**
      * Sets the value of the 'size_id' field.
      * Size's unique identifier
      * @param value The value of 'size_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder setSizeId(java.lang.Integer value) {
      validate(fields()[4], value);
      this.size_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'size_id' field has been set.
      * Size's unique identifier
      * @return True if the 'size_id' field has been set, false otherwise.
      */
    public boolean hasSizeId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'size_id' field.
      * Size's unique identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder clearSizeId() {
      size_id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'style_id' field.
      * Optional styling of the product
      * @return The value.
      */
    public java.lang.Integer getStyleId() {
      return style_id;
    }

    /**
      * Sets the value of the 'style_id' field.
      * Optional styling of the product
      * @param value The value of 'style_id'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder setStyleId(java.lang.Integer value) {
      validate(fields()[5], value);
      this.style_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'style_id' field has been set.
      * Optional styling of the product
      * @return True if the 'style_id' field has been set, false otherwise.
      */
    public boolean hasStyleId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'style_id' field.
      * Optional styling of the product
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.GroupRelation.Builder clearStyleId() {
      style_id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GroupRelation build() {
      try {
        GroupRelation record = new GroupRelation();
        record.product_id = fieldSetFlags()[0] ? this.product_id : (java.lang.Long) defaultValue(fields()[0]);
        record.color_id = fieldSetFlags()[1] ? this.color_id : (java.lang.Integer) defaultValue(fields()[1]);
        record.is_main = fieldSetFlags()[2] ? this.is_main : (java.lang.Boolean) defaultValue(fields()[2]);
        record.position = fieldSetFlags()[3] ? this.position : (java.lang.Integer) defaultValue(fields()[3]);
        record.size_id = fieldSetFlags()[4] ? this.size_id : (java.lang.Integer) defaultValue(fields()[4]);
        record.style_id = fieldSetFlags()[5] ? this.style_id : (java.lang.Integer) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GroupRelation>
    WRITER$ = (org.apache.avro.io.DatumWriter<GroupRelation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GroupRelation>
    READER$ = (org.apache.avro.io.DatumReader<GroupRelation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
