/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprcc.api.avro.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds a publication segment with both the initial and final timestamps */
@org.apache.avro.specific.AvroGenerated
public class PublicationSegment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5488478898092073137L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PublicationSegment\",\"namespace\":\"com.inditex.mecc.mecprcc.api.avro.v1\",\"doc\":\"Class that holds a publication segment with both the initial and final timestamps\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"end_date\",\"type\":[\"null\",\"long\"],\"doc\":\"Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible\",\"logicalType\":\"timestamp-millis\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PublicationSegment> ENCODER =
      new BinaryMessageEncoder<PublicationSegment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PublicationSegment> DECODER =
      new BinaryMessageDecoder<PublicationSegment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PublicationSegment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PublicationSegment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PublicationSegment>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PublicationSegment to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PublicationSegment from a ByteBuffer. */
  public static PublicationSegment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible */
  @Deprecated public long start_date;
  /** Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible */
  @Deprecated public java.lang.Long end_date;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PublicationSegment() {}

  /**
   * All-args constructor.
   * @param start_date Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
   * @param end_date Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
   */
  public PublicationSegment(java.lang.Long start_date, java.lang.Long end_date) {
    this.start_date = start_date;
    this.end_date = end_date;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return start_date;
    case 1: return end_date;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: start_date = (java.lang.Long)value$; break;
    case 1: end_date = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'start_date' field.
   * @return Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
   */
  public java.lang.Long getStartDate() {
    return start_date;
  }

  /**
   * Sets the value of the 'start_date' field.
   * Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
   * @param value the value to set.
   */
  public void setStartDate(java.lang.Long value) {
    this.start_date = value;
  }

  /**
   * Gets the value of the 'end_date' field.
   * @return Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
   */
  public java.lang.Long getEndDate() {
    return end_date;
  }

  /**
   * Sets the value of the 'end_date' field.
   * Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
   * @param value the value to set.
   */
  public void setEndDate(java.lang.Long value) {
    this.end_date = value;
  }

  /**
   * Creates a new PublicationSegment RecordBuilder.
   * @return A new PublicationSegment RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder newBuilder() {
    return new com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder();
  }

  /**
   * Creates a new PublicationSegment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PublicationSegment RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder(other);
  }

  /**
   * Creates a new PublicationSegment RecordBuilder by copying an existing PublicationSegment instance.
   * @param other The existing instance to copy.
   * @return A new PublicationSegment RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder(other);
  }

  /**
   * RecordBuilder for PublicationSegment instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PublicationSegment>
    implements org.apache.avro.data.RecordBuilder<PublicationSegment> {

    /** Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible */
    private long start_date;
    /** Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible */
    private java.lang.Long end_date;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.start_date)) {
        this.start_date = data().deepCopy(fields()[0].schema(), other.start_date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.end_date)) {
        this.end_date = data().deepCopy(fields()[1].schema(), other.end_date);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PublicationSegment instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.start_date)) {
        this.start_date = data().deepCopy(fields()[0].schema(), other.start_date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.end_date)) {
        this.end_date = data().deepCopy(fields()[1].schema(), other.end_date);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'start_date' field.
      * Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
      * @return The value.
      */
    public java.lang.Long getStartDate() {
      return start_date;
    }

    /**
      * Sets the value of the 'start_date' field.
      * Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
      * @param value The value of 'start_date'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder setStartDate(long value) {
      validate(fields()[0], value);
      this.start_date = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'start_date' field has been set.
      * Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
      * @return True if the 'start_date' field has been set, false otherwise.
      */
    public boolean hasStartDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'start_date' field.
      * Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder clearStartDate() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'end_date' field.
      * Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
      * @return The value.
      */
    public java.lang.Long getEndDate() {
      return end_date;
    }

    /**
      * Sets the value of the 'end_date' field.
      * Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
      * @param value The value of 'end_date'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder setEndDate(java.lang.Long value) {
      validate(fields()[1], value);
      this.end_date = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'end_date' field has been set.
      * Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
      * @return True if the 'end_date' field has been set, false otherwise.
      */
    public boolean hasEndDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'end_date' field.
      * Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.PublicationSegment.Builder clearEndDate() {
      end_date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PublicationSegment build() {
      try {
        PublicationSegment record = new PublicationSegment();
        record.start_date = fieldSetFlags()[0] ? this.start_date : (java.lang.Long) defaultValue(fields()[0]);
        record.end_date = fieldSetFlags()[1] ? this.end_date : (java.lang.Long) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PublicationSegment>
    WRITER$ = (org.apache.avro.io.DatumWriter<PublicationSegment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PublicationSegment>
    READER$ = (org.apache.avro.io.DatumReader<PublicationSegment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
