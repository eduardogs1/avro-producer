/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprcc.api.avro.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Avro envelope that holds cc changes. */
@org.apache.avro.specific.AvroGenerated
public class CCChangesEnvelope extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1970544790675289522L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CCChangesEnvelope\",\"namespace\":\"com.inditex.mecc.mecprcc.api.avro.v1\",\"doc\":\"Avro envelope that holds cc changes.\",\"fields\":[{\"name\":\"metadata\",\"type\":{\"type\":\"record\",\"name\":\"Metadata\",\"namespace\":\"com.inditex.aqsw.pipe.v1\",\"doc\":\"Message context attributes\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Unique name of the entity contained in the payload. I.e. 'cart'\"},{\"name\":\"domain\",\"type\":\"string\",\"doc\":\"Functional domain of the entity contained in the payload. I.e. 'purchase'\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"Version of the entity contained in the payload\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier of the the event\",\"default\":null},{\"name\":\"timestamp\",\"type\":\"string\",\"doc\":\"Timestamp of the occurrence of the business event\"},{\"name\":\"action\",\"type\":\"string\",\"doc\":\"Identifier of the action that generated the event. I.e. 'modified'\"},{\"name\":\"envelope\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Envelope\",\"doc\":\"Data relative to the message container used to envelop the event\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the message container used. I.e. 'pipe-event'\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"Specific container version\"}]}],\"doc\":\"Data relative to the message container used to envelop the event\",\"default\":null},{\"name\":\"classifiers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Classifier\",\"doc\":\"Defines the identity of a message using a set of keys extracted from the message payload\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the classifier in order to make comparisons between events with the same classifier defined\"},{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Ordered values that define the final classifier value\"}]}}],\"doc\":\"Set of classifiers to define different identities related with the event\",\"default\":null},{\"name\":\"extensions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Extensions\",\"namespace\":\"com.inditex.aqsw.pipe.v1.extensions\",\"doc\":\"Set of attributes for attaching common information to the event with analytic purposes\",\"fields\":[{\"name\":\"flows\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LifecycleExtension\",\"doc\":\"Information about the transition represented by the event in the life cycle of a process model or artifact\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Process model or artifact related to the event\"},{\"name\":\"domain\",\"type\":[\"null\",\"string\"],\"doc\":\"Domain of the process model or artifact related to the event\",\"default\":null},{\"name\":\"instance\",\"type\":[\"null\",\"string\"],\"doc\":\"Specific instance of the process model or artifact, if it's known\",\"default\":null},{\"name\":\"correlation\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Correlation identifiers between states of a flow. They will be defined for each functional case with the Data Architecture Analytics team.\",\"default\":null},{\"name\":\"transition\",\"type\":[\"null\",\"string\"],\"doc\":\"Lifecycle transition represented by the event\",\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"doc\":\"Specifies the state reached within the process model or the artifact lifecycle that triggered the event\",\"default\":null}]}}],\"doc\":\"Information about process models or artifacts the event is related to\",\"default\":null},{\"name\":\"geo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoExtension\",\"doc\":\"Information about geographical points and shapes related with an event\",\"fields\":[{\"name\":\"point\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoPoint\",\"doc\":\"Information about geographical points in WGS84 reference system\",\"fields\":[{\"name\":\"lon\",\"type\":\"double\",\"doc\":\"Longitude of the geopoint\"},{\"name\":\"lat\",\"type\":\"double\",\"doc\":\"Latitude of the geopoint\"}]}],\"doc\":\"Geographical point related to the event in WGS84 reference system\",\"default\":null},{\"name\":\"features\",\"type\":[\"null\",\"string\"],\"doc\":\"Geographical features related to the event in GeoJSON format\",\"default\":null}]}],\"doc\":\"Information about location related to the event\",\"default\":null}]}],\"doc\":\"Data relative to the business context that the message belongs to\",\"default\":null},{\"name\":\"relationships\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Relationship\",\"doc\":\"Represents a relationship between the message and a specific business entity\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Unique name of the entity\"},{\"name\":\"domain\",\"type\":\"string\",\"doc\":\"Functional domain. I.e. 'ECommerce'\"},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"doc\":\"Version of the entity definition\",\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"RelationshipType\",\"symbols\":[\"createdBy\",\"causes\",\"dependsOn\",\"hasA\",\"partOf\",\"memberOf\"]},\"doc\":\"Specific type of the relationship between the event and the business entity\"},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Specific data of the related entity at the moment the event is triggered\",\"default\":null}]}}],\"doc\":\"Relationship between the message and different business entities\",\"default\":null},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Context data of the message that does not belong in the definition of the main entity\",\"default\":null}]},\"doc\":\"Avro's metadata information.\"},{\"name\":\"payload\",\"type\":[{\"type\":\"record\",\"name\":\"CCChanged\",\"doc\":\"Class that holds the whole commercial component information.\",\"fields\":[{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Timestamp expressed in microseconds when the Commercial Component was updated\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"id\",\"type\":\"long\",\"doc\":\"Commercial Component unique identifier\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"CommercialComponentType\",\"symbols\":[\"LOOK\",\"SUIT\",\"UNISIZE\",\"MULTISIZE\",\"GROUP\",\"BEAUTY\",\"COLORBUNDLE\",\"STYLINGBUNDLE\"]},\"doc\":\"Type of Commercial Component\"},{\"name\":\"style_id\",\"type\":\"int\",\"doc\":\"Styling identifier\"},{\"name\":\"reference\",\"type\":\"string\",\"doc\":\"Commercial Component's partnumber\"},{\"name\":\"seo\",\"type\":{\"type\":\"record\",\"name\":\"Seo\",\"doc\":\"Class that holds the SEO information of a Commercial Component.\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"SEO unique identifier\"}]},\"doc\":\"Commercial Component's SEO information\"},{\"name\":\"base_cc_id\",\"type\":[\"null\",\"long\"],\"doc\":\"Related Commercial Component. If null then it means that the Commercial Component is the base one, otherwise the base_cc_id points to its base Commercial Component\"},{\"name\":\"groups\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Group\",\"doc\":\"Class that holds the Commercial Component Group information.\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Commercial Component Group's name\"},{\"name\":\"position\",\"type\":\"int\",\"doc\":\"Commercial Component Group's position\"},{\"name\":\"relations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GroupRelation\",\"doc\":\"Class that holds the Commercial Component Group Relation information.\",\"fields\":[{\"name\":\"product_id\",\"type\":\"long\",\"doc\":\"Product's unique identifier\"},{\"name\":\"color_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Color's unique identifier\"},{\"name\":\"is_main\",\"type\":\"boolean\",\"doc\":\"Whether it's the main product of the Commercial Component\"},{\"name\":\"position\",\"type\":\"int\",\"doc\":\"Product's position in Commercial Component\"},{\"name\":\"size_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Size's unique identifier\"},{\"name\":\"style_id\",\"type\":[\"null\",\"int\"],\"doc\":\"Optional styling of the product\"}]}},\"doc\":\"List of relations of the Commercial Component Group\"}]}}},{\"name\":\"publication_timelines\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"PublicationTimeline\",\"doc\":\"Class that holds a publication timeline information for a Commercial Component that includes the store where it applies as well as the list of publication segments\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store unique identifier\"},{\"name\":\"segments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PublicationSegment\",\"doc\":\"Class that holds a publication segment with both the initial and final timestamps\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"Commercial Component initial timestamp expressed in microseconds since when the Commercial Component is visible\",\"logica","lType\":\"timestamp-millis\"},{\"name\":\"end_date\",\"type\":[\"null\",\"long\"],\"doc\":\"Commercial Component ending timestamp expressed in microseconds until when the Commercial Component is visible\",\"logicalType\":\"timestamp-millis\"}]}}},{\"name\":\"blocked\",\"type\":\"boolean\",\"doc\":\"Whether the timeline is blocked or not\"}]}},\"doc\":\"Map of publication's timelines per store\"},{\"name\":\"descriptions\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Description\",\"doc\":\"Class that holds a the descriptions' texts for a Commercial Component and a locale\",\"fields\":[{\"name\":\"locale\",\"type\":\"string\",\"doc\":\"Locale ISO code\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Commercial Component's description name on the given locale\"},{\"name\":\"description\",\"type\":\"string\",\"doc\":\"DEPRECATED - Commercial Component's description text on the given locale\"},{\"name\":\"short_description\",\"type\":[\"null\",\"string\"],\"doc\":\"Commercial Component's short description text on the given locale\"},{\"name\":\"long_description\",\"type\":[\"null\",\"string\"],\"doc\":\"Commercial Component's long description text on the given locale\"}]}},\"doc\":\"Map of descriptions per locale\"},{\"name\":\"attributes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Attribute\",\"doc\":\"Class that holds a the attributes' texts for a Commercial Component and a locale\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Type of attribute\",\"symbols\":[\"TAG\",\"LABEL\"]},{\"name\":\"code\",\"type\":\"string\",\"doc\":\"Attribute's unique identifier\"},{\"name\":\"values\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"AttributeValue\",\"doc\":\"Class that holds a the attributes' values for an Attribute a locale\",\"fields\":[{\"name\":\"locale\",\"type\":\"string\",\"doc\":\"Attribute's locale ISO Code\"},{\"name\":\"value\",\"type\":\"string\",\"doc\":\"Attribute's value text\"}]}},\"doc\":\"Map of attribute values per locale\"}]}}},{\"name\":\"media\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Media\",\"doc\":\"Class that holds a information about a Media\",\"fields\":[{\"name\":\"data\",\"type\":\"string\",\"doc\":\"JSON with Media's data in String format\"}]}],\"doc\":\"Commercial Component's medias. This field will be allowed to be null until the corresponding team is integrated. Once this happens, the nullity will be removed\"}]},{\"type\":\"record\",\"name\":\"CCDeleted\",\"doc\":\"Class that holds the basic information of the Commercial Component that has been deleted\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"Commercial Component unique identifier\"},{\"name\":\"deleted_at\",\"type\":\"long\",\"doc\":\"Timestamp expressed in microseconds when the Commercial Component was deleted\",\"logicalType\":\"timestamp-micros\"}]}],\"doc\":\"Content of the message\"}],\"subject\":\"meccano.productandcatalog.cc.v2-value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CCChangesEnvelope> ENCODER =
      new BinaryMessageEncoder<CCChangesEnvelope>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CCChangesEnvelope> DECODER =
      new BinaryMessageDecoder<CCChangesEnvelope>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CCChangesEnvelope> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CCChangesEnvelope> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CCChangesEnvelope>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CCChangesEnvelope to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CCChangesEnvelope from a ByteBuffer. */
  public static CCChangesEnvelope fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Avro's metadata information. */
  @Deprecated public com.inditex.aqsw.pipe.v1.Metadata metadata;
  /** Content of the message */
  @Deprecated public java.lang.Object payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CCChangesEnvelope() {}

  /**
   * All-args constructor.
   * @param metadata Avro's metadata information.
   * @param payload Content of the message
   */
  public CCChangesEnvelope(com.inditex.aqsw.pipe.v1.Metadata metadata, java.lang.Object payload) {
    this.metadata = metadata;
    this.payload = payload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return metadata;
    case 1: return payload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: metadata = (com.inditex.aqsw.pipe.v1.Metadata)value$; break;
    case 1: payload = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'metadata' field.
   * @return Avro's metadata information.
   */
  public com.inditex.aqsw.pipe.v1.Metadata getMetadata() {
    return metadata;
  }

  /**
   * Sets the value of the 'metadata' field.
   * Avro's metadata information.
   * @param value the value to set.
   */
  public void setMetadata(com.inditex.aqsw.pipe.v1.Metadata value) {
    this.metadata = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return Content of the message
   */
  public java.lang.Object getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * Content of the message
   * @param value the value to set.
   */
  public void setPayload(java.lang.Object value) {
    this.payload = value;
  }

  /**
   * Creates a new CCChangesEnvelope RecordBuilder.
   * @return A new CCChangesEnvelope RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder newBuilder() {
    return new com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder();
  }

  /**
   * Creates a new CCChangesEnvelope RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CCChangesEnvelope RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder(other);
  }

  /**
   * Creates a new CCChangesEnvelope RecordBuilder by copying an existing CCChangesEnvelope instance.
   * @param other The existing instance to copy.
   * @return A new CCChangesEnvelope RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder(other);
  }

  /**
   * RecordBuilder for CCChangesEnvelope instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CCChangesEnvelope>
    implements org.apache.avro.data.RecordBuilder<CCChangesEnvelope> {

    /** Avro's metadata information. */
    private com.inditex.aqsw.pipe.v1.Metadata metadata;
    private com.inditex.aqsw.pipe.v1.Metadata.Builder metadataBuilder;
    /** Content of the message */
    private java.lang.Object payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.metadata)) {
        this.metadata = data().deepCopy(fields()[0].schema(), other.metadata);
        fieldSetFlags()[0] = true;
      }
      if (other.hasMetadataBuilder()) {
        this.metadataBuilder = com.inditex.aqsw.pipe.v1.Metadata.newBuilder(other.getMetadataBuilder());
      }
      if (isValidValue(fields()[1], other.payload)) {
        this.payload = data().deepCopy(fields()[1].schema(), other.payload);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CCChangesEnvelope instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.metadata)) {
        this.metadata = data().deepCopy(fields()[0].schema(), other.metadata);
        fieldSetFlags()[0] = true;
      }
      this.metadataBuilder = null;
      if (isValidValue(fields()[1], other.payload)) {
        this.payload = data().deepCopy(fields()[1].schema(), other.payload);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'metadata' field.
      * Avro's metadata information.
      * @return The value.
      */
    public com.inditex.aqsw.pipe.v1.Metadata getMetadata() {
      return metadata;
    }

    /**
      * Sets the value of the 'metadata' field.
      * Avro's metadata information.
      * @param value The value of 'metadata'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder setMetadata(com.inditex.aqsw.pipe.v1.Metadata value) {
      validate(fields()[0], value);
      this.metadataBuilder = null;
      this.metadata = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'metadata' field has been set.
      * Avro's metadata information.
      * @return True if the 'metadata' field has been set, false otherwise.
      */
    public boolean hasMetadata() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'metadata' field and creates one if it doesn't exist yet.
     * Avro's metadata information.
     * @return This builder.
     */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder getMetadataBuilder() {
      if (metadataBuilder == null) {
        if (hasMetadata()) {
          setMetadataBuilder(com.inditex.aqsw.pipe.v1.Metadata.newBuilder(metadata));
        } else {
          setMetadataBuilder(com.inditex.aqsw.pipe.v1.Metadata.newBuilder());
        }
      }
      return metadataBuilder;
    }

    /**
     * Sets the Builder instance for the 'metadata' field
     * Avro's metadata information.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder setMetadataBuilder(com.inditex.aqsw.pipe.v1.Metadata.Builder value) {
      clearMetadata();
      metadataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'metadata' field has an active Builder instance
     * Avro's metadata information.
     * @return True if the 'metadata' field has an active Builder instance
     */
    public boolean hasMetadataBuilder() {
      return metadataBuilder != null;
    }

    /**
      * Clears the value of the 'metadata' field.
      * Avro's metadata information.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder clearMetadata() {
      metadata = null;
      metadataBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * Content of the message
      * @return The value.
      */
    public java.lang.Object getPayload() {
      return payload;
    }

    /**
      * Sets the value of the 'payload' field.
      * Content of the message
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder setPayload(java.lang.Object value) {
      validate(fields()[1], value);
      this.payload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * Content of the message
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'payload' field.
      * Content of the message
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.CCChangesEnvelope.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CCChangesEnvelope build() {
      try {
        CCChangesEnvelope record = new CCChangesEnvelope();
        if (metadataBuilder != null) {
          record.metadata = this.metadataBuilder.build();
        } else {
          record.metadata = fieldSetFlags()[0] ? this.metadata : (com.inditex.aqsw.pipe.v1.Metadata) defaultValue(fields()[0]);
        }
        record.payload = fieldSetFlags()[1] ? this.payload : (java.lang.Object) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CCChangesEnvelope>
    WRITER$ = (org.apache.avro.io.DatumWriter<CCChangesEnvelope>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CCChangesEnvelope>
    READER$ = (org.apache.avro.io.DatumReader<CCChangesEnvelope>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
