/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprcc.api.avro.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds a the descriptions' texts for a Commercial Component and a locale */
@org.apache.avro.specific.AvroGenerated
public class Description extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4083418258185914976L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Description\",\"namespace\":\"com.inditex.mecc.mecprcc.api.avro.v1\",\"doc\":\"Class that holds a the descriptions' texts for a Commercial Component and a locale\",\"fields\":[{\"name\":\"locale\",\"type\":\"string\",\"doc\":\"Locale ISO code\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Commercial Component's description name on the given locale\"},{\"name\":\"description\",\"type\":\"string\",\"doc\":\"DEPRECATED - Commercial Component's description text on the given locale\"},{\"name\":\"short_description\",\"type\":[\"null\",\"string\"],\"doc\":\"Commercial Component's short description text on the given locale\"},{\"name\":\"long_description\",\"type\":[\"null\",\"string\"],\"doc\":\"Commercial Component's long description text on the given locale\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Description> ENCODER =
      new BinaryMessageEncoder<Description>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Description> DECODER =
      new BinaryMessageDecoder<Description>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Description> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Description> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Description>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Description to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Description from a ByteBuffer. */
  public static Description fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Locale ISO code */
  @Deprecated public java.lang.CharSequence locale;
  /** Commercial Component's description name on the given locale */
  @Deprecated public java.lang.CharSequence name;
  /** DEPRECATED - Commercial Component's description text on the given locale */
  @Deprecated public java.lang.CharSequence description;
  /** Commercial Component's short description text on the given locale */
  @Deprecated public java.lang.CharSequence short_description;
  /** Commercial Component's long description text on the given locale */
  @Deprecated public java.lang.CharSequence long_description;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Description() {}

  /**
   * All-args constructor.
   * @param locale Locale ISO code
   * @param name Commercial Component's description name on the given locale
   * @param description DEPRECATED - Commercial Component's description text on the given locale
   * @param short_description Commercial Component's short description text on the given locale
   * @param long_description Commercial Component's long description text on the given locale
   */
  public Description(java.lang.CharSequence locale, java.lang.CharSequence name, java.lang.CharSequence description, java.lang.CharSequence short_description, java.lang.CharSequence long_description) {
    this.locale = locale;
    this.name = name;
    this.description = description;
    this.short_description = short_description;
    this.long_description = long_description;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return locale;
    case 1: return name;
    case 2: return description;
    case 3: return short_description;
    case 4: return long_description;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: locale = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    case 3: short_description = (java.lang.CharSequence)value$; break;
    case 4: long_description = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'locale' field.
   * @return Locale ISO code
   */
  public java.lang.CharSequence getLocale() {
    return locale;
  }

  /**
   * Sets the value of the 'locale' field.
   * Locale ISO code
   * @param value the value to set.
   */
  public void setLocale(java.lang.CharSequence value) {
    this.locale = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Commercial Component's description name on the given locale
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Commercial Component's description name on the given locale
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return DEPRECATED - Commercial Component's description text on the given locale
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * DEPRECATED - Commercial Component's description text on the given locale
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'short_description' field.
   * @return Commercial Component's short description text on the given locale
   */
  public java.lang.CharSequence getShortDescription() {
    return short_description;
  }

  /**
   * Sets the value of the 'short_description' field.
   * Commercial Component's short description text on the given locale
   * @param value the value to set.
   */
  public void setShortDescription(java.lang.CharSequence value) {
    this.short_description = value;
  }

  /**
   * Gets the value of the 'long_description' field.
   * @return Commercial Component's long description text on the given locale
   */
  public java.lang.CharSequence getLongDescription() {
    return long_description;
  }

  /**
   * Sets the value of the 'long_description' field.
   * Commercial Component's long description text on the given locale
   * @param value the value to set.
   */
  public void setLongDescription(java.lang.CharSequence value) {
    this.long_description = value;
  }

  /**
   * Creates a new Description RecordBuilder.
   * @return A new Description RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder newBuilder() {
    return new com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder();
  }

  /**
   * Creates a new Description RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Description RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder(other);
  }

  /**
   * Creates a new Description RecordBuilder by copying an existing Description instance.
   * @param other The existing instance to copy.
   * @return A new Description RecordBuilder
   */
  public static com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder newBuilder(com.inditex.mecc.mecprcc.api.avro.v1.Description other) {
    return new com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder(other);
  }

  /**
   * RecordBuilder for Description instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Description>
    implements org.apache.avro.data.RecordBuilder<Description> {

    /** Locale ISO code */
    private java.lang.CharSequence locale;
    /** Commercial Component's description name on the given locale */
    private java.lang.CharSequence name;
    /** DEPRECATED - Commercial Component's description text on the given locale */
    private java.lang.CharSequence description;
    /** Commercial Component's short description text on the given locale */
    private java.lang.CharSequence short_description;
    /** Commercial Component's long description text on the given locale */
    private java.lang.CharSequence long_description;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.locale)) {
        this.locale = data().deepCopy(fields()[0].schema(), other.locale);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.short_description)) {
        this.short_description = data().deepCopy(fields()[3].schema(), other.short_description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.long_description)) {
        this.long_description = data().deepCopy(fields()[4].schema(), other.long_description);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Description instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprcc.api.avro.v1.Description other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.locale)) {
        this.locale = data().deepCopy(fields()[0].schema(), other.locale);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.short_description)) {
        this.short_description = data().deepCopy(fields()[3].schema(), other.short_description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.long_description)) {
        this.long_description = data().deepCopy(fields()[4].schema(), other.long_description);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'locale' field.
      * Locale ISO code
      * @return The value.
      */
    public java.lang.CharSequence getLocale() {
      return locale;
    }

    /**
      * Sets the value of the 'locale' field.
      * Locale ISO code
      * @param value The value of 'locale'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder setLocale(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.locale = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'locale' field has been set.
      * Locale ISO code
      * @return True if the 'locale' field has been set, false otherwise.
      */
    public boolean hasLocale() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'locale' field.
      * Locale ISO code
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder clearLocale() {
      locale = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Commercial Component's description name on the given locale
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * Commercial Component's description name on the given locale
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Commercial Component's description name on the given locale
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * Commercial Component's description name on the given locale
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * DEPRECATED - Commercial Component's description text on the given locale
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * DEPRECATED - Commercial Component's description text on the given locale
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * DEPRECATED - Commercial Component's description text on the given locale
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * DEPRECATED - Commercial Component's description text on the given locale
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'short_description' field.
      * Commercial Component's short description text on the given locale
      * @return The value.
      */
    public java.lang.CharSequence getShortDescription() {
      return short_description;
    }

    /**
      * Sets the value of the 'short_description' field.
      * Commercial Component's short description text on the given locale
      * @param value The value of 'short_description'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder setShortDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.short_description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'short_description' field has been set.
      * Commercial Component's short description text on the given locale
      * @return True if the 'short_description' field has been set, false otherwise.
      */
    public boolean hasShortDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'short_description' field.
      * Commercial Component's short description text on the given locale
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder clearShortDescription() {
      short_description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'long_description' field.
      * Commercial Component's long description text on the given locale
      * @return The value.
      */
    public java.lang.CharSequence getLongDescription() {
      return long_description;
    }

    /**
      * Sets the value of the 'long_description' field.
      * Commercial Component's long description text on the given locale
      * @param value The value of 'long_description'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder setLongDescription(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.long_description = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'long_description' field has been set.
      * Commercial Component's long description text on the given locale
      * @return True if the 'long_description' field has been set, false otherwise.
      */
    public boolean hasLongDescription() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'long_description' field.
      * Commercial Component's long description text on the given locale
      * @return This builder.
      */
    public com.inditex.mecc.mecprcc.api.avro.v1.Description.Builder clearLongDescription() {
      long_description = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Description build() {
      try {
        Description record = new Description();
        record.locale = fieldSetFlags()[0] ? this.locale : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.short_description = fieldSetFlags()[3] ? this.short_description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.long_description = fieldSetFlags()[4] ? this.long_description : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Description>
    WRITER$ = (org.apache.avro.io.DatumWriter<Description>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Description>
    READER$ = (org.apache.avro.io.DatumReader<Description>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
