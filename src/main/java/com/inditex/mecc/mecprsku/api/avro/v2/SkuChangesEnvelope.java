/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprsku.api.avro.v2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Avro envelope that holds sku changes. */
@org.apache.avro.specific.AvroGenerated
public class SkuChangesEnvelope extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8992911554324377076L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SkuChangesEnvelope\",\"namespace\":\"com.inditex.mecc.mecprsku.api.avro.v2\",\"doc\":\"Avro envelope that holds sku changes.\",\"fields\":[{\"name\":\"metadata\",\"type\":{\"type\":\"record\",\"name\":\"Metadata\",\"namespace\":\"com.inditex.aqsw.pipe.v1\",\"doc\":\"Message context attributes\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Unique name of the entity contained in the payload. I.e. 'cart'\"},{\"name\":\"domain\",\"type\":\"string\",\"doc\":\"Functional domain of the entity contained in the payload. I.e. 'purchase'\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"Version of the entity contained in the payload\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier of the the event\",\"default\":null},{\"name\":\"timestamp\",\"type\":\"string\",\"doc\":\"Timestamp of the occurrence of the business event\"},{\"name\":\"action\",\"type\":\"string\",\"doc\":\"Identifier of the action that generated the event. I.e. 'modified'\"},{\"name\":\"envelope\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Envelope\",\"doc\":\"Data relative to the message container used to envelop the event\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the message container used. I.e. 'pipe-event'\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"Specific container version\"}]}],\"doc\":\"Data relative to the message container used to envelop the event\",\"default\":null},{\"name\":\"classifiers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Classifier\",\"doc\":\"Defines the identity of a message using a set of keys extracted from the message payload\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the classifier in order to make comparisons between events with the same classifier defined\"},{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Ordered values that define the final classifier value\"}]}}],\"doc\":\"Set of classifiers to define different identities related with the event\",\"default\":null},{\"name\":\"extensions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Extensions\",\"namespace\":\"com.inditex.aqsw.pipe.v1.extensions\",\"doc\":\"Set of attributes for attaching common information to the event with analytic purposes\",\"fields\":[{\"name\":\"flows\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LifecycleExtension\",\"doc\":\"Information about the transition represented by the event in the life cycle of a process model or artifact\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Process model or artifact related to the event\"},{\"name\":\"domain\",\"type\":[\"null\",\"string\"],\"doc\":\"Domain of the process model or artifact related to the event\",\"default\":null},{\"name\":\"instance\",\"type\":[\"null\",\"string\"],\"doc\":\"Specific instance of the process model or artifact, if it's known\",\"default\":null},{\"name\":\"correlation\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Correlation identifiers between states of a flow. They will be defined for each functional case with the Data Architecture Analytics team.\",\"default\":null},{\"name\":\"transition\",\"type\":[\"null\",\"string\"],\"doc\":\"Lifecycle transition represented by the event\",\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"doc\":\"Specifies the state reached within the process model or the artifact lifecycle that triggered the event\",\"default\":null}]}}],\"doc\":\"Information about process models or artifacts the event is related to\",\"default\":null},{\"name\":\"geo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoExtension\",\"doc\":\"Information about geographical points and shapes related with an event\",\"fields\":[{\"name\":\"point\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoPoint\",\"doc\":\"Information about geographical points in WGS84 reference system\",\"fields\":[{\"name\":\"lon\",\"type\":\"double\",\"doc\":\"Longitude of the geopoint\"},{\"name\":\"lat\",\"type\":\"double\",\"doc\":\"Latitude of the geopoint\"}]}],\"doc\":\"Geographical point related to the event in WGS84 reference system\",\"default\":null},{\"name\":\"features\",\"type\":[\"null\",\"string\"],\"doc\":\"Geographical features related to the event in GeoJSON format\",\"default\":null}]}],\"doc\":\"Information about location related to the event\",\"default\":null}]}],\"doc\":\"Data relative to the business context that the message belongs to\",\"default\":null},{\"name\":\"relationships\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Relationship\",\"doc\":\"Represents a relationship between the message and a specific business entity\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Unique name of the entity\"},{\"name\":\"domain\",\"type\":\"string\",\"doc\":\"Functional domain. I.e. 'ECommerce'\"},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"doc\":\"Version of the entity definition\",\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"RelationshipType\",\"symbols\":[\"createdBy\",\"causes\",\"dependsOn\",\"hasA\",\"partOf\",\"memberOf\"]},\"doc\":\"Specific type of the relationship between the event and the business entity\"},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Specific data of the related entity at the moment the event is triggered\",\"default\":null}]}}],\"doc\":\"Relationship between the message and different business entities\",\"default\":null},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Context data of the message that does not belong in the definition of the main entity\",\"default\":null}]},\"doc\":\"Avro's metadata information.\"},{\"name\":\"payload\",\"type\":[{\"type\":\"record\",\"name\":\"SkuPriceChanged\",\"doc\":\"Class that holds price changes in a list of skus.\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store's unique identifier.\"},{\"name\":\"parent_id\",\"type\":\"string\",\"doc\":\"Unique identifier that allows an unequivocal parent-child relationship.\"},{\"name\":\"brand_id\",\"type\":\"long\",\"doc\":\"Brand identifier.\"},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Event's date in microseconds.\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"sku_offers\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SkuOffer\",\"doc\":\"Class that holds price information of a sku.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier\"},{\"name\":\"tariff\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Tariff\",\"doc\":\"Class that holds segment prices for a tariff.\",\"fields\":[{\"name\":\"tariff_id\",\"type\":\"long\",\"doc\":\"Tariff identifier\"},{\"name\":\"offer_segments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OfferSegment\",\"doc\":\"Class that holds the list of prices of the sku.\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"Starting period date in milliseconds since epoch time where the price becomes valid.\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"end_date\",\"type\":\"long\",\"doc\":\"Ending period date in milliseconds since epoch time where the price stops being valid.\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"kind\",\"type\":\"string\",\"doc\":\"Kind of segment: Regular, sales...\"},{\"name\":\"promotion_name\",\"type\":[\"null\",\"string\"],\"doc\":\"Optional name of the promotion associated to the price\",\"default\":null},{\"name\":\"offer_prices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OfferPrice\",\"doc\":\"Class that holds price information for a given period of time.\",\"fields\":[{\"name\":\"amount\",\"type\":\"long\",\"doc\":\"Current price during the current period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents).\"},{\"name\":\"compare_amount\",\"type\":[\"null\",\"long\"],\"doc\":\"Previous price of the product during a sales period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents). This is optional and used to compare previous and current prices during sales.\"},{\"name\":\"currency_iso\",\"type\":\"string\",\"doc\":\"Currency ISO 4217 code.\"}]}},\"doc\":\"List of prices of the current sku.\"}]}},\"doc\":\"List of offer segments for a tariff of a store.\"}]}},\"doc\":\"List of tariffs for sku-store.\"}]}},\"doc\":\"List of skus child offers of the current parent.\"}]},{\"type\":\"record\",\"name\":\"SkuAvailabilityChanged\",\"doc\":\"Class that holds availability changes in a list of skus.\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store's unique identifier.\"},{\"name\":\"parent_id\",\"type\":\"string\",\"doc\":\"Unique identifier that allows an unequivocal parent-child relationship.\"},{\"name\":\"brand_id\",\"type\":\"long\",\"doc\":\"Brand identifier.\"},{\"name\":","\"updated_at\",\"type\":\"long\",\"doc\":\"Event's date in microseconds.\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"sku_availabilities\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SkuAvailability\",\"doc\":\"Class that holds the availability information.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier\"},{\"name\":\"availability_info\",\"type\":{\"type\":\"record\",\"name\":\"AvailabilityInfo\",\"doc\":\"Class that holds the availability of a sku.\",\"fields\":[{\"name\":\"is_available\",\"type\":\"boolean\",\"doc\":\"Indicates if the sku is available to bid in the indicated store\"}]},\"doc\":\"The availability information of a sku\"},{\"name\":\"subscription_info\",\"type\":{\"type\":\"record\",\"name\":\"SubscriptionInfo\",\"doc\":\"Class that holds the subscription of a sku.\",\"fields\":[{\"name\":\"is_suscribable\",\"type\":\"boolean\",\"doc\":\"Indicates if the sku is subscribable to bid in the indicated store\"}]},\"doc\":\"The subscription information of a sku\"}]}},\"doc\":\"List of skus child availabilities and subscriptions of the current parent.\"}]},{\"type\":\"record\",\"name\":\"SkuExclusionChanged\",\"doc\":\"Class that holds exclusion changes in a list of skus.\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store's unique identifier.\"},{\"name\":\"parent_id\",\"type\":\"string\",\"doc\":\"Unique identifier that allows an unequivocal parent-child relationship.\"},{\"name\":\"brand_id\",\"type\":\"long\",\"doc\":\"Brand identifier.\"},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Event's date in microseconds.\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"sku_exclusions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SkuExclusion\",\"doc\":\"Class that holds the availability information.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier.\"},{\"name\":\"exclusion_info\",\"type\":{\"type\":\"record\",\"name\":\"ExclusionInfo\",\"doc\":\"Class that holds the exclusion of a sku.\",\"fields\":[{\"name\":\"is_excluded\",\"type\":\"boolean\",\"doc\":\"Indicates if the sku is excluded in the indicated store.\"},{\"name\":\"exclusion_type\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of exclusion.\"}]},\"doc\":\"The exclusion information of a sku.\"}]}},\"doc\":\"List of skus child exclusions of the current parent.\"}]},{\"type\":\"record\",\"name\":\"SkuPropertiesChanged\",\"doc\":\"Class that holds properties changes in a list of skus.\",\"fields\":[{\"name\":\"store_id\",\"type\":\"long\",\"doc\":\"Store's unique identifier.\"},{\"name\":\"parent_id\",\"type\":\"string\",\"doc\":\"Unique identifier that allows an unequivocal parent-child relationship.\"},{\"name\":\"brand_id\",\"type\":\"long\",\"doc\":\"Brand identifier.\"},{\"name\":\"updated_at\",\"type\":\"long\",\"doc\":\"Event's date in microseconds.\",\"logicalType\":\"timestamp-micros\"},{\"name\":\"sku_properties\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"SkuProperties\",\"doc\":\"Class that holds properties of a sku.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier\"},{\"name\":\"attributes\",\"type\":{\"type\":\"record\",\"name\":\"Attributes\",\"doc\":\"Class that holds attributes of a sku.\",\"fields\":[{\"name\":\"basic_attrs\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"List of basic attributes of the given SKU\"},{\"name\":\"valued_attrs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ValuedAttribute\",\"doc\":\"Class that holds the valued attribute information.\",\"fields\":[{\"name\":\"attr_code\",\"type\":\"string\",\"doc\":\"Key of the attribute\"},{\"name\":\"attr_type\",\"type\":\"string\",\"doc\":\"Primitive data type of the attribute\"},{\"name\":\"attr_value\",\"type\":\"string\",\"doc\":\"Value of the attribute\"}]}},\"doc\":\"List of valued attributes of the given SKU\"}]},\"doc\":\"Sku child attributes of the current parent.\"},{\"name\":\"measures\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Measure\",\"doc\":\"Class that holds the measure information.\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Measure type\"},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"Measure unit\"},{\"name\":\"value\",\"type\":\"float\",\"doc\":\"Value of the measure\"}]}},\"doc\":\"List of skus child measures of the current parent.\"}]}},\"doc\":\"List of properties of a sku.\"}]}],\"doc\":\"Content of the message.\"}],\"subject\":\"meccano.productandcatalog.sku.v7-value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SkuChangesEnvelope> ENCODER =
      new BinaryMessageEncoder<SkuChangesEnvelope>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SkuChangesEnvelope> DECODER =
      new BinaryMessageDecoder<SkuChangesEnvelope>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SkuChangesEnvelope> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SkuChangesEnvelope> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SkuChangesEnvelope>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SkuChangesEnvelope to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SkuChangesEnvelope from a ByteBuffer. */
  public static SkuChangesEnvelope fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Avro's metadata information. */
  @Deprecated public com.inditex.aqsw.pipe.v1.Metadata metadata;
  /** Content of the message. */
  @Deprecated public java.lang.Object payload;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SkuChangesEnvelope() {}

  /**
   * All-args constructor.
   * @param metadata Avro's metadata information.
   * @param payload Content of the message.
   */
  public SkuChangesEnvelope(com.inditex.aqsw.pipe.v1.Metadata metadata, java.lang.Object payload) {
    this.metadata = metadata;
    this.payload = payload;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return metadata;
    case 1: return payload;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: metadata = (com.inditex.aqsw.pipe.v1.Metadata)value$; break;
    case 1: payload = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'metadata' field.
   * @return Avro's metadata information.
   */
  public com.inditex.aqsw.pipe.v1.Metadata getMetadata() {
    return metadata;
  }

  /**
   * Sets the value of the 'metadata' field.
   * Avro's metadata information.
   * @param value the value to set.
   */
  public void setMetadata(com.inditex.aqsw.pipe.v1.Metadata value) {
    this.metadata = value;
  }

  /**
   * Gets the value of the 'payload' field.
   * @return Content of the message.
   */
  public java.lang.Object getPayload() {
    return payload;
  }

  /**
   * Sets the value of the 'payload' field.
   * Content of the message.
   * @param value the value to set.
   */
  public void setPayload(java.lang.Object value) {
    this.payload = value;
  }

  /**
   * Creates a new SkuChangesEnvelope RecordBuilder.
   * @return A new SkuChangesEnvelope RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder newBuilder() {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder();
  }

  /**
   * Creates a new SkuChangesEnvelope RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SkuChangesEnvelope RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder(other);
  }

  /**
   * Creates a new SkuChangesEnvelope RecordBuilder by copying an existing SkuChangesEnvelope instance.
   * @param other The existing instance to copy.
   * @return A new SkuChangesEnvelope RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder(other);
  }

  /**
   * RecordBuilder for SkuChangesEnvelope instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SkuChangesEnvelope>
    implements org.apache.avro.data.RecordBuilder<SkuChangesEnvelope> {

    /** Avro's metadata information. */
    private com.inditex.aqsw.pipe.v1.Metadata metadata;
    private com.inditex.aqsw.pipe.v1.Metadata.Builder metadataBuilder;
    /** Content of the message. */
    private java.lang.Object payload;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.metadata)) {
        this.metadata = data().deepCopy(fields()[0].schema(), other.metadata);
        fieldSetFlags()[0] = true;
      }
      if (other.hasMetadataBuilder()) {
        this.metadataBuilder = com.inditex.aqsw.pipe.v1.Metadata.newBuilder(other.getMetadataBuilder());
      }
      if (isValidValue(fields()[1], other.payload)) {
        this.payload = data().deepCopy(fields()[1].schema(), other.payload);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SkuChangesEnvelope instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.metadata)) {
        this.metadata = data().deepCopy(fields()[0].schema(), other.metadata);
        fieldSetFlags()[0] = true;
      }
      this.metadataBuilder = null;
      if (isValidValue(fields()[1], other.payload)) {
        this.payload = data().deepCopy(fields()[1].schema(), other.payload);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'metadata' field.
      * Avro's metadata information.
      * @return The value.
      */
    public com.inditex.aqsw.pipe.v1.Metadata getMetadata() {
      return metadata;
    }

    /**
      * Sets the value of the 'metadata' field.
      * Avro's metadata information.
      * @param value The value of 'metadata'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder setMetadata(com.inditex.aqsw.pipe.v1.Metadata value) {
      validate(fields()[0], value);
      this.metadataBuilder = null;
      this.metadata = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'metadata' field has been set.
      * Avro's metadata information.
      * @return True if the 'metadata' field has been set, false otherwise.
      */
    public boolean hasMetadata() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'metadata' field and creates one if it doesn't exist yet.
     * Avro's metadata information.
     * @return This builder.
     */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder getMetadataBuilder() {
      if (metadataBuilder == null) {
        if (hasMetadata()) {
          setMetadataBuilder(com.inditex.aqsw.pipe.v1.Metadata.newBuilder(metadata));
        } else {
          setMetadataBuilder(com.inditex.aqsw.pipe.v1.Metadata.newBuilder());
        }
      }
      return metadataBuilder;
    }

    /**
     * Sets the Builder instance for the 'metadata' field
     * Avro's metadata information.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder setMetadataBuilder(com.inditex.aqsw.pipe.v1.Metadata.Builder value) {
      clearMetadata();
      metadataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'metadata' field has an active Builder instance
     * Avro's metadata information.
     * @return True if the 'metadata' field has an active Builder instance
     */
    public boolean hasMetadataBuilder() {
      return metadataBuilder != null;
    }

    /**
      * Clears the value of the 'metadata' field.
      * Avro's metadata information.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder clearMetadata() {
      metadata = null;
      metadataBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'payload' field.
      * Content of the message.
      * @return The value.
      */
    public java.lang.Object getPayload() {
      return payload;
    }

    /**
      * Sets the value of the 'payload' field.
      * Content of the message.
      * @param value The value of 'payload'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder setPayload(java.lang.Object value) {
      validate(fields()[1], value);
      this.payload = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'payload' field has been set.
      * Content of the message.
      * @return True if the 'payload' field has been set, false otherwise.
      */
    public boolean hasPayload() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'payload' field.
      * Content of the message.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuChangesEnvelope.Builder clearPayload() {
      payload = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SkuChangesEnvelope build() {
      try {
        SkuChangesEnvelope record = new SkuChangesEnvelope();
        if (metadataBuilder != null) {
          record.metadata = this.metadataBuilder.build();
        } else {
          record.metadata = fieldSetFlags()[0] ? this.metadata : (com.inditex.aqsw.pipe.v1.Metadata) defaultValue(fields()[0]);
        }
        record.payload = fieldSetFlags()[1] ? this.payload : (java.lang.Object) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SkuChangesEnvelope>
    WRITER$ = (org.apache.avro.io.DatumWriter<SkuChangesEnvelope>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SkuChangesEnvelope>
    READER$ = (org.apache.avro.io.DatumReader<SkuChangesEnvelope>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
