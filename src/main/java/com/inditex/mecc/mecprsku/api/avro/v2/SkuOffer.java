/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprsku.api.avro.v2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds price information of a sku. */
@org.apache.avro.specific.AvroGenerated
public class SkuOffer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2935994449479330503L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SkuOffer\",\"namespace\":\"com.inditex.mecc.mecprsku.api.avro.v2\",\"doc\":\"Class that holds price information of a sku.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier\"},{\"name\":\"tariff\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Tariff\",\"doc\":\"Class that holds segment prices for a tariff.\",\"fields\":[{\"name\":\"tariff_id\",\"type\":\"long\",\"doc\":\"Tariff identifier\"},{\"name\":\"offer_segments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OfferSegment\",\"doc\":\"Class that holds the list of prices of the sku.\",\"fields\":[{\"name\":\"start_date\",\"type\":\"long\",\"doc\":\"Starting period date in milliseconds since epoch time where the price becomes valid.\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"end_date\",\"type\":\"long\",\"doc\":\"Ending period date in milliseconds since epoch time where the price stops being valid.\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"kind\",\"type\":\"string\",\"doc\":\"Kind of segment: Regular, sales...\"},{\"name\":\"promotion_name\",\"type\":[\"null\",\"string\"],\"doc\":\"Optional name of the promotion associated to the price\",\"default\":null},{\"name\":\"offer_prices\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OfferPrice\",\"doc\":\"Class that holds price information for a given period of time.\",\"fields\":[{\"name\":\"amount\",\"type\":\"long\",\"doc\":\"Current price during the current period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents).\"},{\"name\":\"compare_amount\",\"type\":[\"null\",\"long\"],\"doc\":\"Previous price of the product during a sales period expressed in the smallest legal unit available for the price currency (e.g. prices are expressed in euro's cents). This is optional and used to compare previous and current prices during sales.\"},{\"name\":\"currency_iso\",\"type\":\"string\",\"doc\":\"Currency ISO 4217 code.\"}]}},\"doc\":\"List of prices of the current sku.\"}]}},\"doc\":\"List of offer segments for a tariff of a store.\"}]}},\"doc\":\"List of tariffs for sku-store.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SkuOffer> ENCODER =
      new BinaryMessageEncoder<SkuOffer>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SkuOffer> DECODER =
      new BinaryMessageDecoder<SkuOffer>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SkuOffer> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SkuOffer> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SkuOffer>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SkuOffer to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SkuOffer from a ByteBuffer. */
  public static SkuOffer fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Sku's identifier */
  @Deprecated public java.lang.CharSequence sku_reference;
  /** List of tariffs for sku-store. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> tariff;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SkuOffer() {}

  /**
   * All-args constructor.
   * @param sku_reference Sku's identifier
   * @param tariff List of tariffs for sku-store.
   */
  public SkuOffer(java.lang.CharSequence sku_reference, java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> tariff) {
    this.sku_reference = sku_reference;
    this.tariff = tariff;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sku_reference;
    case 1: return tariff;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sku_reference = (java.lang.CharSequence)value$; break;
    case 1: tariff = (java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sku_reference' field.
   * @return Sku's identifier
   */
  public java.lang.CharSequence getSkuReference() {
    return sku_reference;
  }

  /**
   * Sets the value of the 'sku_reference' field.
   * Sku's identifier
   * @param value the value to set.
   */
  public void setSkuReference(java.lang.CharSequence value) {
    this.sku_reference = value;
  }

  /**
   * Gets the value of the 'tariff' field.
   * @return List of tariffs for sku-store.
   */
  public java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> getTariff() {
    return tariff;
  }

  /**
   * Sets the value of the 'tariff' field.
   * List of tariffs for sku-store.
   * @param value the value to set.
   */
  public void setTariff(java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> value) {
    this.tariff = value;
  }

  /**
   * Creates a new SkuOffer RecordBuilder.
   * @return A new SkuOffer RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder newBuilder() {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder();
  }

  /**
   * Creates a new SkuOffer RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SkuOffer RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder(other);
  }

  /**
   * Creates a new SkuOffer RecordBuilder by copying an existing SkuOffer instance.
   * @param other The existing instance to copy.
   * @return A new SkuOffer RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder(other);
  }

  /**
   * RecordBuilder for SkuOffer instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SkuOffer>
    implements org.apache.avro.data.RecordBuilder<SkuOffer> {

    /** Sku's identifier */
    private java.lang.CharSequence sku_reference;
    /** List of tariffs for sku-store. */
    private java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> tariff;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sku_reference)) {
        this.sku_reference = data().deepCopy(fields()[0].schema(), other.sku_reference);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tariff)) {
        this.tariff = data().deepCopy(fields()[1].schema(), other.tariff);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SkuOffer instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sku_reference)) {
        this.sku_reference = data().deepCopy(fields()[0].schema(), other.sku_reference);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tariff)) {
        this.tariff = data().deepCopy(fields()[1].schema(), other.tariff);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'sku_reference' field.
      * Sku's identifier
      * @return The value.
      */
    public java.lang.CharSequence getSkuReference() {
      return sku_reference;
    }

    /**
      * Sets the value of the 'sku_reference' field.
      * Sku's identifier
      * @param value The value of 'sku_reference'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder setSkuReference(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.sku_reference = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sku_reference' field has been set.
      * Sku's identifier
      * @return True if the 'sku_reference' field has been set, false otherwise.
      */
    public boolean hasSkuReference() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sku_reference' field.
      * Sku's identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder clearSkuReference() {
      sku_reference = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tariff' field.
      * List of tariffs for sku-store.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> getTariff() {
      return tariff;
    }

    /**
      * Sets the value of the 'tariff' field.
      * List of tariffs for sku-store.
      * @param value The value of 'tariff'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder setTariff(java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff> value) {
      validate(fields()[1], value);
      this.tariff = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tariff' field has been set.
      * List of tariffs for sku-store.
      * @return True if the 'tariff' field has been set, false otherwise.
      */
    public boolean hasTariff() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tariff' field.
      * List of tariffs for sku-store.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuOffer.Builder clearTariff() {
      tariff = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SkuOffer build() {
      try {
        SkuOffer record = new SkuOffer();
        record.sku_reference = fieldSetFlags()[0] ? this.sku_reference : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.tariff = fieldSetFlags()[1] ? this.tariff : (java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Tariff>) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SkuOffer>
    WRITER$ = (org.apache.avro.io.DatumWriter<SkuOffer>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SkuOffer>
    READER$ = (org.apache.avro.io.DatumReader<SkuOffer>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
