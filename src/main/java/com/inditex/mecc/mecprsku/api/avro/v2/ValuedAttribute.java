/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprsku.api.avro.v2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds the valued attribute information. */
@org.apache.avro.specific.AvroGenerated
public class ValuedAttribute extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7531310368524263261L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ValuedAttribute\",\"namespace\":\"com.inditex.mecc.mecprsku.api.avro.v2\",\"doc\":\"Class that holds the valued attribute information.\",\"fields\":[{\"name\":\"attr_code\",\"type\":\"string\",\"doc\":\"Key of the attribute\"},{\"name\":\"attr_type\",\"type\":\"string\",\"doc\":\"Primitive data type of the attribute\"},{\"name\":\"attr_value\",\"type\":\"string\",\"doc\":\"Value of the attribute\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ValuedAttribute> ENCODER =
      new BinaryMessageEncoder<ValuedAttribute>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ValuedAttribute> DECODER =
      new BinaryMessageDecoder<ValuedAttribute>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ValuedAttribute> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ValuedAttribute> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ValuedAttribute>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ValuedAttribute to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ValuedAttribute from a ByteBuffer. */
  public static ValuedAttribute fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Key of the attribute */
  @Deprecated public java.lang.CharSequence attr_code;
  /** Primitive data type of the attribute */
  @Deprecated public java.lang.CharSequence attr_type;
  /** Value of the attribute */
  @Deprecated public java.lang.CharSequence attr_value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ValuedAttribute() {}

  /**
   * All-args constructor.
   * @param attr_code Key of the attribute
   * @param attr_type Primitive data type of the attribute
   * @param attr_value Value of the attribute
   */
  public ValuedAttribute(java.lang.CharSequence attr_code, java.lang.CharSequence attr_type, java.lang.CharSequence attr_value) {
    this.attr_code = attr_code;
    this.attr_type = attr_type;
    this.attr_value = attr_value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return attr_code;
    case 1: return attr_type;
    case 2: return attr_value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: attr_code = (java.lang.CharSequence)value$; break;
    case 1: attr_type = (java.lang.CharSequence)value$; break;
    case 2: attr_value = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'attr_code' field.
   * @return Key of the attribute
   */
  public java.lang.CharSequence getAttrCode() {
    return attr_code;
  }

  /**
   * Sets the value of the 'attr_code' field.
   * Key of the attribute
   * @param value the value to set.
   */
  public void setAttrCode(java.lang.CharSequence value) {
    this.attr_code = value;
  }

  /**
   * Gets the value of the 'attr_type' field.
   * @return Primitive data type of the attribute
   */
  public java.lang.CharSequence getAttrType() {
    return attr_type;
  }

  /**
   * Sets the value of the 'attr_type' field.
   * Primitive data type of the attribute
   * @param value the value to set.
   */
  public void setAttrType(java.lang.CharSequence value) {
    this.attr_type = value;
  }

  /**
   * Gets the value of the 'attr_value' field.
   * @return Value of the attribute
   */
  public java.lang.CharSequence getAttrValue() {
    return attr_value;
  }

  /**
   * Sets the value of the 'attr_value' field.
   * Value of the attribute
   * @param value the value to set.
   */
  public void setAttrValue(java.lang.CharSequence value) {
    this.attr_value = value;
  }

  /**
   * Creates a new ValuedAttribute RecordBuilder.
   * @return A new ValuedAttribute RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder newBuilder() {
    return new com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder();
  }

  /**
   * Creates a new ValuedAttribute RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ValuedAttribute RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder(other);
  }

  /**
   * Creates a new ValuedAttribute RecordBuilder by copying an existing ValuedAttribute instance.
   * @param other The existing instance to copy.
   * @return A new ValuedAttribute RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder(other);
  }

  /**
   * RecordBuilder for ValuedAttribute instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ValuedAttribute>
    implements org.apache.avro.data.RecordBuilder<ValuedAttribute> {

    /** Key of the attribute */
    private java.lang.CharSequence attr_code;
    /** Primitive data type of the attribute */
    private java.lang.CharSequence attr_type;
    /** Value of the attribute */
    private java.lang.CharSequence attr_value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.attr_code)) {
        this.attr_code = data().deepCopy(fields()[0].schema(), other.attr_code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attr_type)) {
        this.attr_type = data().deepCopy(fields()[1].schema(), other.attr_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attr_value)) {
        this.attr_value = data().deepCopy(fields()[2].schema(), other.attr_value);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ValuedAttribute instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.attr_code)) {
        this.attr_code = data().deepCopy(fields()[0].schema(), other.attr_code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attr_type)) {
        this.attr_type = data().deepCopy(fields()[1].schema(), other.attr_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attr_value)) {
        this.attr_value = data().deepCopy(fields()[2].schema(), other.attr_value);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'attr_code' field.
      * Key of the attribute
      * @return The value.
      */
    public java.lang.CharSequence getAttrCode() {
      return attr_code;
    }

    /**
      * Sets the value of the 'attr_code' field.
      * Key of the attribute
      * @param value The value of 'attr_code'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder setAttrCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.attr_code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'attr_code' field has been set.
      * Key of the attribute
      * @return True if the 'attr_code' field has been set, false otherwise.
      */
    public boolean hasAttrCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'attr_code' field.
      * Key of the attribute
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder clearAttrCode() {
      attr_code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attr_type' field.
      * Primitive data type of the attribute
      * @return The value.
      */
    public java.lang.CharSequence getAttrType() {
      return attr_type;
    }

    /**
      * Sets the value of the 'attr_type' field.
      * Primitive data type of the attribute
      * @param value The value of 'attr_type'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder setAttrType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.attr_type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attr_type' field has been set.
      * Primitive data type of the attribute
      * @return True if the 'attr_type' field has been set, false otherwise.
      */
    public boolean hasAttrType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'attr_type' field.
      * Primitive data type of the attribute
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder clearAttrType() {
      attr_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'attr_value' field.
      * Value of the attribute
      * @return The value.
      */
    public java.lang.CharSequence getAttrValue() {
      return attr_value;
    }

    /**
      * Sets the value of the 'attr_value' field.
      * Value of the attribute
      * @param value The value of 'attr_value'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder setAttrValue(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.attr_value = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'attr_value' field has been set.
      * Value of the attribute
      * @return True if the 'attr_value' field has been set, false otherwise.
      */
    public boolean hasAttrValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'attr_value' field.
      * Value of the attribute
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.ValuedAttribute.Builder clearAttrValue() {
      attr_value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ValuedAttribute build() {
      try {
        ValuedAttribute record = new ValuedAttribute();
        record.attr_code = fieldSetFlags()[0] ? this.attr_code : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.attr_type = fieldSetFlags()[1] ? this.attr_type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.attr_value = fieldSetFlags()[2] ? this.attr_value : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ValuedAttribute>
    WRITER$ = (org.apache.avro.io.DatumWriter<ValuedAttribute>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ValuedAttribute>
    READER$ = (org.apache.avro.io.DatumReader<ValuedAttribute>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
