/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprsku.api.avro.v2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds properties of a sku. */
@org.apache.avro.specific.AvroGenerated
public class SkuProperties extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2752088206030164773L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SkuProperties\",\"namespace\":\"com.inditex.mecc.mecprsku.api.avro.v2\",\"doc\":\"Class that holds properties of a sku.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier\"},{\"name\":\"attributes\",\"type\":{\"type\":\"record\",\"name\":\"Attributes\",\"doc\":\"Class that holds attributes of a sku.\",\"fields\":[{\"name\":\"basic_attrs\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"List of basic attributes of the given SKU\"},{\"name\":\"valued_attrs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ValuedAttribute\",\"doc\":\"Class that holds the valued attribute information.\",\"fields\":[{\"name\":\"attr_code\",\"type\":\"string\",\"doc\":\"Key of the attribute\"},{\"name\":\"attr_type\",\"type\":\"string\",\"doc\":\"Primitive data type of the attribute\"},{\"name\":\"attr_value\",\"type\":\"string\",\"doc\":\"Value of the attribute\"}]}},\"doc\":\"List of valued attributes of the given SKU\"}]},\"doc\":\"Sku child attributes of the current parent.\"},{\"name\":\"measures\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Measure\",\"doc\":\"Class that holds the measure information.\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Measure type\"},{\"name\":\"unit\",\"type\":\"string\",\"doc\":\"Measure unit\"},{\"name\":\"value\",\"type\":\"float\",\"doc\":\"Value of the measure\"}]}},\"doc\":\"List of skus child measures of the current parent.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SkuProperties> ENCODER =
      new BinaryMessageEncoder<SkuProperties>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SkuProperties> DECODER =
      new BinaryMessageDecoder<SkuProperties>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SkuProperties> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SkuProperties> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SkuProperties>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SkuProperties to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SkuProperties from a ByteBuffer. */
  public static SkuProperties fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Sku's identifier */
  @Deprecated public java.lang.CharSequence sku_reference;
  /** Sku child attributes of the current parent. */
  @Deprecated public com.inditex.mecc.mecprsku.api.avro.v2.Attributes attributes;
  /** List of skus child measures of the current parent. */
  @Deprecated public java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> measures;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SkuProperties() {}

  /**
   * All-args constructor.
   * @param sku_reference Sku's identifier
   * @param attributes Sku child attributes of the current parent.
   * @param measures List of skus child measures of the current parent.
   */
  public SkuProperties(java.lang.CharSequence sku_reference, com.inditex.mecc.mecprsku.api.avro.v2.Attributes attributes, java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> measures) {
    this.sku_reference = sku_reference;
    this.attributes = attributes;
    this.measures = measures;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sku_reference;
    case 1: return attributes;
    case 2: return measures;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sku_reference = (java.lang.CharSequence)value$; break;
    case 1: attributes = (com.inditex.mecc.mecprsku.api.avro.v2.Attributes)value$; break;
    case 2: measures = (java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sku_reference' field.
   * @return Sku's identifier
   */
  public java.lang.CharSequence getSkuReference() {
    return sku_reference;
  }

  /**
   * Sets the value of the 'sku_reference' field.
   * Sku's identifier
   * @param value the value to set.
   */
  public void setSkuReference(java.lang.CharSequence value) {
    this.sku_reference = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   * @return Sku child attributes of the current parent.
   */
  public com.inditex.mecc.mecprsku.api.avro.v2.Attributes getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * Sku child attributes of the current parent.
   * @param value the value to set.
   */
  public void setAttributes(com.inditex.mecc.mecprsku.api.avro.v2.Attributes value) {
    this.attributes = value;
  }

  /**
   * Gets the value of the 'measures' field.
   * @return List of skus child measures of the current parent.
   */
  public java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> getMeasures() {
    return measures;
  }

  /**
   * Sets the value of the 'measures' field.
   * List of skus child measures of the current parent.
   * @param value the value to set.
   */
  public void setMeasures(java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> value) {
    this.measures = value;
  }

  /**
   * Creates a new SkuProperties RecordBuilder.
   * @return A new SkuProperties RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder newBuilder() {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder();
  }

  /**
   * Creates a new SkuProperties RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SkuProperties RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder(other);
  }

  /**
   * Creates a new SkuProperties RecordBuilder by copying an existing SkuProperties instance.
   * @param other The existing instance to copy.
   * @return A new SkuProperties RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder(other);
  }

  /**
   * RecordBuilder for SkuProperties instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SkuProperties>
    implements org.apache.avro.data.RecordBuilder<SkuProperties> {

    /** Sku's identifier */
    private java.lang.CharSequence sku_reference;
    /** Sku child attributes of the current parent. */
    private com.inditex.mecc.mecprsku.api.avro.v2.Attributes attributes;
    private com.inditex.mecc.mecprsku.api.avro.v2.Attributes.Builder attributesBuilder;
    /** List of skus child measures of the current parent. */
    private java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> measures;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sku_reference)) {
        this.sku_reference = data().deepCopy(fields()[0].schema(), other.sku_reference);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      if (other.hasAttributesBuilder()) {
        this.attributesBuilder = com.inditex.mecc.mecprsku.api.avro.v2.Attributes.newBuilder(other.getAttributesBuilder());
      }
      if (isValidValue(fields()[2], other.measures)) {
        this.measures = data().deepCopy(fields()[2].schema(), other.measures);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SkuProperties instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sku_reference)) {
        this.sku_reference = data().deepCopy(fields()[0].schema(), other.sku_reference);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attributes)) {
        this.attributes = data().deepCopy(fields()[1].schema(), other.attributes);
        fieldSetFlags()[1] = true;
      }
      this.attributesBuilder = null;
      if (isValidValue(fields()[2], other.measures)) {
        this.measures = data().deepCopy(fields()[2].schema(), other.measures);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'sku_reference' field.
      * Sku's identifier
      * @return The value.
      */
    public java.lang.CharSequence getSkuReference() {
      return sku_reference;
    }

    /**
      * Sets the value of the 'sku_reference' field.
      * Sku's identifier
      * @param value The value of 'sku_reference'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder setSkuReference(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.sku_reference = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sku_reference' field has been set.
      * Sku's identifier
      * @return True if the 'sku_reference' field has been set, false otherwise.
      */
    public boolean hasSkuReference() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sku_reference' field.
      * Sku's identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder clearSkuReference() {
      sku_reference = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributes' field.
      * Sku child attributes of the current parent.
      * @return The value.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.Attributes getAttributes() {
      return attributes;
    }

    /**
      * Sets the value of the 'attributes' field.
      * Sku child attributes of the current parent.
      * @param value The value of 'attributes'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder setAttributes(com.inditex.mecc.mecprsku.api.avro.v2.Attributes value) {
      validate(fields()[1], value);
      this.attributesBuilder = null;
      this.attributes = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attributes' field has been set.
      * Sku child attributes of the current parent.
      * @return True if the 'attributes' field has been set, false otherwise.
      */
    public boolean hasAttributes() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'attributes' field and creates one if it doesn't exist yet.
     * Sku child attributes of the current parent.
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.Attributes.Builder getAttributesBuilder() {
      if (attributesBuilder == null) {
        if (hasAttributes()) {
          setAttributesBuilder(com.inditex.mecc.mecprsku.api.avro.v2.Attributes.newBuilder(attributes));
        } else {
          setAttributesBuilder(com.inditex.mecc.mecprsku.api.avro.v2.Attributes.newBuilder());
        }
      }
      return attributesBuilder;
    }

    /**
     * Sets the Builder instance for the 'attributes' field
     * Sku child attributes of the current parent.
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder setAttributesBuilder(com.inditex.mecc.mecprsku.api.avro.v2.Attributes.Builder value) {
      clearAttributes();
      attributesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'attributes' field has an active Builder instance
     * Sku child attributes of the current parent.
     * @return True if the 'attributes' field has an active Builder instance
     */
    public boolean hasAttributesBuilder() {
      return attributesBuilder != null;
    }

    /**
      * Clears the value of the 'attributes' field.
      * Sku child attributes of the current parent.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder clearAttributes() {
      attributes = null;
      attributesBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'measures' field.
      * List of skus child measures of the current parent.
      * @return The value.
      */
    public java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> getMeasures() {
      return measures;
    }

    /**
      * Sets the value of the 'measures' field.
      * List of skus child measures of the current parent.
      * @param value The value of 'measures'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder setMeasures(java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure> value) {
      validate(fields()[2], value);
      this.measures = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'measures' field has been set.
      * List of skus child measures of the current parent.
      * @return True if the 'measures' field has been set, false otherwise.
      */
    public boolean hasMeasures() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'measures' field.
      * List of skus child measures of the current parent.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuProperties.Builder clearMeasures() {
      measures = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SkuProperties build() {
      try {
        SkuProperties record = new SkuProperties();
        record.sku_reference = fieldSetFlags()[0] ? this.sku_reference : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (attributesBuilder != null) {
          record.attributes = this.attributesBuilder.build();
        } else {
          record.attributes = fieldSetFlags()[1] ? this.attributes : (com.inditex.mecc.mecprsku.api.avro.v2.Attributes) defaultValue(fields()[1]);
        }
        record.measures = fieldSetFlags()[2] ? this.measures : (java.util.List<com.inditex.mecc.mecprsku.api.avro.v2.Measure>) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SkuProperties>
    WRITER$ = (org.apache.avro.io.DatumWriter<SkuProperties>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SkuProperties>
    READER$ = (org.apache.avro.io.DatumReader<SkuProperties>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
