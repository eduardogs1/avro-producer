/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprsku.api.avro.v2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds the subscription of a sku. */
@org.apache.avro.specific.AvroGenerated
public class SubscriptionInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4596130750390612170L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SubscriptionInfo\",\"namespace\":\"com.inditex.mecc.mecprsku.api.avro.v2\",\"doc\":\"Class that holds the subscription of a sku.\",\"fields\":[{\"name\":\"is_suscribable\",\"type\":\"boolean\",\"doc\":\"Indicates if the sku is subscribable to bid in the indicated store\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SubscriptionInfo> ENCODER =
      new BinaryMessageEncoder<SubscriptionInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SubscriptionInfo> DECODER =
      new BinaryMessageDecoder<SubscriptionInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SubscriptionInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SubscriptionInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SubscriptionInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SubscriptionInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SubscriptionInfo from a ByteBuffer. */
  public static SubscriptionInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Indicates if the sku is subscribable to bid in the indicated store */
  @Deprecated public boolean is_suscribable;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SubscriptionInfo() {}

  /**
   * All-args constructor.
   * @param is_suscribable Indicates if the sku is subscribable to bid in the indicated store
   */
  public SubscriptionInfo(java.lang.Boolean is_suscribable) {
    this.is_suscribable = is_suscribable;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return is_suscribable;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: is_suscribable = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'is_suscribable' field.
   * @return Indicates if the sku is subscribable to bid in the indicated store
   */
  public java.lang.Boolean getIsSuscribable() {
    return is_suscribable;
  }

  /**
   * Sets the value of the 'is_suscribable' field.
   * Indicates if the sku is subscribable to bid in the indicated store
   * @param value the value to set.
   */
  public void setIsSuscribable(java.lang.Boolean value) {
    this.is_suscribable = value;
  }

  /**
   * Creates a new SubscriptionInfo RecordBuilder.
   * @return A new SubscriptionInfo RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder newBuilder() {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder();
  }

  /**
   * Creates a new SubscriptionInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SubscriptionInfo RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder(other);
  }

  /**
   * Creates a new SubscriptionInfo RecordBuilder by copying an existing SubscriptionInfo instance.
   * @param other The existing instance to copy.
   * @return A new SubscriptionInfo RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder(other);
  }

  /**
   * RecordBuilder for SubscriptionInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SubscriptionInfo>
    implements org.apache.avro.data.RecordBuilder<SubscriptionInfo> {

    /** Indicates if the sku is subscribable to bid in the indicated store */
    private boolean is_suscribable;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.is_suscribable)) {
        this.is_suscribable = data().deepCopy(fields()[0].schema(), other.is_suscribable);
        fieldSetFlags()[0] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SubscriptionInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.is_suscribable)) {
        this.is_suscribable = data().deepCopy(fields()[0].schema(), other.is_suscribable);
        fieldSetFlags()[0] = true;
      }
    }

    /**
      * Gets the value of the 'is_suscribable' field.
      * Indicates if the sku is subscribable to bid in the indicated store
      * @return The value.
      */
    public java.lang.Boolean getIsSuscribable() {
      return is_suscribable;
    }

    /**
      * Sets the value of the 'is_suscribable' field.
      * Indicates if the sku is subscribable to bid in the indicated store
      * @param value The value of 'is_suscribable'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder setIsSuscribable(boolean value) {
      validate(fields()[0], value);
      this.is_suscribable = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'is_suscribable' field has been set.
      * Indicates if the sku is subscribable to bid in the indicated store
      * @return True if the 'is_suscribable' field has been set, false otherwise.
      */
    public boolean hasIsSuscribable() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'is_suscribable' field.
      * Indicates if the sku is subscribable to bid in the indicated store
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder clearIsSuscribable() {
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SubscriptionInfo build() {
      try {
        SubscriptionInfo record = new SubscriptionInfo();
        record.is_suscribable = fieldSetFlags()[0] ? this.is_suscribable : (java.lang.Boolean) defaultValue(fields()[0]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SubscriptionInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<SubscriptionInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SubscriptionInfo>
    READER$ = (org.apache.avro.io.DatumReader<SubscriptionInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
