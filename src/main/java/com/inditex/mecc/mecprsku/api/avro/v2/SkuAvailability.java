/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.mecc.mecprsku.api.avro.v2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Class that holds the availability information. */
@org.apache.avro.specific.AvroGenerated
public class SkuAvailability extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5171657396722178817L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SkuAvailability\",\"namespace\":\"com.inditex.mecc.mecprsku.api.avro.v2\",\"doc\":\"Class that holds the availability information.\",\"fields\":[{\"name\":\"sku_reference\",\"type\":\"string\",\"doc\":\"Sku's identifier\"},{\"name\":\"availability_info\",\"type\":{\"type\":\"record\",\"name\":\"AvailabilityInfo\",\"doc\":\"Class that holds the availability of a sku.\",\"fields\":[{\"name\":\"is_available\",\"type\":\"boolean\",\"doc\":\"Indicates if the sku is available to bid in the indicated store\"}]},\"doc\":\"The availability information of a sku\"},{\"name\":\"subscription_info\",\"type\":{\"type\":\"record\",\"name\":\"SubscriptionInfo\",\"doc\":\"Class that holds the subscription of a sku.\",\"fields\":[{\"name\":\"is_suscribable\",\"type\":\"boolean\",\"doc\":\"Indicates if the sku is subscribable to bid in the indicated store\"}]},\"doc\":\"The subscription information of a sku\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SkuAvailability> ENCODER =
      new BinaryMessageEncoder<SkuAvailability>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SkuAvailability> DECODER =
      new BinaryMessageDecoder<SkuAvailability>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SkuAvailability> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SkuAvailability> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SkuAvailability>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SkuAvailability to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SkuAvailability from a ByteBuffer. */
  public static SkuAvailability fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Sku's identifier */
  @Deprecated public java.lang.CharSequence sku_reference;
  /** The availability information of a sku */
  @Deprecated public com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo availability_info;
  /** The subscription information of a sku */
  @Deprecated public com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo subscription_info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SkuAvailability() {}

  /**
   * All-args constructor.
   * @param sku_reference Sku's identifier
   * @param availability_info The availability information of a sku
   * @param subscription_info The subscription information of a sku
   */
  public SkuAvailability(java.lang.CharSequence sku_reference, com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo availability_info, com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo subscription_info) {
    this.sku_reference = sku_reference;
    this.availability_info = availability_info;
    this.subscription_info = subscription_info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sku_reference;
    case 1: return availability_info;
    case 2: return subscription_info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sku_reference = (java.lang.CharSequence)value$; break;
    case 1: availability_info = (com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo)value$; break;
    case 2: subscription_info = (com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sku_reference' field.
   * @return Sku's identifier
   */
  public java.lang.CharSequence getSkuReference() {
    return sku_reference;
  }

  /**
   * Sets the value of the 'sku_reference' field.
   * Sku's identifier
   * @param value the value to set.
   */
  public void setSkuReference(java.lang.CharSequence value) {
    this.sku_reference = value;
  }

  /**
   * Gets the value of the 'availability_info' field.
   * @return The availability information of a sku
   */
  public com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo getAvailabilityInfo() {
    return availability_info;
  }

  /**
   * Sets the value of the 'availability_info' field.
   * The availability information of a sku
   * @param value the value to set.
   */
  public void setAvailabilityInfo(com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo value) {
    this.availability_info = value;
  }

  /**
   * Gets the value of the 'subscription_info' field.
   * @return The subscription information of a sku
   */
  public com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo getSubscriptionInfo() {
    return subscription_info;
  }

  /**
   * Sets the value of the 'subscription_info' field.
   * The subscription information of a sku
   * @param value the value to set.
   */
  public void setSubscriptionInfo(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo value) {
    this.subscription_info = value;
  }

  /**
   * Creates a new SkuAvailability RecordBuilder.
   * @return A new SkuAvailability RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder newBuilder() {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder();
  }

  /**
   * Creates a new SkuAvailability RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SkuAvailability RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder(other);
  }

  /**
   * Creates a new SkuAvailability RecordBuilder by copying an existing SkuAvailability instance.
   * @param other The existing instance to copy.
   * @return A new SkuAvailability RecordBuilder
   */
  public static com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder newBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability other) {
    return new com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder(other);
  }

  /**
   * RecordBuilder for SkuAvailability instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SkuAvailability>
    implements org.apache.avro.data.RecordBuilder<SkuAvailability> {

    /** Sku's identifier */
    private java.lang.CharSequence sku_reference;
    /** The availability information of a sku */
    private com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo availability_info;
    private com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo.Builder availability_infoBuilder;
    /** The subscription information of a sku */
    private com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo subscription_info;
    private com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder subscription_infoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sku_reference)) {
        this.sku_reference = data().deepCopy(fields()[0].schema(), other.sku_reference);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.availability_info)) {
        this.availability_info = data().deepCopy(fields()[1].schema(), other.availability_info);
        fieldSetFlags()[1] = true;
      }
      if (other.hasAvailabilityInfoBuilder()) {
        this.availability_infoBuilder = com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo.newBuilder(other.getAvailabilityInfoBuilder());
      }
      if (isValidValue(fields()[2], other.subscription_info)) {
        this.subscription_info = data().deepCopy(fields()[2].schema(), other.subscription_info);
        fieldSetFlags()[2] = true;
      }
      if (other.hasSubscriptionInfoBuilder()) {
        this.subscription_infoBuilder = com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.newBuilder(other.getSubscriptionInfoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing SkuAvailability instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sku_reference)) {
        this.sku_reference = data().deepCopy(fields()[0].schema(), other.sku_reference);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.availability_info)) {
        this.availability_info = data().deepCopy(fields()[1].schema(), other.availability_info);
        fieldSetFlags()[1] = true;
      }
      this.availability_infoBuilder = null;
      if (isValidValue(fields()[2], other.subscription_info)) {
        this.subscription_info = data().deepCopy(fields()[2].schema(), other.subscription_info);
        fieldSetFlags()[2] = true;
      }
      this.subscription_infoBuilder = null;
    }

    /**
      * Gets the value of the 'sku_reference' field.
      * Sku's identifier
      * @return The value.
      */
    public java.lang.CharSequence getSkuReference() {
      return sku_reference;
    }

    /**
      * Sets the value of the 'sku_reference' field.
      * Sku's identifier
      * @param value The value of 'sku_reference'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder setSkuReference(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.sku_reference = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sku_reference' field has been set.
      * Sku's identifier
      * @return True if the 'sku_reference' field has been set, false otherwise.
      */
    public boolean hasSkuReference() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sku_reference' field.
      * Sku's identifier
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder clearSkuReference() {
      sku_reference = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'availability_info' field.
      * The availability information of a sku
      * @return The value.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo getAvailabilityInfo() {
      return availability_info;
    }

    /**
      * Sets the value of the 'availability_info' field.
      * The availability information of a sku
      * @param value The value of 'availability_info'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder setAvailabilityInfo(com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo value) {
      validate(fields()[1], value);
      this.availability_infoBuilder = null;
      this.availability_info = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'availability_info' field has been set.
      * The availability information of a sku
      * @return True if the 'availability_info' field has been set, false otherwise.
      */
    public boolean hasAvailabilityInfo() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'availability_info' field and creates one if it doesn't exist yet.
     * The availability information of a sku
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo.Builder getAvailabilityInfoBuilder() {
      if (availability_infoBuilder == null) {
        if (hasAvailabilityInfo()) {
          setAvailabilityInfoBuilder(com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo.newBuilder(availability_info));
        } else {
          setAvailabilityInfoBuilder(com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo.newBuilder());
        }
      }
      return availability_infoBuilder;
    }

    /**
     * Sets the Builder instance for the 'availability_info' field
     * The availability information of a sku
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder setAvailabilityInfoBuilder(com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo.Builder value) {
      clearAvailabilityInfo();
      availability_infoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'availability_info' field has an active Builder instance
     * The availability information of a sku
     * @return True if the 'availability_info' field has an active Builder instance
     */
    public boolean hasAvailabilityInfoBuilder() {
      return availability_infoBuilder != null;
    }

    /**
      * Clears the value of the 'availability_info' field.
      * The availability information of a sku
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder clearAvailabilityInfo() {
      availability_info = null;
      availability_infoBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'subscription_info' field.
      * The subscription information of a sku
      * @return The value.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo getSubscriptionInfo() {
      return subscription_info;
    }

    /**
      * Sets the value of the 'subscription_info' field.
      * The subscription information of a sku
      * @param value The value of 'subscription_info'.
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder setSubscriptionInfo(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo value) {
      validate(fields()[2], value);
      this.subscription_infoBuilder = null;
      this.subscription_info = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'subscription_info' field has been set.
      * The subscription information of a sku
      * @return True if the 'subscription_info' field has been set, false otherwise.
      */
    public boolean hasSubscriptionInfo() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'subscription_info' field and creates one if it doesn't exist yet.
     * The subscription information of a sku
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder getSubscriptionInfoBuilder() {
      if (subscription_infoBuilder == null) {
        if (hasSubscriptionInfo()) {
          setSubscriptionInfoBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.newBuilder(subscription_info));
        } else {
          setSubscriptionInfoBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.newBuilder());
        }
      }
      return subscription_infoBuilder;
    }

    /**
     * Sets the Builder instance for the 'subscription_info' field
     * The subscription information of a sku
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder setSubscriptionInfoBuilder(com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo.Builder value) {
      clearSubscriptionInfo();
      subscription_infoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'subscription_info' field has an active Builder instance
     * The subscription information of a sku
     * @return True if the 'subscription_info' field has an active Builder instance
     */
    public boolean hasSubscriptionInfoBuilder() {
      return subscription_infoBuilder != null;
    }

    /**
      * Clears the value of the 'subscription_info' field.
      * The subscription information of a sku
      * @return This builder.
      */
    public com.inditex.mecc.mecprsku.api.avro.v2.SkuAvailability.Builder clearSubscriptionInfo() {
      subscription_info = null;
      subscription_infoBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SkuAvailability build() {
      try {
        SkuAvailability record = new SkuAvailability();
        record.sku_reference = fieldSetFlags()[0] ? this.sku_reference : (java.lang.CharSequence) defaultValue(fields()[0]);
        if (availability_infoBuilder != null) {
          record.availability_info = this.availability_infoBuilder.build();
        } else {
          record.availability_info = fieldSetFlags()[1] ? this.availability_info : (com.inditex.mecc.mecprsku.api.avro.v2.AvailabilityInfo) defaultValue(fields()[1]);
        }
        if (subscription_infoBuilder != null) {
          record.subscription_info = this.subscription_infoBuilder.build();
        } else {
          record.subscription_info = fieldSetFlags()[2] ? this.subscription_info : (com.inditex.mecc.mecprsku.api.avro.v2.SubscriptionInfo) defaultValue(fields()[2]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SkuAvailability>
    WRITER$ = (org.apache.avro.io.DatumWriter<SkuAvailability>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SkuAvailability>
    READER$ = (org.apache.avro.io.DatumReader<SkuAvailability>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
