/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.inditex.aqsw.pipe.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Message context attributes */
@org.apache.avro.specific.AvroGenerated
public class Metadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2409707365427646601L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Metadata\",\"namespace\":\"com.inditex.aqsw.pipe.v1\",\"doc\":\"Message context attributes\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Unique name of the entity contained in the payload. I.e. 'cart'\"},{\"name\":\"domain\",\"type\":\"string\",\"doc\":\"Functional domain of the entity contained in the payload. I.e. 'purchase'\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"Version of the entity contained in the payload\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier of the the event\",\"default\":null},{\"name\":\"timestamp\",\"type\":\"string\",\"doc\":\"Timestamp of the occurrence of the business event\"},{\"name\":\"action\",\"type\":\"string\",\"doc\":\"Identifier of the action that generated the event. I.e. 'modified'\"},{\"name\":\"envelope\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Envelope\",\"doc\":\"Data relative to the message container used to envelop the event\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the message container used. I.e. 'pipe-event'\"},{\"name\":\"version\",\"type\":\"string\",\"doc\":\"Specific container version\"}]}],\"doc\":\"Data relative to the message container used to envelop the event\",\"default\":null},{\"name\":\"classifiers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Classifier\",\"doc\":\"Defines the identity of a message using a set of keys extracted from the message payload\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the classifier in order to make comparisons between events with the same classifier defined\"},{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Ordered values that define the final classifier value\"}]}}],\"doc\":\"Set of classifiers to define different identities related with the event\",\"default\":null},{\"name\":\"extensions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Extensions\",\"namespace\":\"com.inditex.aqsw.pipe.v1.extensions\",\"doc\":\"Set of attributes for attaching common information to the event with analytic purposes\",\"fields\":[{\"name\":\"flows\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LifecycleExtension\",\"doc\":\"Information about the transition represented by the event in the life cycle of a process model or artifact\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Process model or artifact related to the event\"},{\"name\":\"domain\",\"type\":[\"null\",\"string\"],\"doc\":\"Domain of the process model or artifact related to the event\",\"default\":null},{\"name\":\"instance\",\"type\":[\"null\",\"string\"],\"doc\":\"Specific instance of the process model or artifact, if it's known\",\"default\":null},{\"name\":\"correlation\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Correlation identifiers between states of a flow. They will be defined for each functional case with the Data Architecture Analytics team.\",\"default\":null},{\"name\":\"transition\",\"type\":[\"null\",\"string\"],\"doc\":\"Lifecycle transition represented by the event\",\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"doc\":\"Specifies the state reached within the process model or the artifact lifecycle that triggered the event\",\"default\":null}]}}],\"doc\":\"Information about process models or artifacts the event is related to\",\"default\":null},{\"name\":\"geo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoExtension\",\"doc\":\"Information about geographical points and shapes related with an event\",\"fields\":[{\"name\":\"point\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoPoint\",\"doc\":\"Information about geographical points in WGS84 reference system\",\"fields\":[{\"name\":\"lon\",\"type\":\"double\",\"doc\":\"Longitude of the geopoint\"},{\"name\":\"lat\",\"type\":\"double\",\"doc\":\"Latitude of the geopoint\"}]}],\"doc\":\"Geographical point related to the event in WGS84 reference system\",\"default\":null},{\"name\":\"features\",\"type\":[\"null\",\"string\"],\"doc\":\"Geographical features related to the event in GeoJSON format\",\"default\":null}]}],\"doc\":\"Information about location related to the event\",\"default\":null}]}],\"doc\":\"Data relative to the business context that the message belongs to\",\"default\":null},{\"name\":\"relationships\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Relationship\",\"doc\":\"Represents a relationship between the message and a specific business entity\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Unique name of the entity\"},{\"name\":\"domain\",\"type\":\"string\",\"doc\":\"Functional domain. I.e. 'ECommerce'\"},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"doc\":\"Version of the entity definition\",\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"RelationshipType\",\"symbols\":[\"createdBy\",\"causes\",\"dependsOn\",\"hasA\",\"partOf\",\"memberOf\"]},\"doc\":\"Specific type of the relationship between the event and the business entity\"},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Specific data of the related entity at the moment the event is triggered\",\"default\":null}]}}],\"doc\":\"Relationship between the message and different business entities\",\"default\":null},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Context data of the message that does not belong in the definition of the main entity\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Metadata> ENCODER =
      new BinaryMessageEncoder<Metadata>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Metadata> DECODER =
      new BinaryMessageDecoder<Metadata>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Metadata> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Metadata> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Metadata>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Metadata to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Metadata from a ByteBuffer. */
  public static Metadata fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Unique name of the entity contained in the payload. I.e. 'cart' */
  @Deprecated public java.lang.CharSequence name;
  /** Functional domain of the entity contained in the payload. I.e. 'purchase' */
  @Deprecated public java.lang.CharSequence domain;
  /** Version of the entity contained in the payload */
  @Deprecated public java.lang.CharSequence version;
  /** Unique identifier of the the event */
  @Deprecated public java.lang.CharSequence id;
  /** Timestamp of the occurrence of the business event */
  @Deprecated public java.lang.CharSequence timestamp;
  /** Identifier of the action that generated the event. I.e. 'modified' */
  @Deprecated public java.lang.CharSequence action;
  /** Data relative to the message container used to envelop the event */
  @Deprecated public com.inditex.aqsw.pipe.v1.Envelope envelope;
  /** Set of classifiers to define different identities related with the event */
  @Deprecated public java.util.List<com.inditex.aqsw.pipe.v1.Classifier> classifiers;
  /** Data relative to the business context that the message belongs to */
  @Deprecated public com.inditex.aqsw.pipe.v1.extensions.Extensions extensions;
  /** Relationship between the message and different business entities */
  @Deprecated public java.util.List<com.inditex.aqsw.pipe.v1.Relationship> relationships;
  /** Context data of the message that does not belong in the definition of the main entity */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> context;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Metadata() {}

  /**
   * All-args constructor.
   * @param name Unique name of the entity contained in the payload. I.e. 'cart'
   * @param domain Functional domain of the entity contained in the payload. I.e. 'purchase'
   * @param version Version of the entity contained in the payload
   * @param id Unique identifier of the the event
   * @param timestamp Timestamp of the occurrence of the business event
   * @param action Identifier of the action that generated the event. I.e. 'modified'
   * @param envelope Data relative to the message container used to envelop the event
   * @param classifiers Set of classifiers to define different identities related with the event
   * @param extensions Data relative to the business context that the message belongs to
   * @param relationships Relationship between the message and different business entities
   * @param context Context data of the message that does not belong in the definition of the main entity
   */
  public Metadata(java.lang.CharSequence name, java.lang.CharSequence domain, java.lang.CharSequence version, java.lang.CharSequence id, java.lang.CharSequence timestamp, java.lang.CharSequence action, com.inditex.aqsw.pipe.v1.Envelope envelope, java.util.List<com.inditex.aqsw.pipe.v1.Classifier> classifiers, com.inditex.aqsw.pipe.v1.extensions.Extensions extensions, java.util.List<com.inditex.aqsw.pipe.v1.Relationship> relationships, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> context) {
    this.name = name;
    this.domain = domain;
    this.version = version;
    this.id = id;
    this.timestamp = timestamp;
    this.action = action;
    this.envelope = envelope;
    this.classifiers = classifiers;
    this.extensions = extensions;
    this.relationships = relationships;
    this.context = context;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return domain;
    case 2: return version;
    case 3: return id;
    case 4: return timestamp;
    case 5: return action;
    case 6: return envelope;
    case 7: return classifiers;
    case 8: return extensions;
    case 9: return relationships;
    case 10: return context;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: domain = (java.lang.CharSequence)value$; break;
    case 2: version = (java.lang.CharSequence)value$; break;
    case 3: id = (java.lang.CharSequence)value$; break;
    case 4: timestamp = (java.lang.CharSequence)value$; break;
    case 5: action = (java.lang.CharSequence)value$; break;
    case 6: envelope = (com.inditex.aqsw.pipe.v1.Envelope)value$; break;
    case 7: classifiers = (java.util.List<com.inditex.aqsw.pipe.v1.Classifier>)value$; break;
    case 8: extensions = (com.inditex.aqsw.pipe.v1.extensions.Extensions)value$; break;
    case 9: relationships = (java.util.List<com.inditex.aqsw.pipe.v1.Relationship>)value$; break;
    case 10: context = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return Unique name of the entity contained in the payload. I.e. 'cart'
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Unique name of the entity contained in the payload. I.e. 'cart'
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'domain' field.
   * @return Functional domain of the entity contained in the payload. I.e. 'purchase'
   */
  public java.lang.CharSequence getDomain() {
    return domain;
  }

  /**
   * Sets the value of the 'domain' field.
   * Functional domain of the entity contained in the payload. I.e. 'purchase'
   * @param value the value to set.
   */
  public void setDomain(java.lang.CharSequence value) {
    this.domain = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return Version of the entity contained in the payload
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * Version of the entity contained in the payload
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return Unique identifier of the the event
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * Unique identifier of the the event
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return Timestamp of the occurrence of the business event
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * Timestamp of the occurrence of the business event
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'action' field.
   * @return Identifier of the action that generated the event. I.e. 'modified'
   */
  public java.lang.CharSequence getAction() {
    return action;
  }

  /**
   * Sets the value of the 'action' field.
   * Identifier of the action that generated the event. I.e. 'modified'
   * @param value the value to set.
   */
  public void setAction(java.lang.CharSequence value) {
    this.action = value;
  }

  /**
   * Gets the value of the 'envelope' field.
   * @return Data relative to the message container used to envelop the event
   */
  public com.inditex.aqsw.pipe.v1.Envelope getEnvelope() {
    return envelope;
  }

  /**
   * Sets the value of the 'envelope' field.
   * Data relative to the message container used to envelop the event
   * @param value the value to set.
   */
  public void setEnvelope(com.inditex.aqsw.pipe.v1.Envelope value) {
    this.envelope = value;
  }

  /**
   * Gets the value of the 'classifiers' field.
   * @return Set of classifiers to define different identities related with the event
   */
  public java.util.List<com.inditex.aqsw.pipe.v1.Classifier> getClassifiers() {
    return classifiers;
  }

  /**
   * Sets the value of the 'classifiers' field.
   * Set of classifiers to define different identities related with the event
   * @param value the value to set.
   */
  public void setClassifiers(java.util.List<com.inditex.aqsw.pipe.v1.Classifier> value) {
    this.classifiers = value;
  }

  /**
   * Gets the value of the 'extensions' field.
   * @return Data relative to the business context that the message belongs to
   */
  public com.inditex.aqsw.pipe.v1.extensions.Extensions getExtensions() {
    return extensions;
  }

  /**
   * Sets the value of the 'extensions' field.
   * Data relative to the business context that the message belongs to
   * @param value the value to set.
   */
  public void setExtensions(com.inditex.aqsw.pipe.v1.extensions.Extensions value) {
    this.extensions = value;
  }

  /**
   * Gets the value of the 'relationships' field.
   * @return Relationship between the message and different business entities
   */
  public java.util.List<com.inditex.aqsw.pipe.v1.Relationship> getRelationships() {
    return relationships;
  }

  /**
   * Sets the value of the 'relationships' field.
   * Relationship between the message and different business entities
   * @param value the value to set.
   */
  public void setRelationships(java.util.List<com.inditex.aqsw.pipe.v1.Relationship> value) {
    this.relationships = value;
  }

  /**
   * Gets the value of the 'context' field.
   * @return Context data of the message that does not belong in the definition of the main entity
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getContext() {
    return context;
  }

  /**
   * Sets the value of the 'context' field.
   * Context data of the message that does not belong in the definition of the main entity
   * @param value the value to set.
   */
  public void setContext(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.context = value;
  }

  /**
   * Creates a new Metadata RecordBuilder.
   * @return A new Metadata RecordBuilder
   */
  public static com.inditex.aqsw.pipe.v1.Metadata.Builder newBuilder() {
    return new com.inditex.aqsw.pipe.v1.Metadata.Builder();
  }

  /**
   * Creates a new Metadata RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Metadata RecordBuilder
   */
  public static com.inditex.aqsw.pipe.v1.Metadata.Builder newBuilder(com.inditex.aqsw.pipe.v1.Metadata.Builder other) {
    return new com.inditex.aqsw.pipe.v1.Metadata.Builder(other);
  }

  /**
   * Creates a new Metadata RecordBuilder by copying an existing Metadata instance.
   * @param other The existing instance to copy.
   * @return A new Metadata RecordBuilder
   */
  public static com.inditex.aqsw.pipe.v1.Metadata.Builder newBuilder(com.inditex.aqsw.pipe.v1.Metadata other) {
    return new com.inditex.aqsw.pipe.v1.Metadata.Builder(other);
  }

  /**
   * RecordBuilder for Metadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Metadata>
    implements org.apache.avro.data.RecordBuilder<Metadata> {

    /** Unique name of the entity contained in the payload. I.e. 'cart' */
    private java.lang.CharSequence name;
    /** Functional domain of the entity contained in the payload. I.e. 'purchase' */
    private java.lang.CharSequence domain;
    /** Version of the entity contained in the payload */
    private java.lang.CharSequence version;
    /** Unique identifier of the the event */
    private java.lang.CharSequence id;
    /** Timestamp of the occurrence of the business event */
    private java.lang.CharSequence timestamp;
    /** Identifier of the action that generated the event. I.e. 'modified' */
    private java.lang.CharSequence action;
    /** Data relative to the message container used to envelop the event */
    private com.inditex.aqsw.pipe.v1.Envelope envelope;
    private com.inditex.aqsw.pipe.v1.Envelope.Builder envelopeBuilder;
    /** Set of classifiers to define different identities related with the event */
    private java.util.List<com.inditex.aqsw.pipe.v1.Classifier> classifiers;
    /** Data relative to the business context that the message belongs to */
    private com.inditex.aqsw.pipe.v1.extensions.Extensions extensions;
    private com.inditex.aqsw.pipe.v1.extensions.Extensions.Builder extensionsBuilder;
    /** Relationship between the message and different business entities */
    private java.util.List<com.inditex.aqsw.pipe.v1.Relationship> relationships;
    /** Context data of the message that does not belong in the definition of the main entity */
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> context;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.inditex.aqsw.pipe.v1.Metadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.domain)) {
        this.domain = data().deepCopy(fields()[1].schema(), other.domain);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.action)) {
        this.action = data().deepCopy(fields()[5].schema(), other.action);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.envelope)) {
        this.envelope = data().deepCopy(fields()[6].schema(), other.envelope);
        fieldSetFlags()[6] = true;
      }
      if (other.hasEnvelopeBuilder()) {
        this.envelopeBuilder = com.inditex.aqsw.pipe.v1.Envelope.newBuilder(other.getEnvelopeBuilder());
      }
      if (isValidValue(fields()[7], other.classifiers)) {
        this.classifiers = data().deepCopy(fields()[7].schema(), other.classifiers);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.extensions)) {
        this.extensions = data().deepCopy(fields()[8].schema(), other.extensions);
        fieldSetFlags()[8] = true;
      }
      if (other.hasExtensionsBuilder()) {
        this.extensionsBuilder = com.inditex.aqsw.pipe.v1.extensions.Extensions.newBuilder(other.getExtensionsBuilder());
      }
      if (isValidValue(fields()[9], other.relationships)) {
        this.relationships = data().deepCopy(fields()[9].schema(), other.relationships);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.context)) {
        this.context = data().deepCopy(fields()[10].schema(), other.context);
        fieldSetFlags()[10] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Metadata instance
     * @param other The existing instance to copy.
     */
    private Builder(com.inditex.aqsw.pipe.v1.Metadata other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.domain)) {
        this.domain = data().deepCopy(fields()[1].schema(), other.domain);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.action)) {
        this.action = data().deepCopy(fields()[5].schema(), other.action);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.envelope)) {
        this.envelope = data().deepCopy(fields()[6].schema(), other.envelope);
        fieldSetFlags()[6] = true;
      }
      this.envelopeBuilder = null;
      if (isValidValue(fields()[7], other.classifiers)) {
        this.classifiers = data().deepCopy(fields()[7].schema(), other.classifiers);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.extensions)) {
        this.extensions = data().deepCopy(fields()[8].schema(), other.extensions);
        fieldSetFlags()[8] = true;
      }
      this.extensionsBuilder = null;
      if (isValidValue(fields()[9], other.relationships)) {
        this.relationships = data().deepCopy(fields()[9].schema(), other.relationships);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.context)) {
        this.context = data().deepCopy(fields()[10].schema(), other.context);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * Unique name of the entity contained in the payload. I.e. 'cart'
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * Unique name of the entity contained in the payload. I.e. 'cart'
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Unique name of the entity contained in the payload. I.e. 'cart'
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * Unique name of the entity contained in the payload. I.e. 'cart'
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'domain' field.
      * Functional domain of the entity contained in the payload. I.e. 'purchase'
      * @return The value.
      */
    public java.lang.CharSequence getDomain() {
      return domain;
    }

    /**
      * Sets the value of the 'domain' field.
      * Functional domain of the entity contained in the payload. I.e. 'purchase'
      * @param value The value of 'domain'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setDomain(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.domain = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'domain' field has been set.
      * Functional domain of the entity contained in the payload. I.e. 'purchase'
      * @return True if the 'domain' field has been set, false otherwise.
      */
    public boolean hasDomain() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'domain' field.
      * Functional domain of the entity contained in the payload. I.e. 'purchase'
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearDomain() {
      domain = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * Version of the entity contained in the payload
      * @return The value.
      */
    public java.lang.CharSequence getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * Version of the entity contained in the payload
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.version = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * Version of the entity contained in the payload
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'version' field.
      * Version of the entity contained in the payload
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearVersion() {
      version = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * Unique identifier of the the event
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * Unique identifier of the the event
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Unique identifier of the the event
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'id' field.
      * Unique identifier of the the event
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearId() {
      id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Timestamp of the occurrence of the business event
      * @return The value.
      */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * Timestamp of the occurrence of the business event
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Timestamp of the occurrence of the business event
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Timestamp of the occurrence of the business event
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'action' field.
      * Identifier of the action that generated the event. I.e. 'modified'
      * @return The value.
      */
    public java.lang.CharSequence getAction() {
      return action;
    }

    /**
      * Sets the value of the 'action' field.
      * Identifier of the action that generated the event. I.e. 'modified'
      * @param value The value of 'action'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setAction(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.action = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'action' field has been set.
      * Identifier of the action that generated the event. I.e. 'modified'
      * @return True if the 'action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'action' field.
      * Identifier of the action that generated the event. I.e. 'modified'
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearAction() {
      action = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'envelope' field.
      * Data relative to the message container used to envelop the event
      * @return The value.
      */
    public com.inditex.aqsw.pipe.v1.Envelope getEnvelope() {
      return envelope;
    }

    /**
      * Sets the value of the 'envelope' field.
      * Data relative to the message container used to envelop the event
      * @param value The value of 'envelope'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setEnvelope(com.inditex.aqsw.pipe.v1.Envelope value) {
      validate(fields()[6], value);
      this.envelopeBuilder = null;
      this.envelope = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'envelope' field has been set.
      * Data relative to the message container used to envelop the event
      * @return True if the 'envelope' field has been set, false otherwise.
      */
    public boolean hasEnvelope() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'envelope' field and creates one if it doesn't exist yet.
     * Data relative to the message container used to envelop the event
     * @return This builder.
     */
    public com.inditex.aqsw.pipe.v1.Envelope.Builder getEnvelopeBuilder() {
      if (envelopeBuilder == null) {
        if (hasEnvelope()) {
          setEnvelopeBuilder(com.inditex.aqsw.pipe.v1.Envelope.newBuilder(envelope));
        } else {
          setEnvelopeBuilder(com.inditex.aqsw.pipe.v1.Envelope.newBuilder());
        }
      }
      return envelopeBuilder;
    }

    /**
     * Sets the Builder instance for the 'envelope' field
     * Data relative to the message container used to envelop the event
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setEnvelopeBuilder(com.inditex.aqsw.pipe.v1.Envelope.Builder value) {
      clearEnvelope();
      envelopeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'envelope' field has an active Builder instance
     * Data relative to the message container used to envelop the event
     * @return True if the 'envelope' field has an active Builder instance
     */
    public boolean hasEnvelopeBuilder() {
      return envelopeBuilder != null;
    }

    /**
      * Clears the value of the 'envelope' field.
      * Data relative to the message container used to envelop the event
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearEnvelope() {
      envelope = null;
      envelopeBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'classifiers' field.
      * Set of classifiers to define different identities related with the event
      * @return The value.
      */
    public java.util.List<com.inditex.aqsw.pipe.v1.Classifier> getClassifiers() {
      return classifiers;
    }

    /**
      * Sets the value of the 'classifiers' field.
      * Set of classifiers to define different identities related with the event
      * @param value The value of 'classifiers'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setClassifiers(java.util.List<com.inditex.aqsw.pipe.v1.Classifier> value) {
      validate(fields()[7], value);
      this.classifiers = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'classifiers' field has been set.
      * Set of classifiers to define different identities related with the event
      * @return True if the 'classifiers' field has been set, false otherwise.
      */
    public boolean hasClassifiers() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'classifiers' field.
      * Set of classifiers to define different identities related with the event
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearClassifiers() {
      classifiers = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'extensions' field.
      * Data relative to the business context that the message belongs to
      * @return The value.
      */
    public com.inditex.aqsw.pipe.v1.extensions.Extensions getExtensions() {
      return extensions;
    }

    /**
      * Sets the value of the 'extensions' field.
      * Data relative to the business context that the message belongs to
      * @param value The value of 'extensions'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setExtensions(com.inditex.aqsw.pipe.v1.extensions.Extensions value) {
      validate(fields()[8], value);
      this.extensionsBuilder = null;
      this.extensions = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'extensions' field has been set.
      * Data relative to the business context that the message belongs to
      * @return True if the 'extensions' field has been set, false otherwise.
      */
    public boolean hasExtensions() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'extensions' field and creates one if it doesn't exist yet.
     * Data relative to the business context that the message belongs to
     * @return This builder.
     */
    public com.inditex.aqsw.pipe.v1.extensions.Extensions.Builder getExtensionsBuilder() {
      if (extensionsBuilder == null) {
        if (hasExtensions()) {
          setExtensionsBuilder(com.inditex.aqsw.pipe.v1.extensions.Extensions.newBuilder(extensions));
        } else {
          setExtensionsBuilder(com.inditex.aqsw.pipe.v1.extensions.Extensions.newBuilder());
        }
      }
      return extensionsBuilder;
    }

    /**
     * Sets the Builder instance for the 'extensions' field
     * Data relative to the business context that the message belongs to
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setExtensionsBuilder(com.inditex.aqsw.pipe.v1.extensions.Extensions.Builder value) {
      clearExtensions();
      extensionsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'extensions' field has an active Builder instance
     * Data relative to the business context that the message belongs to
     * @return True if the 'extensions' field has an active Builder instance
     */
    public boolean hasExtensionsBuilder() {
      return extensionsBuilder != null;
    }

    /**
      * Clears the value of the 'extensions' field.
      * Data relative to the business context that the message belongs to
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearExtensions() {
      extensions = null;
      extensionsBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'relationships' field.
      * Relationship between the message and different business entities
      * @return The value.
      */
    public java.util.List<com.inditex.aqsw.pipe.v1.Relationship> getRelationships() {
      return relationships;
    }

    /**
      * Sets the value of the 'relationships' field.
      * Relationship between the message and different business entities
      * @param value The value of 'relationships'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setRelationships(java.util.List<com.inditex.aqsw.pipe.v1.Relationship> value) {
      validate(fields()[9], value);
      this.relationships = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'relationships' field has been set.
      * Relationship between the message and different business entities
      * @return True if the 'relationships' field has been set, false otherwise.
      */
    public boolean hasRelationships() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'relationships' field.
      * Relationship between the message and different business entities
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearRelationships() {
      relationships = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'context' field.
      * Context data of the message that does not belong in the definition of the main entity
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getContext() {
      return context;
    }

    /**
      * Sets the value of the 'context' field.
      * Context data of the message that does not belong in the definition of the main entity
      * @param value The value of 'context'.
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder setContext(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.context = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'context' field has been set.
      * Context data of the message that does not belong in the definition of the main entity
      * @return True if the 'context' field has been set, false otherwise.
      */
    public boolean hasContext() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'context' field.
      * Context data of the message that does not belong in the definition of the main entity
      * @return This builder.
      */
    public com.inditex.aqsw.pipe.v1.Metadata.Builder clearContext() {
      context = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Metadata build() {
      try {
        Metadata record = new Metadata();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.domain = fieldSetFlags()[1] ? this.domain : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.version = fieldSetFlags()[2] ? this.version : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.id = fieldSetFlags()[3] ? this.id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.timestamp = fieldSetFlags()[4] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.action = fieldSetFlags()[5] ? this.action : (java.lang.CharSequence) defaultValue(fields()[5]);
        if (envelopeBuilder != null) {
          record.envelope = this.envelopeBuilder.build();
        } else {
          record.envelope = fieldSetFlags()[6] ? this.envelope : (com.inditex.aqsw.pipe.v1.Envelope) defaultValue(fields()[6]);
        }
        record.classifiers = fieldSetFlags()[7] ? this.classifiers : (java.util.List<com.inditex.aqsw.pipe.v1.Classifier>) defaultValue(fields()[7]);
        if (extensionsBuilder != null) {
          record.extensions = this.extensionsBuilder.build();
        } else {
          record.extensions = fieldSetFlags()[8] ? this.extensions : (com.inditex.aqsw.pipe.v1.extensions.Extensions) defaultValue(fields()[8]);
        }
        record.relationships = fieldSetFlags()[9] ? this.relationships : (java.util.List<com.inditex.aqsw.pipe.v1.Relationship>) defaultValue(fields()[9]);
        record.context = fieldSetFlags()[10] ? this.context : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[10]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Metadata>
    WRITER$ = (org.apache.avro.io.DatumWriter<Metadata>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Metadata>
    READER$ = (org.apache.avro.io.DatumReader<Metadata>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
